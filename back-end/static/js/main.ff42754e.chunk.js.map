{"version":3,"sources":["global/components/Forms/Login.jsx","global/variables/auth.js","global/Querys/Query.js","global/variables/os.js","global/views/LoginView.jsx","global/components/Head.jsx","global/components/Option.jsx","global/components/Option2.jsx","global/views/Home.jsx","global/variables/informacion.js","global/routes/ProtectedRoutes.js","global/components/Head2.jsx","global/components/Forms/AddPaciente.jsx","global/views/AddPacienteView.jsx","global/components/simplecomponents/IconText.jsx","global/components/List/ListP.jsx","global/views/ListPaciente.jsx","global/components/Forms/CardPaciente.jsx","global/components/Forms/AddExpediente.jsx","global/components/card/CardFormE.jsx","global/views/ExpedientePaciente.jsx","global/views/Error404.jsx","global/components/Forms/UpdatePacient.jsx","global/views/UpdatePacienteview.jsx","global/components/card/CardPaciente2.jsx","global/views/InfoPaciente.jsx","global/components/card/CardExp.jsx","global/views/InfoExpediente.jsx","global/components/Forms/FormNoteE.jsx","global/views/FomrNotesView.jsx","global/components/card/CardNotesE.jsx","global/views/NotasE.jsx","global/components/Forms/UpdateExpedient.jsx","global/views/EditExpedient.jsx","global/components/card/CardNoteE.jsx","global/views/NoteEView.jsx","global/components/Forms/UpdateNoteEForm.jsx","global/views/EditNoteEView.jsx","global/components/Forms/AddMedicine.jsx","global/views/MedicineView.jsx","global/components/List/ListM.jsx","global/views/Medicineslist.jsx","global/components/Forms/UpdateMedicineForm.jsx","global/views/UpdateMedicine.jsx","global/components/card/CardMedicine.jsx","global/views/MedicinView.jsx","global/components/List/LispE.jsx","global/views/ViewEps.jsx","global/views/Familiar.jsx","global/views/Nav.jsx","global/routes/PublicRoute.js","global/Session.jsx","global/App.js","index.js"],"names":["Login","getFieldDecorator","this","props","form","onSubmit","e","preventDefault","validateFields","err","values","console","user","username","password","mutation","variables","className","Item","rules","required","message","prefix","type","style","color","placeholder","htmlType","icon","onClick","window","location","Component","Form","create","name","authentication","cb","USER_LOGIN","gql","VERIFY_TOKEN","ADD_NOTEE","ADD_PACIENTE","UPDATE_PATIENT","UPDATE_EXPEDIENTE","CREAT_EXPEDIENTE","UPDATE_MEDICINE","UPDATE_NOTE_EXPEDIENT","DELETE_MEDICINE","DELETE_NOTE_EXPEDIENT","DELETE_EXPEDIENT","ADD_MEDICINE","SEARCH_PATIENT","SEARCH_MEDICINE","SEARCH_EXPEDIENT","url","Header","Layout","Content","Footer","LoginView","useMutation","onCompleted","data","localStorage","setItem","tokenAuth","token","href","onError","error","clear","Swal","fire","title","login","minHeight","background","padding","tags","justify","textAlign","Head","extra","key","size","function","Meta","Card","Option","state","visible","ruta","url2","ruta2","showModal","setState","handlerOk","handlerCancel","cover","alt","src","img","actions","to","onOk","onCancel","description","Option2","Home","id","history","push","margin","gutter","lg","span","md","xs","ProtectedRoutes","component","rest","getItem","render","pathname","from","Head2","subTitle","subtitle","onBack","back","AddPaciente","handlerSubmit","validateFieldsAndScroll","value","format","input","nombre","apellidos","last_name","birthday","date_picker","edad","age","telefono","phone","estado","ciudad","city","colonia","curp","layout","labelCol","sm","wrapperCol","label","max","locale","initialValue","min","width","offset","AddPacienteView","createPaciente","pacienteUser","text","then","result","paciente","IconText","theme","direccion","twoToneColor","Select","Search","Input","ListP","showModal2","visible2","handlerOk2","handlerCancel2","fetchData","reqwest","method","query","headers","Authorization","success","res","handleChange","bind","page","loading","total","pages","busqueda","valor","pacientes","json","log","itemLayout","dataSource","pagination","onChange","pageSize","footer","borderColor","renderItem","item","toUpperCase","defaultValue","onSearch","por","setTimeout","busquedap","enterButton","React","ListPaciente","useLazyQuery","pacotient","CardPaciente","date","axios","patient","children2","AddExpediente","children","handleSubmit","medicines","i","medicine","length","split","pulso","temperatura","respiracion","precionD","presion_d","precionS","presion_s","medicinas","mode","with","CardFormE","expedient","ExpedientePaciente","useParams","Error404","status","UpdatePaciente","fecha","info","callback","prefixSelector","addonBefore","UpdatePacienteView","UpdatePacient","CardPaciente2","familiar","pushState","delete","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","expedientes","shownodal","crear","encasoDeEmergencia","expedienteSet","InfoPaciente","reload","dele","CardExp","titulo","precioD","precioS","precion","grado","precions","preciond","parseInt","numero","precio","showIcon","formula","docis","InfoExpediente","FormNoteE","target","tittle","nota","note","expediente","setFieldsValue","SVGComponentTransferFunctionElement","TextArea","autosize","minRows","maxRows","FormNotesView","notes","CardNotesE","ok","notesexpedientSet","NotasE","noted","UpdateExpedient","isNullOrUndefined","dato","datos","EditExpedient","CardNoteE","noteexpedient","bordered","hora","NoteEView","UpdateNoteEForm","EditNoteEView","AddMedicine","formule","descripcion","stock","laboratorio","disponible","MedicineView","ListM","busquedam","Medicineslist","medicin","delet","UpdateMedicineForm","medicina","UpdateMedicine","update","CardMedicine","MedicinView","LispE","expedients","hoara","busquedae","ViewEps","search","Familiar","Sider","SubMenu","Menu","Nav","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapse","defaultSelectedKeys","exact","path","PublicRoute","Session","App","removeItem","VERIFY","httplink","createHttpLink","uri","authLink","ApolloLink","operation","forward","setContext","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","document","getElementById"],"mappings":"+aAKOA,E,iLAIM,IAAD,OAsBGC,EAAoBC,KAAKC,MAAMC,KAA/BH,kBACP,OACI,kBAAC,IAAD,CAAMI,SAjBY,SAACC,GACvBA,EAAEC,iBACF,EAAKJ,MAAMC,KAAKI,gBAAe,SAACC,EAAIC,GAChC,GAAGD,EAAIE,QAAQF,IAAIA,OACf,CACA,IAAIG,EAAM,CACNC,SAASH,EAAOG,SAChBC,SAASJ,EAAOI,UAEpB,EAAKX,MAAMY,SAAS,CAACC,UAAU,CAACH,SAASD,EAAKC,SAAUC,SAASF,EAAKE,iBAQ5CG,UAAU,cACpC,kBAAC,IAAKC,KAAN,KACKjB,EAAkB,WAAW,CAC1BkB,MAAM,CACF,CAACC,UAAS,EAAKC,QAAQ,iDAF9BpB,CAKG,kBAAC,IAAD,CACIqB,OAAQ,kBAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAACC,MAAM,qBACxCC,YAAY,wBAGxB,kBAAC,IAAKR,KAAN,KACKjB,EAAkB,WAAW,CAC1BkB,MAAM,CAAC,CAACC,UAAS,EAAKC,QAAQ,2CADjCpB,CAGG,kBAAC,IAAD,CACIqB,OAAQ,kBAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAACC,MAAM,qBACxCF,KAAK,WACLG,YAAY,eAIxB,kBAAC,IAAKR,KAAN,KACQ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQK,KAAK,UAAUI,SAAS,SAASC,KAAK,QAASX,UAAU,qBAAjE,uBAGA,kBAAC,IAAD,CAAQY,QAjDN,WAClBC,OAAOC,SAAU,gCAgDgCR,KAAK,QAAQN,UAAU,qBAAxD,wB,GAxDPe,aAiENhC,IAAQiC,IAAKC,OAAO,CAAEC,KAAM,gBAApBF,CAAsCjC,G,WClD9C,I,WAlBX,aAAc,oBACVE,KAAKkC,gBAAiB,E,kDAIpBC,GACJnC,KAAKkC,gBAAiB,EACtBC,M,6BAGKA,GACHnC,KAAKkC,gBAAiB,EACtBC,M,yCAGA,OAAOnC,KAAKkC,mB,uhHCdpB,IAAME,EAAaC,YAAH,KAMVC,EAAeD,YAAH,KAQZE,EAAYF,YAAH,KASTG,EAAeH,YAAH,KAYZI,EAAiBJ,YAAH,KAWdK,EAAkBL,YAAD,KAUjBM,GAAmBN,YAAH,KAUhBO,GAAkBP,YAAH,KASfQ,GAAuBR,YAAF,KAUrBS,GAAgBT,YAAD,KAMfU,GAAsBV,YAAD,KAMrBW,GAAiBX,YAAD,KAMhBY,GAAeZ,YAAH,KAUZa,GAAiBb,YAAH,KAUdc,GAAiBd,YAAF,KAQfe,GAAmBf,YAAH,K,IAYCA,YAAH,KAmBCA,YAAH,K,kBCrKZgB,GAAM,iCAENjC,GAAM,yBCMLkC,GAAyBC,IAAzBD,OAAOE,GAAkBD,IAAlBC,QAAQC,GAAUF,IAAVE,OA0DPC,OAtDf,SAAmBzD,GAAQ,MAEV0D,YAAYvB,EAAW,CACpCwB,YADoC,SACxBC,GAGNC,aAAaC,QAAQ,UAAU,GAC/BD,aAAaC,QAAQ,QAAQF,EAAKG,UAAUC,OAC5CrC,OAAOC,SAASqC,KAAhB,UAAyB9C,GAAzB,SAKN+C,QAXoC,SAW5BC,GAGJN,aAAaO,QAEfC,KAAKC,KAAK,CACNC,MAAM,QACN9C,KAAK,aAlBN+C,EAFkB,oBAyBrB,OACE,kBAAC,IAAD,CAAQ1D,UAAU,SAASO,MAAO,CAAEoD,UAAW,UAC9C,kBAACpB,GAAD,CAAQhC,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IAC3C,kBAAC,IAAD,CACAC,KAAM,kBAAC,IAAD,CAAKtD,MAAM,QAAX,cACNiD,MAAM,gBAET,kBAAChB,GAAD,CAASlC,MAAO,CAAEsD,QAAS,WAC3B,6BAAS,6BACT,kBAAC,IAAD,CAAKvD,KAAK,OAAOyD,QAAQ,UACxB,yBAAKxD,MAAO,CAAEqD,WAAY,OAAQC,QAAS,GAAIF,UAAW,MAEtD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACA,kBAAC,EAAD,CAAO7D,SAAU4D,SAOxB,kBAAChB,GAAD,CAAQnC,MAAO,CAAEyD,UAAW,WAA5B,iC,mBCvDM,SAASC,GAAK/E,GACzB,OACI,kBAAC,IAAD,CACAc,UAAU,SACVyD,MAAOvE,EAAMgC,KACbgD,MAAO,CACH,kBAAC,IAAD,CAAQC,IAAI,IAAI7D,KAAK,QAAQK,KAAK,SAASyD,KAAK,QAAQxD,QAAS1B,EAAMmF,UAAvE,Y,uBCNLC,GAAQC,IAARD,KA4DQE,G,2MA1DXC,MAAQ,CACJC,SAAQ,EACRpC,IAAI,SAAD,OAAU,EAAKpD,MAAMyF,MACxBC,KAAK,SAAD,OAAU,EAAK1F,MAAM2F,Q,EAE7BC,UAAY,WACR,EAAKC,SAAS,CACVL,SAAQ,K,EAGhBM,UAAY,SAAA3F,GAER,EAAK0F,SAAS,CACVL,SAAQ,K,EAIhBO,cAAe,SAAA5F,GAEX,EAAK0F,SAAS,CACNL,SAAQ,K,wEAMhB,OACA,6BACI,kBAAC,IAAD,CACIQ,MACI,yBACIC,IAAKlG,KAAKC,MAAMiG,IAChBC,IAAKnG,KAAKC,MAAMmG,MAGxBC,QAAS,CACL,kBAAC,KAAD,CAAMC,GAAItG,KAAKwF,MAAMnC,KAAK,kBAAC,IAAD,CAAMhC,KAAK,WAAa6D,IAAI,aACtD,kBAAC,KAAD,CAAMoB,GAAItG,KAAKwF,MAAMG,MAAM,kBAAC,IAAD,CAAMtE,KAAK,OAAO6D,IAAI,UACjD,kBAAC,IAAD,CAAM7D,KAAK,cAAcM,QAAS3B,KAAK6F,UAAWX,IAAI,eAE1D,kBAACG,GAAD,CACIb,MAAOxE,KAAKC,MAAMuE,SAI1B,kBAAC,KAAD,CACIA,MAAOxE,KAAKC,MAAMuE,MAClBiB,QAASzF,KAAKwF,MAAMC,QAEpBc,KAAMvG,KAAK+F,UACXS,SAAUxG,KAAKgG,eACf,2BAAIhG,KAAKC,MAAMwG,mB,GApDV3E,aCDduD,GAAQC,IAARD,KA0DQqB,G,2MAxDXlB,MAAQ,CACJC,SAAQ,EACRpC,IAAI,SAAD,OAAU,EAAKpD,MAAMyF,O,EAE5BG,UAAY,WACR,EAAKC,SAAS,CACVL,SAAQ,K,EAGhBM,UAAY,SAAA3F,GAER,EAAK0F,SAAS,CACVL,SAAQ,K,EAIhBO,cAAe,SAAA5F,GAEX,EAAK0F,SAAS,CACNL,SAAQ,K,wEAMhB,OACA,6BACI,kBAAC,IAAD,CACIQ,MACI,yBACIC,IAAKlG,KAAKC,MAAMiG,IAChBC,IAAKnG,KAAKC,MAAMmG,MAGxBC,QAAS,CACL,kBAAC,KAAD,CAAMC,GAAItG,KAAKwF,MAAMnC,KAAK,kBAAC,IAAD,CAAMhC,KAAK,WAAa6D,IAAI,aACtD,kBAAC,IAAD,CAAM7D,KAAK,cAAcM,QAAS3B,KAAK6F,UAAWX,IAAI,eAE1D,kBAAC,GAAD,CACIV,MAAOxE,KAAKC,MAAMuE,SAI1B,kBAAC,KAAD,CACIA,MAAOxE,KAAKC,MAAMuE,MAClBiB,QAASzF,KAAKwF,MAAMC,QAEpBc,KAAMvG,KAAK+F,UACXS,SAAUxG,KAAKgG,eACf,2BAAIhG,KAAKC,MAAMwG,mB,GAlDT3E,aCEdwB,GAAqBC,IAArBD,OAAQE,GAAaD,IAAbC,QA0CDmD,G,iLArCJ,IAAD,OAOJ,OACI,6BACE,kBAAC,GAAD,CAASC,GAAG,OAAOtF,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IACvD,kBAACI,GAAD,CAAM/C,KAAK,aAAamD,SATrB,WACTtB,aAAaO,QACb,EAAKpE,MAAM4G,QAAQC,KAAK,SASpB,kBAAC,GAAD,CAASxF,MAAO,CAAEyF,OAAQ,gBACxB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACxD,kBAAC,IAAD,CAAKrD,KAAK,OAAO2F,OAAQ,IACrB,kBAAC,IAAD,CAAKC,GAAI,CAACC,KAAK,GAAIC,GAAI,CAACD,KAAK,IAAKE,GAAI,CAACF,KAAK,KACxC,kBAAC,GAAD,CAASd,IAAI,wCAAwCF,IAAI,WAAWR,KAAK,eAAee,YC3BhG,6GD2B0HjC,MAAM,cAE5H,kBAAC,IAAD,CAAKyC,GAAI,CAACC,KAAK,GAAIC,GAAI,CAACD,KAAK,IAAKE,GAAI,CAACF,KAAK,KACxC,kBAAC,GAAD,CAAUd,IAAI,wCAAwCV,KAAK,eAAeQ,IAAI,YAAY1B,MAAM,YAAYiC,YC7BvH,kED+BO,kBAAC,IAAD,CAAKQ,GAAI,CAACC,KAAK,GAAIC,GAAI,CAACD,KAAK,IAAKE,GAAI,CAACF,KAAK,KACxC,kBAAC,GAAD,CAASd,IAAI,sBAAsBF,IAAI,WAAWR,KAAK,WAAWE,MAAM,YAAYpB,MAAM,YAAYiC,YC9BlH,6FDgCQ,kBAAC,IAAD,CAAKQ,GAAI,CAACC,KAAK,GAAIC,GAAI,CAACD,KAAK,IAAKE,GAAI,CAACF,KAAK,KACxC,kBAAC,GAAD,CAAQd,IAAI,0CAA0CV,KAAK,aAAaQ,IAAI,cAAc1B,MAAM,cAAciC,YClCxH,0H,GDOK3E,a,UEPf2C,IAAM,EACG4C,GAAkB,SAAC,GAAmC,IAAvBvF,EAAsB,EAAjCwF,UAAwBC,EAAS,8BAI9D,OAHGzD,aAAa0D,QAAQ,aACpB/C,IAAM,GAGN,kBAAC,KAAD,iBAAW8C,EAAX,CAAiBE,OACb,SAACxH,GACG,OACCwE,GAAQ,kBAAC3C,EAAc7B,GACvB,kBAAC,KAAD,CAAUqG,GAAI,CACXoB,SAAS,SACTlC,MAAM,CACFmC,KAAM1H,EAAM4B,kBCZrB,SAAS+F,GAAO3H,GAC3B,OACG,kBAAC,IAAD,CACIc,UAAU,SACVyD,MAAM,aACNqD,SAAU5H,EAAM6H,SAChBC,OAAS,WACLnG,OAAOiF,QAAQmB,QAEnB/C,MAAO,CACN,kBAAC,IAAD,CAAQC,IAAI,IAAI7D,KAAK,QAAQK,KAAK,SAASyD,KAAK,QAAQxD,QAAS1B,EAAMmF,UAAvE,Y,2CCVN6C,G,2MAGFC,cAAgB,SAAC9H,GACbA,EAAEC,iBACF,EAAKJ,MAAMC,KAAKiI,yBAAwB,SAAC5H,EAAIC,GACzC,IAAID,EAAI,CAEJ,IAAM6H,EAAM,gBACL5H,EADI,CAEP,YAAeA,EAAO,eAAe6H,OAAO,gBAG5CC,EAAM,CACNC,OAAOH,EAAMnG,KACbuG,UAAUJ,EAAMK,UAChBC,SAASN,EAAMO,YACfC,KAAKR,EAAMS,IACXC,SAASV,EAAMW,MACfC,OAAOZ,EAAM5C,MACbyD,OAAOb,EAAMc,KACbC,QAAQf,EAAMe,QACdC,KAAKhB,EAAMgB,MAGf,EAAKnJ,MAAMY,SAAS,CAACC,UAAU,CAACwH,MAAMA,U,wEASzC,IAEEvI,EAAqBC,KAAKC,MAAMC,KAAhCH,kBA4BP,OACG,kBAAC,IAAD,eAAOsJ,OAAO,YA3BK,CAClBC,SAAS,CACLlC,GAAG,CAACF,KAAK,IACTqC,GAAG,CAACrC,KAAK,IAEbsC,WAAW,CACPpC,GAAG,CAACF,KAAK,IACTqC,GAAG,CAACrC,KAAK,MAoBd,CAA6C/G,SAAUH,KAAKkI,gBACvD,kBAAC,IAAKlH,KAAN,CAAWyI,MAAM,UACZ1J,EAAkB,OAAO,CACtBkB,MAAM,CACF,CACIC,UAAU,EACVC,QAAQ,4BAJnBpB,CAOE,kBAAC,IAAD,CACCqB,OAAQ,kBAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAACC,MAAM,qBACxCC,YAAY,aAGpB,kBAAC,IAAKR,KAAN,CAAWyI,MAAM,aACR1J,EAAkB,YAAY,CAC3BkB,MAAM,CACF,CACIC,UAAS,EACTC,QAAQ,kCAJnBpB,CAOE,kBAAC,IAAD,CACCyB,YAAY,gBAGxB,kBAAC,IAAKR,KAAN,CAAWyI,MAAM,QACJ1J,EAAkB,OAAO,CACtBkB,MAAM,CACF,CACIC,UAAS,EACTC,QAAQ,wBAEZ,CACIuI,IAAI,GACJvI,QAAQ,mDARnBpB,CAWE,kBAAC,IAAD,CAAOyB,YAAY,WAGlC,kBAAC,IAAKR,KAAN,CAAWyI,MAAM,uBACJ1J,EAAkB,cA/CxB,CACXkB,MAAO,CAAC,CAAEI,KAAM,SAAUH,UAAU,EAAMC,QAAS,yBA8ClCpB,CACO,kBAAC,KAAD,CAAY4J,OAAQA,SAExC,kBAAC,IAAK3I,KAAN,CAAWyI,MAAM,QAChB1J,EAAkB,MACnB,CACI6J,aAAc,EACd3I,MAAM,CACF,CAACC,UAAS,EAAKC,QAAQ,0BAJ9BpB,CAQG,kBAAC,KAAD,CAAa8J,IAAK,EAAGH,IAAK,QAG9B,kBAAC,IAAK1I,KAAN,CAAWyI,MAAM,sBACJ1J,EAAkB,QAAQ,CACvBkB,MAAM,CACF,CACIyI,IAAI,GACJvI,QAAQ,0DAJnBpB,CAOE,kBAAC,IAAD,CACHqB,OAAQ,kBAAC,IAAD,CAAMC,KAAK,QAAQC,MAAO,CAACC,MAAM,qBACzCC,YAAY,WACZF,MAAO,CAACwI,MAAM,YAI1B,kBAAC,IAAK9I,KAAN,CAAWyI,MAAM,cACjB,kBAAC,IAAKzI,KAAN,CAAWyI,MAAM,UACJ1J,EAAkB,QAAQ,CACvB6J,aAAa,YACb3I,MAAM,CAAC,CACHC,UAAS,EACTC,QAAQ,4BAJfpB,CAME,kBAAC,IAAD,QAEf,kBAAC,IAAKiB,KAAN,CAAWyI,MAAM,UACJ1J,EAAkB,OAAO,CACtB6J,aAAa,SACb3I,MAAM,CAAC,CACHC,UAAS,EACTC,QAAQ,4BAJfpB,CAME,kBAAC,IAAD,QAEf,kBAAC,IAAKiB,KAAN,CAAWyI,MAAM,uBACJ1J,EAAkB,UAAU,CACzB6J,aAAa,mBACb3I,MAAM,CAAC,CACHC,UAAS,EACTC,QAAQ,yCAJfpB,CAME,kBAAC,IAAD,QAEf,kBAAC,IAAKiB,KAAN,MAGA,kBAAC,IAAKA,KAxHY,CACtBwI,WAAW,CACPpC,GAAG,CACCF,KAAK,GACL6C,OAAO,GAEXR,GAAG,CACCrC,KAAK,GACL6C,OAAO,KAiHC,kBAAC,IAAD,CAAQ1I,KAAK,UAAUI,SAAS,UAAhC,mB,GAzKFK,aAkLXmG,MAAclG,IAAKC,OAAO,CAACC,KAAK,YAAlBF,CAA+BkG,IC9KrD3E,GAAkBC,IAAlBD,OAAOE,GAAWD,IAAXC,QA8CCwG,OA5Cf,SAA0B/J,GAClB,IADwB,EAKL0D,YAAYnB,EAAa,CACxCoB,YADwC,SAC5BC,GACR,IAAM+C,EAAK/C,EAAKoG,eAAeC,aAAatD,GAC5CtC,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,mCACLzI,KAAK,YAEN0I,MAAK,SAACC,GACFA,EAAOjC,OACNnI,EAAM4G,QAAQC,KAAd,8BAA0CF,QAItDzC,QAdwC,SAchC5D,GAEJ+D,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,wCACLzI,KAAK,aAnBV4I,EALiB,oBA4BxB,OACI,6BACI,kBAAC,GAAD,CAAQ1D,GAAG,YAAYtF,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IACzD,kBAACgD,GAAD,CAAOE,SAAS,iBAAiB1C,SA9BhC,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SA8Bf,kBAAC,GAAD,CAAUxF,MAAO,CAAEyF,OAAQ,gBAC3B,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACtD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKwC,KAAM,IAAI,kBAAC,GAAD,CAAarG,SAAUyJ,U,6BC3B/CC,OAbf,YAAmD,IAAhClJ,EAA+B,EAA/BA,KAAKmJ,EAA0B,EAA1BA,MAAM5D,EAAoB,EAApBA,GAAG6D,EAAiB,EAAjBA,UAAUlJ,EAAO,EAAPA,MACjC8B,EAAG,UAASoH,EAAT,YAAsB7D,GAC/B,OACI,8BACI,kBAAC,KAAD,CAAMN,GAAIjD,GACN,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMhC,KAAMA,EAAMqJ,aAAcnJ,EAAOiJ,MAAOA,Q,oBCL3DjF,GAAUoF,KAAVpF,OACCqF,GAAWC,IAAXD,OAGF3G,GAAQH,aAAa0D,QAAQ,SAuNpBsD,G,YApNX,WAAY7K,GAAO,IAAD,8BACd,4CAAMA,KAoBV4F,UAAY,WACR,EAAKC,SAAS,CACVL,SAAQ,KAvBE,EA2BlBsF,WAAa,WACT,EAAKjF,SAAS,CACVkF,UAAS,KA7BC,EAoClBC,WAAa,SAAA7K,GAET,EAAK0F,SAAS,CACVkF,UAAS,KAvCC,EA0ClBjF,UAAY,SAAA3F,GAER,EAAK0F,SAAS,CACVL,SAAQ,KA7CE,EAgDlByF,eAAgB,SAAA9K,GAEZ,EAAK0F,SAAS,CACNkF,UAAS,KAnDH,EAwDlBhF,cAAe,SAAA5F,GAEX,EAAK0F,SAAS,CACNL,SAAQ,KA3DF,EAgElB0F,UAAY,SAAAhJ,GACRiJ,KAAQ,CACJ/H,OACAgI,OAAO,OACPhK,KAAK,OACLwC,KAAK,CACDyH,MAAM,yQAWVC,QAAQ,CACJC,cAAc,OAAD,OAAQvH,KAEzBwH,QAAS,SAAAC,GACLvJ,EAAGuJ,OAnFX,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,iBAEpB,EAAKpG,MAAM,CACPqG,KAAK,EACLC,SAAQ,EACRC,MAAM,EACNC,MAAM,EACNnI,KAAK,GACL4B,SAAQ,EACRwG,SAAS,GACTC,MAAM,UAZI,E,iFA2FE,IAAD,OAEjBlM,KAAKmL,WAAU,SAAAO,GAEX,GAAGA,EAAI7H,KAAKsI,UAAU,CAEpB,IAAIC,EAAOV,EAAI7H,KAAKsI,UAGpB,EAAKrG,SAAS,CACVjC,KAAKuI,EACLN,SAAQ,SAKV,EAAKhG,SAAS,CACVgG,SAAQ,EACRC,MAAM,EACNlI,KAAK,U,mCASLuE,GACVpI,KAAK8F,SAAS,CACVoG,MAAM9D,IAEV3H,QAAQ4L,IAAIrM,KAAKwF,MAAM0G,S,+BAIlB,IAAD,OACR,OACI,6BACI,kBAAC,KAAD,CACII,WAAW,aACXR,QAAS9L,KAAKwF,MAAMsG,QACpBS,WAAYvM,KAAKwF,MAAM3B,KACvB2I,WAAY,CACRC,SAAS,SAAAZ,KAGTa,SAAS,IAGbC,OACI,6BACI,kBAAC,IAAD,CAAQtL,KAAK,UAAUC,MAAO,CAACqD,WAAW,UAAUpD,MAAM,OAAOqL,YAAY,WAAYjL,QAAS3B,KAAK6F,WAAY,kBAAC,IAAD,CAAMxE,KAAK,gBAA9H,SADJ,IAEI,kBAAC,IAAD,CAAQM,QAAS3B,KAAK+K,WAAa1J,KAAK,SAAS,kBAAC,IAAD,CAAMA,KAAK,WAA5D,WAGRwL,WAAY,SAAAC,GAAI,OACZ,kBAAC,KAAK9L,KAAN,CACAkE,IAAK4H,EAAKlG,GACVP,QAAS,CACL,kBAAC,GAAD,CAAUhF,KAAK,OAAOmJ,MAAM,UAAUC,UAAU,wBAAwBlJ,MAAM,UAAUqF,GAAIkG,EAAKlG,KACjG,kBAAC,GAAD,CAAUvF,KAAK,WAAWE,MAAM,UAAUkJ,UAAU,2BAA2BD,MAAM,UAAU5D,GAAIkG,EAAKlG,KACxG,kBAAC,GAAD,CAAUvF,KAAK,UAAUE,MAAM,UAAUkJ,UAAU,sBAAsBD,MAAM,UAAU5D,GAAIkG,EAAKlG,OAElG,kBAAC,KAAK5F,KAAKqE,KAAX,CACAb,MAAK,UAAKsI,EAAKvE,OAAOwE,cAAjB,YAAkCD,EAAKtE,UAAUuE,eACtDtG,YAAW,8BACgBqG,EAAKpE,SADrB,mBACwCoE,EAAKlE,YAMpE,kBAAC,KAAD,CACIpE,MAAM,WACNiB,QAASzF,KAAKwF,MAAMwF,SACpBxE,SAAUxG,KAAKkL,eACf3E,KAAMvG,KAAKiL,YACX,kBAAC,IAAD,KACA,kBAAC,KAAD,CAAQ+B,aAAa,SAAS1L,MAAO,CAAEwI,MAAO,KAAO2C,SAAUzM,KAAK2L,aAAaC,KAAK5L,OAC1E,kBAAC,GAAD,CAAQoI,MAAM,UAAd,YACA,kBAAC,GAAD,CAAQA,MAAM,QAAd,QACA,kBAAC,GAAD,CAAQA,MAAM,UAAd,UACA,kBAAC,GAAD,CAAQA,MAAM,WAAd,WACA,kBAAC,GAAD,CAAQA,MAAM,aAAd,eAIZ,6BACA,kBAAC,IAAD,KACI,kBAACwC,GAAD,CAAQpJ,YAAY,SAASyL,SAAU,SAAA7E,GACnC,EAAKtC,SAAS,CACVgG,SAAQ,IAGZ,EAAK7L,MAAMqL,MAAM,CAACxK,UAAU,CAACmL,SAAS7D,EAAM8E,IAAI,EAAK1H,MAAM0G,SAC3DiB,YAAW,WAEP,EAAKrH,SAAS,CACVgG,SAAQ,EACRjI,KAAK,EAAK5D,MAAM4D,KAAKuJ,UACrBpC,UAAS,MAEf,MACHqC,aAAW,MAItB,kBAAC,KAAD,CACA7I,MAAM,QACNiB,QAASzF,KAAKwF,MAAMC,QACpBc,KAAMvG,KAAK+F,UACXS,SAAUxG,KAAKgG,qB,GA7MPsH,IAAMxL,WCLnBwB,GAAkBC,IAAlBD,OAAOE,GAAWD,IAAXC,QAuBC+J,OAtBf,SAAsBtN,GAElB,IAFwB,EAMGuN,YAAatK,IANhB,mBAMjBuK,EANiB,KAMN5J,EANM,KAMNA,KAElB,OACI,6BACI,kBAAC,GAAD,CAAQ9C,UAAU,SAASO,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IAC7D,kBAACgD,GAAD,CAAOE,SAAS,qBAAqB1C,SATpC,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SASf,kBAAC,GAAD,CAASxF,MAAO,CAAEyF,OAAQ,gBACtB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACtD,kBAAC,GAAD,CAAO4G,MAAOmC,EAAW5J,KAAMA,Q,kDCjB7CI,GAAQH,aAAa0D,QAAQ,SAkEpBkG,G,YA9DX,WAAYzN,GAAO,IAAD,8BACd,4CAAMA,KACDuF,MAAM,CACPoB,GAAG3G,EAAM2G,GACT+G,KAAK,GACLpF,OAAO,IALG,E,yLAUKqF,KAAM,CACrBvK,OACAgI,OAAO,OACPxH,KAAK,CACDyH,MAAM,4DAAD,OAEYtL,KAAKwF,MAAMoB,GAFvB,iWAiBT2E,QAAQ,CACJC,cAAc,OAAD,OAAQvH,Q,YAtBvBJ,E,QA0BDA,KAAKA,KAAKgK,Q,2CAAqBhK,EAAKA,KAAKA,KAAKgK,S,OAA5BF,E,8BAAoCA,EAAK,G,QAC1DpF,E,UAAWoF,EAAKpF,O,YAAUoF,EAAKnF,WAErCxI,KAAK8F,SAAS,CACV6H,OACApF,OAAOA,EAAOwE,gB,iFAKlB,OACI,6BACI,kBAAC,IAAD,CAAMvI,MAAOxE,KAAKwF,MAAM+C,QACpB,kBAAC,KAAD,CAAc/D,MAAM,eAChB,kBAAC,KAAaxD,KAAd,CAAmByI,MAAM,QAAQzJ,KAAKwF,MAAMmI,KAAKvE,MACjD,kBAAC,KAAapI,KAAd,CAAmByI,MAAM,sBAAsBvC,KAAM,GAAKlH,KAAKwF,MAAMmI,KAAKjF,UAC1E,kBAAC,KAAa1H,KAAd,CAAmByI,MAAM,OAAOvC,KAAM,GAAIlH,KAAKwF,MAAMmI,KAAK/E,MAC1D,kBAAC,KAAa5H,KAAd,CAAmByI,MAAM,WAAWvC,KAAM,GAAKlH,KAAKwF,MAAMmI,KAAK7E,UAC/D,kBAAC,KAAa9H,KAAd,CAAmByI,MAAM,YAAYvC,KAAM,GAAIlH,KAAKwF,MAAMmI,KAAK3E,OAA/D,IAAwEhJ,KAAKwF,MAAMmI,KAAK1E,OAAxF,IAAiGjJ,KAAKwF,MAAMmI,KAAKxE,gB,GAxD9GmE,IAAMxL,WCH1ByD,GAAUoF,KAAVpF,OAEDtB,GAASH,aAAa0D,QAAQ,SAChCsG,GAAW,GACTC,G,2MAEFvI,MAAM,CACFwI,SAAS,I,EAoCbC,aAAe,SAAA7N,GACXA,EAAEC,iBAEF,EAAKJ,MAAMC,KAAKI,gBAAe,SAACC,EAAKC,GACnC,IAAKD,EAAK,CAEN,IADD,IAAK2N,EAAY,GACPC,EAAI,EAAEA,EAAE3N,EAAO4N,SAASC,OAAOF,IAAI,CACxC,IAAIG,EAAQ9N,EAAO4N,SAASD,GAAGG,MAAM,KACrCJ,EAAUpH,KAAK,CAACF,GAAG0H,EAAM,KAE7B,IAAIxN,EAAY,CACZyN,MAAM/N,EAAO+N,MACbC,YAAYhO,EAAOgO,YACnBC,YAAYjO,EAAOiO,YACnBC,SAASlO,EAAOmO,UAChBC,SAASpO,EAAOqO,UAChBC,UAAUZ,EACV5D,SAAS,CAAC,CAAC1D,GAAG,EAAK3G,MAAM2G,MAE7B,EAAK3G,MAAMY,SAAS,CAACC,UAAU,CAACwH,MAAMxH,U,6LApDzB8M,KAAM,CACrBvK,OACAgI,OAAO,OACPxH,KAAK,CACDyH,MAAM,mKAQVC,QAAQ,CACJC,cAAc,OAAD,OAAQvH,Q,UAbvBJ,E,OAkBNiK,GAAW,GACPH,EAAO,IACX9J,EAAKA,KAAKA,KAAKqK,U,4CAAwBrK,EAAKA,KAAKA,KAAKqK,W,OAA5BP,E,+BAAuCA,EAAM,G,QAGvE,IAASQ,EAAE,EAAEA,EAAER,EAAKU,OAAOF,IACnBjC,EADuB,UACbyB,EAAKQ,GAAGvH,GADK,YACC+G,EAAKQ,GAAG5F,QACpCuF,GAAUhH,KAAK,kBAAC,GAAD,CAAQ5B,IAAKyI,EAAKQ,GAAGvH,GAAIwB,MAAO8D,EAAOzC,MAAOkE,EAAKQ,GAAG5F,QAAUoF,EAAKQ,GAAG5F,SAE3FvI,KAAK8F,SAAS,CACVkI,SAASF,K,iFA6BR,IACG/N,EAAsBC,KAAKC,MAAMC,KAAjCH,kBACR,OACI,kBAAC,IAAD,CAAOsJ,OAAO,aAAalJ,SAAUH,KAAKiO,cACtC,kBAAC,IAAD,CAAM5M,KAAK,OAAO2F,OAAQ,IACtB,kBAAC,IAAD,CAAKI,GAAI,GAAID,GAAI,EAAGD,KAAM,GACtB,kBAAC,IAAKlG,KAAN,CAAWyI,MAAM,SACZ1J,EAAkB,QAAQ,CACvBkB,MAAM,CAAC,CAACC,UAAS,KADpBnB,CAEE,kBAAC,IAAD,CAAOyB,YAAY,aAG9B,kBAAC,IAAD,CAAK4F,GAAI,GAAID,GAAI,EAAGD,KAAM,GACtB,kBAAC,IAAKlG,KAAN,CAAWyI,MAAM,eACZ1J,EAAkB,cAAc,CAC7BkB,MAAM,CAAC,CAACC,UAAS,KADpBnB,CAEE,kBAAC,IAAD,CAAOyB,YAAY,mBAG9B,kBAAC,IAAD,CAAK4F,GAAI,GAAID,GAAI,EAAGD,KAAM,GACtB,kBAAC,IAAKlG,KAAN,CAAWyI,MAAO,eACb1J,EAAkB,cAAc,CAC7BkB,MAAM,CAAC,CAACC,UAAS,KADpBnB,CAEE,kBAAC,IAAD,CAAOyB,YAAY,mBAG9B,kBAAC,IAAD,CAAK4F,GAAI,GAAID,GAAI,EAAGD,KAAM,GAClB,kBAAC,IAAKlG,KAAN,CAAWyI,MAAM,qBACZ1J,EAAkB,YAAY,CAC3BkB,MAAM,CAAC,CAACC,UAAS,KADpBnB,CAEE,kBAAC,IAAD,CAAOyB,YAAY,yBAGlC,kBAAC,IAAD,CAAK4F,GAAI,GAAID,GAAI,EAAGD,KAAM,GACd,kBAAC,IAAKlG,KAAN,CAAWyI,MAAM,sBACZ1J,EAAkB,YAAY,CAC3BkB,MAAM,CAAC,CAACC,UAAS,KADpBnB,CAEE,kBAAC,IAAD,CAAOyB,YAAY,0BAGtC,kBAAC,IAAD,CAAK4F,GAAI,GAAKD,GAAI,GAAID,KAAM,IACvB,kBAAC,IAAKlG,KAAN,CAAWyI,MAAM,aACZ1J,EAAkB,WAAW,CAC3BkB,MAAM,CAAC,CAACC,UAAS,KADnBnB,CAEE,kBAAC,KAAD,CACHgP,KAAK,WACLzN,MAAO,CAAC0N,KAAK,QACbxN,YAAY,0BACVxB,KAAKwF,MAAMwI,cAI1B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK9G,KAAM,GAAI5F,MAAO,CAAEyD,UAAW,UAC3B,kBAAC,IAAD,CAAQ1D,KAAK,UAAUI,SAAS,UAAhC,kB,GArHA6L,IAAMxL,WA+HnBiM,MAAgBhM,IAAKC,OAAO,CAACC,KAAK,aAAlBF,CAAgCgM,IC1GhDkB,OAtBf,YAA0B,IAALrI,EAAI,EAAJA,GAAI,EACDjD,YAAYhB,GAAiB,CAC7CiB,YAD6C,SACjC+J,GACRrJ,KAAKC,KACD,CACIC,MAAM,QACN9C,KAAK,UACLyI,KAAK,qCAIjBhG,QAV6C,SAUrC5D,GACJE,QAAQ2D,MAAM7D,MAXf2O,EADc,oBAerB,OACI,kBAAC,IAAD,CAAM1K,MAAM,cACR,kBAAC,GAAD,CAAgBoC,GAAIA,EAAI/F,SAAUqO,MClBvC5L,GAAkBC,IAAlBD,OAAOE,GAAWD,IAAXC,QA0BC2L,OAxBf,SAA6BlP,GAAO,IACzB2G,EAAMwI,eAANxI,GAMH,OACI,6BACI,kBAAC,GAAD,CAAQ7F,UAAU,SAASO,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IAC7D,kBAACgD,GAAD,CAAOE,SAAS,WAAW1C,SAR9B,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SAQX,kBAAC,GAAD,CAAUxF,MAAO,CAAEyF,OAAQ,gBACvB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACtD,kBAAC,GAAD,CAAckC,GAAIA,IAClB,6BACA,kBAAC,GAAD,CAAWA,GAAKA,Q,UCtBjCpD,GAAUD,IAAVC,QAoBQ6L,OAjBf,WACI,OACI,6BACI,kBAAC,GAAD,CAAS/N,MAAO,CAAEyF,OAAQ,gBACrB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACvD,kBAAC,KAAD,CACI4K,OAAO,MACP9K,MAAM,MACNqD,SAAS,mCACT5C,MAAO,kBAAC,IAAD,CAAS5D,KAAK,UAAUM,QAAS,WAAMC,OAAOiF,QAAQmB,SAAtD,kBCRzBuH,G,2MAEF/J,MAAM,CACFoB,GAAG,EAAK3G,MAAM2G,GACd0D,SAAS,I,EAEbpC,cAAgB,SAAC9H,GACbA,EAAEC,iBACF,EAAKJ,MAAMC,KAAKiI,yBAAwB,SAAC5H,EAAIC,GACzC,IAAID,EAEA,GAAGC,EAAOgP,MAAM,CACZ,IAAMpH,EAAM,gBACT5H,EADQ,CAEX,MAASA,EAAM,MAAU6H,OAAO,gBAG5BC,EAAO,CACPC,OAAOH,EAAMnG,KACbuG,UAAUJ,EAAMK,UAChBC,SAASN,EAAMoH,MACf5G,KAAKR,EAAMS,IACXC,SAASV,EAAMW,MACfC,OAAOZ,EAAM5C,MACbyD,OAAOb,EAAMc,KACbC,QAAQf,EAAMe,QACdC,KAAKhB,EAAMgB,MAIf,EAAKnJ,MAAMY,SAAS,CAACC,UAAU,CAAC8F,GAAG,EAAKpB,MAAMoB,GAAG0B,MAAMA,SAEtD,CACD,IAAMF,EAAK,gBACJ5H,EADI,CAEP,MAAQ,EAAKgF,MAAM8E,SAAS5B,WAE5BJ,EAAO,CACPC,OAAOH,EAAMnG,KACbuG,UAAUJ,EAAMK,UAChBC,SAASN,EAAMoH,MACf5G,KAAKR,EAAMS,IACXC,SAASV,EAAMW,MACfC,OAAOZ,EAAM5C,MACbyD,OAAOb,EAAMc,KACbC,QAAQf,EAAMe,QACdC,KAAKhB,EAAMgB,MAGf3I,QAAQgP,KAAKnH,GACb,EAAKrI,MAAMY,SAAS,CAACC,UAAU,CAAC8F,GAAG,EAAKpB,MAAMoB,GAAG0B,MAAMA,U,EAoBvE6C,UAAY,SAAAuE,GACR,IAAMzL,EAAQH,aAAa0D,QAAQ,SACnC4D,KAAQ,CACJ/H,OACAgI,OAAO,OACPhK,KAAK,OACLwC,KAAK,CACDyH,MAAM,oEAAD,OAEgB,EAAK9F,MAAMoB,GAF3B,2XAkBT2E,QAAQ,CACJC,cAAc,OAAD,OAAQvH,IAEzBwH,QAAS,SAAAC,GACLgE,EAAShE,O,mFAtCA,IAAD,OAChB1L,KAAKmL,WAAU,SAAAO,GACX,EAAK5F,SAAS,CACVwE,SAASoB,EAAI7H,KAAKgK,e,+BAwCrB,IAEE9N,EAAqBC,KAAKC,MAAMC,KAAhCH,kBA6BD4P,EAAiB5P,EAAkB,SAAS,CAC9C6J,aAAa,MADM7J,CAGnB,kBAAC,KAAD,CAAQuB,MAAO,CAACwI,MAAM,KAClB,kBAAC,KAAOvE,OAAR,CAAe6C,MAAM,MAArB,OACA,kBAAC,KAAO7C,OAAR,CAAe6C,MAAM,KAArB,QAGR,OACG,kBAAC,IAAD,eAAOiB,OAAO,YApCK,CAClBC,SAAS,CACLlC,GAAG,CAACF,KAAK,IACTqC,GAAG,CAACrC,KAAK,IAEbsC,WAAW,CACPpC,GAAG,CAACF,KAAK,IACTqC,GAAG,CAACrC,KAAK,MA6Bd,CAA6C/G,SAAUH,KAAKkI,gBACvD,kBAAC,IAAKlH,KAAN,CAAWyI,MAAM,UACZ1J,EAAkB,OAAO,CACtB6J,aAAa5J,KAAKwF,MAAM8E,SAAS/B,OACjCtH,MAAM,CACF,CACIC,UAAU,EACVC,QAAQ,4BALnBpB,CAQE,kBAAC,IAAD,CACCqB,OAAQ,kBAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAACC,MAAM,qBACxCC,YAAY,aAGpB,kBAAC,IAAKR,KAAN,CAAWyI,MAAM,aACR1J,EAAkB,YAAY,CAC3B6J,aAAa5J,KAAKwF,MAAM8E,SAAS9B,UACjCvH,MAAM,CACF,CACIC,UAAS,EACTC,QAAQ,kCALnBpB,CAQE,kBAAC,IAAD,CACCyB,YAAY,gBAIxB,kBAAC,IAAKR,KAAN,CAAWyI,MAAM,QACJ1J,EAAkB,OAAO,CACtB6J,aAAa5J,KAAKwF,MAAM8E,SAASlB,KACjCnI,MAAM,CACF,CACIC,UAAS,EACTC,QAAQ,wBAEZ,CACIuI,IAAI,GACJvI,QAAQ,mDATnBpB,CAYE,kBAAC,IAAD,CAAOyB,YAAY,WAGlC,kBAAC,IAAKR,KAAN,CAAWyI,MAAM,uBACJ1J,EAAkB,QA5DxB,CAEXkB,MAAO,CAAC,CAAEI,KAAM,SAAUH,UAAU,EAAOC,QAAS,yBA0DnCpB,CACO,kBAAC,KAAD,CAAY4J,OAAQA,SAExC,kBAAC,IAAK3I,KAAN,CAAWyI,MAAM,QAChB1J,EAAkB,MACnB,CACI6J,aAAc5J,KAAKwF,MAAM8E,SAAS1B,KAClC3H,MAAM,CACF,CAACC,UAAS,EAAKC,QAAQ,0BAJ9BpB,CAQG,kBAAC,KAAD,CAAa8J,IAAK,EAAGH,IAAK,QAG9B,kBAAC,IAAK1I,KAAN,CAAWyI,MAAM,sBACJ1J,EAAkB,QAAQ,CACvB6J,aAAa5J,KAAKwF,MAAM8E,SAASxB,SACjC7H,MAAM,CAAC,CAECyI,IAAI,GACJvI,QAAQ,uDALnBpB,CASE,kBAAC,IAAD,CACHqB,OAAQ,kBAAC,IAAD,CAAMC,KAAK,QAAQC,MAAO,CAACC,MAAM,qBACzCC,YAAY,WACZoO,YAAaD,EACbrO,MAAO,CAACwI,MAAM,YAI1B,kBAAC,IAAK9I,KAAN,CAAWyI,MAAM,cACjB,kBAAC,IAAKzI,KAAN,CAAWyI,MAAM,UACJ1J,EAAkB,QAAQ,CACvB6J,aAAa,YACb3I,MAAM,CAAC,CACHC,UAAS,EACTC,QAAQ,4BAJfpB,CAME,kBAAC,IAAD,QAEf,kBAAC,IAAKiB,KAAN,CAAWyI,MAAM,UACJ1J,EAAkB,OAAO,CACtB6J,aAAa,SACb3I,MAAM,CAAC,CACHC,UAAS,EACTC,QAAQ,4BAJfpB,CAME,kBAAC,IAAD,QAEf,kBAAC,IAAKiB,KAAN,CAAWyI,MAAM,uBACJ1J,EAAkB,UAAU,CACzB6J,aAAa,mBACb3I,MAAM,CAAC,CACHC,UAAS,EACTC,QAAQ,yCAJfpB,CAME,kBAAC,IAAD,QAEf,kBAAC,IAAKiB,KAAN,MAGA,kBAAC,IAAKA,KAxIY,CACtBwI,WAAW,CACPpC,GAAG,CACCF,KAAK,GACL6C,OAAO,GAEXR,GAAG,CACCrC,KAAK,GACL6C,OAAO,KAiIC,kBAAC,IAAD,CAAQ1I,KAAK,UAAUI,SAAS,UAAhC,oB,GA/PCK,aAwQdyN,MAAiBxN,IAAKC,OAAO,CAACC,KAAK,YAAlBF,CAA+BwN,ICnQxDjM,GAAkBC,IAAlBD,OAAOE,GAAWD,IAAXC,QA6CCqM,OA3Cf,SAA4B5P,GAAO,IACxB2G,EAAMwI,eAANxI,GADuB,EAEZjD,YAAYlB,EAAe,CACzCmB,YADyC,SAC7BC,GACVS,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,4CACLzI,KAAK,YACN0I,MAAK,SAACC,GACJA,EAAOjC,OACNnI,EAAM4G,QAAQC,KAAd,8BAA0CF,QAIlDzC,QAZyC,SAYjC5D,GACJ+D,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,8FACLzI,KAAK,eAhBVmM,EAFuB,oBA2B9B,OACI,6BACI,kBAAC,GAAD,CAAQvM,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IAC1C,kBAACgD,GAAD,CAAOE,SAAS,sBAAsB1C,SARrC,WACLtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SAQnB,kBAAC,GAAD,CAASxF,MAAO,CAAEyF,OAAQ,gBACtB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACtD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKwC,KAAM,IAAX,IAAiB,kBAAC4I,GAAD,CAAgBjP,SAAUgN,EAASjH,GAAKA,IAAzD,UCrClB3C,GAAQH,aAAa0D,QAAQ,SAsKpBuI,G,YAlKX,WAAY9P,GAAO,IAAD,8BACd,4CAAMA,KAwCVkL,UAAW,SAAAuE,GACPtE,KAAQ,CACJ/H,OACAgI,OAAO,OACPhK,KAAK,OACLwC,KAAK,CACDyH,MAAM,4DAAD,OAEY,EAAK9F,MAAMoB,GAFvB,oqBAyBT2E,QAAQ,CACJC,cAAc,OAAD,OAAQvH,KAEzBwH,QAAS,SAAAC,GACLgE,EAAShE,OA5EH,EAiFlB7F,UAAU,WACH,EAAKL,MAAMwK,SACV,EAAKlK,SAAS,CACVD,WAAU,IAGdjE,OAAOiF,QAAQoJ,UAAU,KAvFf,EA0FlBC,OAAO,SAACtJ,GACDA,GACCtC,KAAKC,KAAK,CACNC,MAAM,yCACN2F,KAAM,iCACNzI,KAAM,UACNyO,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,gBACpBlG,MAAK,SAACC,GACLA,EAAOjC,MAAM,EAAKnI,MAAMY,SAAS,CAACC,UAAU,CAAC8F,GAAGA,KAAMnG,QAAQ4L,IAAI,mBAnG1E,EAAK6D,OAAS,EAAKA,OAAOtE,KAAZ,iBAEd,EAAKpG,MAAM,CACPoB,GAAG3G,EAAM2G,GACT+G,KAAK,GACLpF,OAAO,GACPgI,YAAY,GACZzE,SAAQ,EACRkE,UAAS,EACTQ,WAAU,EACVC,MAAM,EAAKxQ,MAAMwQ,OAZP,E,iFAgBE,IAAD,OACfzQ,KAAKmL,WAAU,SAAAO,GAEX,IAAIiC,EAAOjC,EAAI7H,KAAKgK,QACdtF,EAAO,GAAD,OAAKoF,EAAKpF,OAAV,YAAoBoF,EAAKnF,WACjCwH,GAAW,EACwBA,EAAH,IAAjCrC,EAAK+C,mBAAmBrC,OAI3B,EAAKvI,SAAS,CACVyC,OAAOA,EAAOwE,cACdY,OACA4C,YAAY5C,EAAKgD,cACjB7E,SAAQ,EACRkE,kB,+BA2EH,IAAD,OACJ,OACI,6BACI,kBAAC,IAAD,CAAMxL,MAAOxE,KAAKwF,MAAM+C,QACpB,kBAAC,KAAD,CAAc/D,MAAM,eAChB,kBAAC,KAAaxD,KAAd,CAAmByI,MAAM,QAAQzJ,KAAKwF,MAAMmI,KAAKvE,MACjD,kBAAC,KAAapI,KAAd,CAAmByI,MAAM,sBAAsBvC,KAAM,GAAKlH,KAAKwF,MAAMmI,KAAKjF,UAC1E,kBAAC,KAAa1H,KAAd,CAAmByI,MAAM,OAAOvC,KAAM,GAAIlH,KAAKwF,MAAMmI,KAAK/E,MAC1D,kBAAC,KAAa5H,KAAd,CAAmByI,MAAM,WAAWvC,KAAM,GAAKlH,KAAKwF,MAAMmI,KAAK7E,UAC/D,kBAAC,KAAa9H,KAAd,CAAmByI,MAAM,YAAYvC,KAAM,GAAIlH,KAAKwF,MAAMmI,KAAK3E,OAA/D,IAAwEhJ,KAAKwF,MAAMmI,KAAK1E,OAAxF,IAAiGjJ,KAAKwF,MAAMmI,KAAKxE,WAGzH,6BACI,kBAAC,IAAD,CAAKrE,QAAQ,UACT,kBAAC,IAAD,CAAKiF,OAAQ,IACT,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ1I,KAAK,UAAUM,QAAS3B,KAAKC,MAAMmF,UAAU,kBAAC,IAAD,CAAM/D,KAAK,SAAhE,uBAKZ,6BACA,kBAAC,IAAD,CAAMmD,MAAM,eACZ,kBAAC,KAAD,CACIsH,QAAS9L,KAAKwF,MAAMsG,QACpBS,WAAYvM,KAAKwF,MAAM+K,YACvBpL,KAAK,QACLqH,WAAY,CACRC,SAAU,SAAAZ,KAGVa,SAAU,GAEdG,WAAY,SAAAC,GAAI,OACZ,kBAAC,KAAK9L,KAAN,CACIkE,IAAK4H,EAAKlG,GACVP,QACI,CACI,kBAAC,GAAD,CAAWoE,UAAU,uBAAwB7D,GAAIkG,EAAKlG,GAAIvF,KAAK,UAAUE,MAAM,UAAUiJ,MAAM,YAC/F,kBAAC,GAAD,CAAUC,UAAU,uBAAuB7D,GAAIkG,EAAKlG,GAAIvF,KAAK,OAAOmJ,MAAM,UAAWjJ,MAAM,YAC3F,kBAAC,IAAD,CAAQI,QAAS,EAAKuO,OAAOtE,KAAK,EAAKkB,EAAKlG,KAA5C,IAAmD,kBAAC,IAAD,CAAMvF,KAAK,SAASmJ,MAAM,UAAUE,aAAa,YAApG,OAIR,kBAAC,KAAK1J,KAAKqE,KAAX,CACIb,MAAOsI,EAAKa,iB,GAzJpBL,IAAMxL,WCJ3BwB,GAAkBC,IAAlBD,OAAOE,GAAWD,IAAXC,QAkDCoN,OAhDf,SAAsB3Q,GAAO,IAClB2G,EAAMwI,eAANxI,GADiB,EAYTjD,YAAYX,GAAiB,CACxCY,YADwC,SAC5BC,GACRS,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,yCACLzI,KAAK,YAEN0I,MAAK,SAACC,GACFA,EAAOjC,OACNxG,OAAOC,SAASgP,aAI5B1M,QAbwC,SAahC5D,GACJ+D,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,oCACLzI,KAAK,aAjBVoP,EAZiB,oBAiCxB,OACI,6BACI,kBAAC,GAAD,CAASxP,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IAC3C,kBAACgD,GAAD,CAAOE,SAAS,uBAAuB1C,SA5BtC,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SA4Bf,kBAAC,GAAD,CAASxF,MAAO,CAAEyF,OAAQ,gBACtB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACtD,kBAAC,GAAD,CAAekC,GAAIA,EAAI/F,SAAUiQ,EAAML,MAnC7C,WACNxQ,EAAM4G,QAAQC,KAAd,gCAA4CF,KAkCqBxB,SAtC3D,WACNnF,EAAM4G,QAAQC,KAAd,mCAA+CF,W,UCPjD3C,GAAQH,aAAa0D,QAAQ,SAkQpBuJ,G,2MA/PXvL,MAAO,CACHoB,GAAG,EAAK3G,MAAM2G,GACd0D,SAAS,GACTwE,UAAU,GACVP,MAAM,GACNC,YAAY,GACZC,YAAY,GACZG,SAAS,GACTF,SAAS,GACTnG,OAAO,GACPyI,OAAO,GACPC,QAAQ,GACRC,QAAQ,GACR1B,MAAM,GACN1D,SAAQ,EACRvK,MAAO,GACP4P,QAAQ,GACR1L,SAAQ,G,EAGZI,UAAY,WACR,EAAKC,SAAS,CACVL,SAAQ,K,EAGhBM,UAAY,SAAA3F,GAER,EAAK0F,SAAS,CACVL,SAAQ,K,EAIhBO,cAAe,SAAA5F,GAEX,EAAK0F,SAAS,CACNL,SAAQ,K,EAkCpB2L,MAAO,SAACC,EAASC,GACb,IAAI1C,EAAW2C,SAASF,GACpB3C,EAAW6C,SAASD,GACxB,OAAI1C,GAAW,IAAKA,GAAU,KAASF,GAAU,IAAIA,GAAU,IAC3D,EAAK5I,SAAS,CACVvE,MAAM,YAEH,UAEPqN,GAAU,KAAOA,GAAU,KAAOF,GAAU,IAAKA,GAAU,IAC3D,EAAK5I,SAAS,CACVvE,MAAM,YAEH,sBAEPqN,GAAU,KAAOA,GAAU,KAAOF,GAAU,IAAKA,GAAU,IAC3D,EAAK5I,SAAS,CACVvE,MAAM,YAEH,SAEPqN,GAAU,KAAOA,GAAU,KAAOF,GAAU,KAAMA,GAAU,KAC5D,EAAK5I,SAAS,CACVvE,MAAM,YAEH,SAEPqN,GAAU,KAAQF,GAAU,KAC5B,EAAK5I,SAAS,CACVvE,MAAM,UAEH,uBAEPqN,EAAS,IAAOF,EAAS,IACzB,EAAK5I,SAAS,CACVvE,MAAM,UAEH,sBAJX,G,EAQPmN,SAAU,SAAC8C,GACP,IAAIC,EAASF,SAASC,GAEvB,OAAGC,GAAQ,IAAIA,GAAQ,GACZ,UAERA,GAAQ,IAAMA,GAAS,GACf,UAERA,GAAQ,IAAMA,GAAQ,GACd,UAERA,GAAQ,KAAOA,GAAU,IACjB,QAERA,GAAQ,IACA,QAERA,EAAO,GACC,aADX,G,EAKH7C,SAAU,SAAC4C,GACP,IAAIC,EAASF,SAASC,GACtB,OAAGC,EAAQ,GACA,QAERA,GAAQ,IAAIA,GAAQ,IACZ,UAERA,EAAO,KAAOA,GAAQ,IACd,UAERA,GAAQ,KAAKA,GAAQ,IACb,UAERA,GAAQ,KAAOA,GAAQ,IACf,QAERA,GAAQ,IACA,aADX,G,EAIJtG,UAAW,SAAAuE,GACJtE,KAAQ,CACJ/H,OACAgI,OAAO,OACPhK,KAAK,OACLwC,KAAK,CACDyH,MAAM,6DAAD,OAEa,EAAK9F,MAAMoB,GAFxB,6oBAwBT2E,QAAQ,CACJC,cAAc,OAAD,OAAQvH,KAEzBwH,QAAS,SAAAC,GACLgE,EAAShE,O,mFAnJD,IAAD,OAEf1L,KAAKmL,WAAU,SAAAO,GAGZ,IAAInD,EAAQ,GACoBA,EAA/BmD,EAAI7H,KAAKqL,UAAU/C,UAAkB,UAAMT,EAAI7H,KAAKqL,UAAU/C,UAAU5D,OAAnC,YAA6CmD,EAAI7H,KAAKqL,UAAU/C,UAAU3D,WAAqB,GAEpI,EAAK1C,SAAS,CACVyC,SACA+B,SAASoB,EAAI7H,KAAKqL,UAAU/C,UAC5B2C,UAAUpD,EAAI7H,KAAKqL,UAAUJ,UAC7BP,MAAM7C,EAAI7H,KAAKqL,UAAUX,MACzBC,YAAY9C,EAAI7H,KAAKqL,UAAUV,YAC/BC,YAAY/C,EAAI7H,KAAKqL,UAAUT,YAC/BC,SAAShD,EAAI7H,KAAKqL,UAAUR,SAC5BE,SAASlD,EAAI7H,KAAKqL,UAAUN,SAC5BoC,OAAO,gCAAyBzI,GAASwE,cACzCkE,QAAQ,EAAKvC,SAAShD,EAAI7H,KAAKqL,UAAUR,UACzCwC,QAAQ,EAAKtC,SAASlD,EAAI7H,KAAKqL,UAAUN,UACzCY,MAAM9D,EAAI7H,KAAKqL,UAAUvB,KACzB7B,SAAQ,EACRqF,QAAQ,EAAKC,MAAM1F,EAAI7H,KAAKqL,UAAUN,SAASlD,EAAI7H,KAAKqL,UAAUR,iB,+BAkIrE,IAAD,OACJ,OACI,6BACI,kBAAC,IAAD,CAAMlK,MAAOxE,KAAKwF,MAAMwL,QACpB,kBAAC,KAAD,KACI,kBAAC,KAAahQ,KAAd,CAAmByI,MAAM,SAAzB,IAAoCzJ,KAAKwF,MAAMgK,MAA/C,KACA,kBAAC,KAAaxO,KAAd,CAAmByI,MAAM,SAAzB,IAAoCzJ,KAAKwF,MAAM+I,OAC/C,kBAAC,KAAavN,KAAd,CAAmByI,MAAM,eAAzB,IAA0CzJ,KAAKwF,MAAMgJ,YAArD,KACA,kBAAC,KAAaxN,KAAd,CAAmByI,MAAM,eAAzB,IAA0CzJ,KAAKwF,MAAMiJ,aACrD,kBAAC,KAAazN,KAAd,CAAmByI,MAAM,wBAAoB,kBAAC,KAAD,CAAOtI,QAASnB,KAAKwF,MAAMoJ,SAAUvN,KAAMrB,KAAKwF,MAAM0L,QAASQ,UAAQ,IAApH,KACA,kBAAC,KAAa1Q,KAAd,CAAmByI,MAAM,sBAAsB,kBAAC,KAAD,CAAOtI,QAASnB,KAAKwF,MAAMkJ,SAAUrN,KAAMrB,KAAKwF,MAAMyL,QAAUS,UAAQ,KACvH,kBAAC,KAAa1Q,KAAd,CAAmByI,MAAM,WAAW,kBAAC,KAAD,CAAOtI,QAASnB,KAAKwF,MAAM2L,QAAS9P,KAAMrB,KAAKwF,MAAMjE,MAAOmQ,UAAQ,OAGhH,6BACA,kBAAC,IAAD,CAAMlN,MAAM,gBACR,kBAAC,KAAD,CACIsH,QAAS9L,KAAKwF,MAAMsG,QACpBS,WAAYvM,KAAKwF,MAAMsJ,UACvB3J,KAAK,QACLqH,WAAY,CACRC,SAAU,SAAAZ,KAGVa,SAAU,GAEdG,WAAY,SAAAC,GAAI,OACZ,kBAAC,KAAK9L,KAAN,CACIkE,IAAK4H,EAAKlG,GACVP,QACI,CAEI,kBAAC,IAAD,CAAQ1E,QAAS,EAAKkE,WAAY,kBAAC,IAAD,CAAOxE,KAAK,UAAUmJ,MAAM,UAAUE,aAAa,eAIjG,kBAAC,KAAK1J,KAAKqE,KAAX,CACIb,MAAOsI,EAAKvE,OACZ9B,YAAaqG,EAAK6E,UAElB,kBAAC,KAAD,CACInN,MAAM,QACNiB,QAAS,EAAKD,MAAMC,QACpBc,KAAM,EAAKR,UACXS,SAAU,EAAKR,eACf,2BAAI8G,EAAK8E,aAM7B,6BACA,kBAAC,IAAD,CAAK9M,QAAQ,UACD,kBAAC,IAAD,CAAKiF,OAAQ,IACT,kBAAC,KAAD,CAAMzD,GAAE,gCAA2BtG,KAAKwF,MAAMoB,KAAO,kBAAC,IAAD,sB,GAzP/D0G,IAAMxL,WCFrBwB,GAAkBC,IAAlBD,OAAOE,GAAWD,IAAXC,QAuBCqO,OApBf,SAAyB5R,GAAO,IACrB2G,EAAMwI,eAANxI,GAKP,OACQ,6BACI,kBAAC,GAAD,CAAStF,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IAC3C,kBAACgD,GAAD,CAAOE,SAAS,yBAAyB1C,SAP5C,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SAOX,kBAAC,GAAD,CAASxF,MAAO,CAAEyF,OAAQ,gBACtB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACtD,kBAAC,GAAD,CAASkC,GAAIA,QCnB/BkL,G,2MACFtM,MAAQ,CACJ4C,MAAO,I,EAGTqE,SAAW,YAA4B,IAAfrE,EAAc,EAAxB2J,OAAU3J,MACtB,EAAKtC,SAAS,CAAEsC,W,EAGpB6F,aAAe,SAAA7N,GACXA,EAAEC,iBAEF,EAAKJ,MAAMC,KAAKI,gBAAe,SAACC,EAAKC,GACnC,IAAKD,EAAK,CACP,IAAIO,EAAW,CACXkQ,OAAOxQ,EAAOwR,OACdC,KAAKzR,EAAO0R,KACZC,WAAW,CAAC,CAACvL,GAAG,EAAK3G,MAAM2G,MAE/BnG,QAAQ4L,IAAIvL,GACZ,EAAKb,MAAMY,SAAS,CAACC,UAAU,CAACwH,MAAMxH,U,wEAItC,IACEf,EAAqBC,KAAKC,MAAMC,KAAhCH,kBACCqI,EAAUpI,KAAKwF,MAAf4C,MACR,OACI,kBAAC,IAAD,CAAMiB,OAAO,aAAalJ,SAAUH,KAAKiO,cACrC,kBAAC,IAAKjN,KAAN,CAAWyI,MAAM,UACZ1J,EAAkB,SAAS,CACxBkB,MAAM,CAAE,CACJC,UAAS,EACTC,QAAQ,8BAEZ,CACIuI,IAAI,IACJvI,QAAQ,sDAPfpB,CASE,kBAAC,IAAD,CAAOyB,YAAY,aAE1B,kBAAC,IAAKR,KAAN,CAAYyI,MAAM,QACb1J,EAAkB,OAAO,CACtBqS,eAAehK,EACfnH,MAAM,CAAC,CAACC,SAASmR,oCACblR,QAAQ,yBAHfpB,CAKE,kBAAC,IAAMuS,SAAP,CACE7F,SAAUzM,KAAKyM,SACf8F,SAAU,CAAEC,QAAS,GAAIC,QAAS,SAE3C,kBAAC,IAAKzR,KAAN,KACY,kBAAC,IAAD,CAAQK,KAAK,UAAUI,SAAS,UAAhC,kB,GApDJK,aA8DTgQ,MAAY/P,IAAKC,OAAO,CAACC,KAAK,eAAlBF,CAAkC+P,ICxDtDxO,GAAmBC,IAAnBD,OAAOE,GAAYD,IAAZC,QAmDCkP,OAjDf,SAAuBzS,GAAO,IACnB2G,EAAMwI,eAANxI,GADkB,EAETjD,YAAYpB,EACxB,CACIqB,YADJ,SACgBC,GACRS,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,oCACLzI,KAAK,YACN0I,MAAK,SAACC,GACJA,EAAOjC,OACNnI,EAAM4G,QAAQC,KAAd,gCAA4CF,QAItDzC,QAZJ,SAYY5D,GACJ+D,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,yFACLzI,KAAK,eAjBdiR,EAFkB,oBA4BzB,OACI,6BACI,6BACC,kBAAC,GAAD,CAAQ/L,GAAG,YAAYtF,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IACtD,kBAACgD,GAAD,CAAOE,SAAS,aAAa1C,SAThC,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SASd,kBAAC,GAAD,CAAUxF,MAAO,CAAEyF,OAAQ,gBACxB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACtD,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,GAAD,CAAW7D,SAAU8R,EAAO/L,GAAIA,WCzCtD3C,GAAQH,aAAa0D,QAAQ,SAkHpBoL,G,YA/GZ,WAAY3S,GAAO,IAAD,8BACb,4CAAMA,KAoBVkL,UAAW,SAAAuE,GACPtE,KAAQ,CACJ/H,OACAgI,OAAO,OACPhK,KAAK,OACLwC,KAAK,CACDyH,MAAM,8DAAD,OAEc,EAAKrL,MAAM2G,GAFzB,mOAWT2E,QAAQ,CACJC,cAAc,OAAD,OAAQvH,KAEzBwH,QAAS,SAAAC,GACLgE,EAAShE,OA1CJ,EAgDjBwE,OAAQ,SAACtJ,GAEFA,GACCtC,KAAKC,KAAK,CACNC,MAAM,qCACN2F,KAAM,iCACNzI,KAAM,UACNyO,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,gBACpBlG,MAAK,SAACC,GACLA,EAAOjC,MAAM,EAAKnI,MAAMY,SAAS,CAACC,UAAU,CAAC8F,GAAGA,KAAMnG,QAAQ4L,IAAI,mBA1D1E,EAAK6D,OAAS,EAAKA,OAAOtE,KAAZ,iBACd,EAAKpG,MAAQ,CACT3B,KAAK,GACLiI,SAAQ,EACR+G,IAAG,GANM,E,iFAUG,IAAD,OACf7S,KAAKmL,WAAU,SAAAO,GACX,EAAK5F,SAAS,CACVjC,KAAK6H,EAAI7H,KAAKqL,UAAU4D,kBACxBhH,SAAQ,S,+BAkDX,IAAD,OAER,OACI,6BAEI,kBAAC,IAAD,CAAMtH,MAAM,SACR,kBAAC,KAAD,CACIsH,QAAS9L,KAAKwF,MAAMsG,QACpBS,WAAYvM,KAAKwF,MAAM3B,KACvBsB,KAAK,QACDqH,WAAY,CACRC,SAAU,SAAAZ,KAGVa,SAAU,IAElBG,WAAY,SAAAC,GAAI,OACR,kBAAC,KAAK9L,KAAN,CACIkE,IAAK4H,EAAKlG,GACVP,QACI,CACI,kBAAC,GAAD,CAAWoE,UAAU,uBAAuB7D,GAAIkG,EAAKlG,GAAIvF,KAAK,UAAUE,MAAM,UAAUiJ,MAAM,YAC9F,kBAAC,GAAD,CAAWC,UAAU,4BAA4BpJ,KAAK,OAAOmJ,MAAM,UAAWjJ,MAAM,UAAUqF,GAAIkG,EAAKlG,KACvG,kBAAC,IAAD,CAAQjF,QAAS,EAAKuO,OAAOtE,KAAK,EAAKkB,EAAKlG,KAAK,kBAAC,IAAD,CAAMvF,KAAK,SAASmJ,MAAM,UAAUE,aAAa,eAI1G,kBAAC,KAAK1J,KAAKqE,KAAX,CACIb,MAAOsI,EAAKkE,cAKpC,6BACA,kBAAC,IAAD,CAAKlM,QAAQ,UACT,kBAAC,IAAD,CAAKiF,OAAQ,IACT,kBAAC,KAAD,CAAMzD,GAAE,sCAAiCtG,KAAKC,MAAM2G,KAChD,kBAAC,IAAD,2B,GAvGC0G,IAAMxL,WCAxBwB,GAAiBC,IAAjBD,OAAOE,GAAUD,IAAVC,QAkDCuP,OAhDf,SAAgB9S,GAAO,IACZ2G,EAAMwI,eAANxI,GADW,EAMFjD,YAAYZ,GAAsB,CAC9Ca,YAD8C,SAClCC,GACRS,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,mCACLzI,KAAK,YAEN0I,MAAK,SAACC,GACFA,EAAOjC,OACNxG,OAAOC,SAASgP,aAK5B1M,QAd8C,SActC5D,GACJ+D,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,oCACLzI,KAAK,aAlBVsR,EANW,oBA4BlB,OACI,6BACK,kBAAC,GAAD,CAAQpM,GAAG,YAAYtF,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IACtD,kBAACgD,GAAD,CAAOE,SAAS,QAAQ1C,SA7B3B,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SA6Bd,kBAAC,GAAD,CAAUxF,MAAO,CAAEyF,OAAQ,gBACxB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACtD,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,GAAD,CAAY7D,SAAUmS,EAAOpM,GAAIA,U,UC3CtDrB,GAAUoF,KAAVpF,OAEDtB,GAASH,aAAa0D,QAAQ,SAChCsG,GAAW,GACTmF,G,2MAEFzN,MAAM,CACFwI,SAAS,GACTpH,GAAG,EAAK3G,MAAM2G,GACdkI,UAAU,GACVqD,WAAW,I,EAmEflE,aAAe,SAAA7N,GACXA,EAAEC,iBAEF,EAAKJ,MAAMC,KAAKI,gBAAe,SAACC,EAAKC,GACnC,IAAKD,EAED,GAAG2S,6BAAkB1S,EAAO4N,UAAU,CAIpC,IADA,IAAIF,EAAY,GACPC,EAAE,EAAEA,EAAE,EAAK3I,MAAMsJ,UAAUT,OAAOF,IACvCD,EAAUpH,KAAK,CAACF,GAAG,EAAKpB,MAAMsJ,UAAUX,GAAGvH,KAG/C,IAAI9F,EAAW,CACXyN,MAAM/N,EAAO+N,MACZC,YAAYhO,EAAOgO,YACnBC,YAAYjO,EAAOiO,YACnBC,SAASlO,EAAOmO,UAChBC,SAASpO,EAAOqO,UAChBC,UAAUZ,GAGd,EAAKjO,MAAMY,SAAS,CAACC,UAAU,CAAC8F,GAAG,EAAKpB,MAAMoB,GAAG0B,MAAMxH,SAErD,CAGF,IADD,IAAKoN,EAAY,GACPC,EAAI,EAAEA,EAAE3N,EAAO4N,SAASC,OAAOF,IAAI,CACxC,IAAIG,EAAQ9N,EAAO4N,SAASD,GAAGG,MAAM,KACrCJ,EAAUpH,KAAK,CAACF,GAAG0H,EAAM,KAE7B,IAAIxN,EAAY,CACZyN,MAAM/N,EAAO+N,MACbC,YAAYhO,EAAOgO,YACnBC,YAAYjO,EAAOiO,YACnBC,SAASlO,EAAOmO,UAChBC,SAASpO,EAAOqO,UAChBC,UAAUZ,GAIf,EAAKjO,MAAMY,SAAS,CAACC,UAAU,CAAC8F,GAAG,EAAKpB,MAAMoB,GAAG0B,MAAMxH,U,iMA1G5C8M,KAAM,CACrBvK,OACAgI,OAAO,OACPxH,KAAK,CACDyH,MAAM,mKAQVC,QAAQ,CACJC,cAAc,OAAD,OAAQvH,Q,cAbvBJ,E,2BAiBa+J,KAAM,CACrBvK,OACAgI,OAAO,OACPxH,KAAK,CACDyH,MAAM,6DAAD,OAEatL,KAAKwF,MAAMoB,GAFxB,iaAiBT2E,QAAQ,CACJC,cAAc,OAAD,OAAQvH,Q,UAtBvBkP,E,OA0BNrF,GAAW,GACPsF,EAAO,GACPzF,EAAO,IACXwF,EAAKtP,KAAKA,KAAKqL,U,6CAAyBiE,EAAKtP,KAAKA,KAAKqL,W,QAA7BkE,E,+BAAuCA,EAAO,G,YACxEvP,EAAKA,KAAKA,KAAKqK,U,6CAAwBrK,EAAKA,KAAKA,KAAKqK,W,QAA5BP,E,+BAAuCA,EAAM,G,QAIvE,IAASQ,EAAE,EAAEA,EAAER,EAAKU,OAAOF,IACnBjC,EADuB,UACbyB,EAAKQ,GAAGvH,GADK,YACC+G,EAAKQ,GAAG5F,QACpCuF,GAAUhH,KAAK,kBAAC,GAAD,CAAQ5B,IAAKyI,EAAKQ,GAAGvH,GAAIwB,MAAO8D,EAAOzC,MAAOkE,EAAKQ,GAAG5F,QAAUoF,EAAKQ,GAAG5F,SAE3FvI,KAAK8F,SAAS,CACVkI,SAASF,GACTqE,WAAWiB,EACXtE,UAAUsE,EAAMtE,Y,iFAsDf,IACG/O,EAAsBC,KAAKC,MAAMC,KAAjCH,kBACR,OACI,kBAAC,IAAD,CAAOsJ,OAAO,aAAalJ,SAAUH,KAAKiO,cACtC,kBAAC,IAAD,CAAM5M,KAAK,OAAO2F,OAAQ,IACtB,kBAAC,IAAD,CAAKI,GAAI,GAAID,GAAI,EAAGD,KAAM,GACtB,kBAAC,IAAKlG,KAAN,CAAWyI,MAAM,SACZ1J,EAAkB,QAAQ,CACvB6J,aAAa5J,KAAKwF,MAAM2M,WAAW5D,MACnCtN,MAAM,CAAC,CAACC,UAAS,KAFpBnB,CAGE,kBAAC,IAAD,CAAOyB,YAAY,aAG9B,kBAAC,IAAD,CAAK4F,GAAI,GAAID,GAAI,EAAGD,KAAM,GACtB,kBAAC,IAAKlG,KAAN,CAAWyI,MAAM,eACZ1J,EAAkB,cAAc,CAC7B6J,aAAa5J,KAAKwF,MAAM2M,WAAW1D,YACnCxN,MAAM,CAAC,CAACC,UAAS,KAFpBnB,CAGE,kBAAC,IAAD,CAAOyB,YAAY,mBAG9B,kBAAC,IAAD,CAAK4F,GAAI,GAAID,GAAI,EAAGD,KAAM,GACtB,kBAAC,IAAKlG,KAAN,CAAWyI,MAAO,eACb1J,EAAkB,cAAc,CAC7B6J,aAAa5J,KAAKwF,MAAM2M,WAAW3D,YACnCvN,MAAM,CAAC,CAACC,UAAS,KAFpBnB,CAGE,kBAAC,IAAD,CAAOyB,YAAY,mBAG9B,kBAAC,IAAD,CAAK4F,GAAI,GAAID,GAAI,EAAGD,KAAM,GAClB,kBAAC,IAAKlG,KAAN,CAAWyI,MAAM,qBACZ1J,EAAkB,YAAY,CAC3B6J,aAAa5J,KAAKwF,MAAM2M,WAAWvD,SACnC3N,MAAM,CAAC,CAACC,UAAS,KAFpBnB,CAGE,kBAAC,IAAD,CAAOyB,YAAY,yBAGlC,kBAAC,IAAD,CAAK4F,GAAI,GAAID,GAAI,EAAGD,KAAM,GACd,kBAAC,IAAKlG,KAAN,CAAWyI,MAAM,sBACZ1J,EAAkB,YAAY,CAC3B6J,aAAa5J,KAAKwF,MAAM2M,WAAWzD,SACnCzN,MAAM,CAAC,CAACC,UAAS,KAFpBnB,CAGE,kBAAC,IAAD,CAAOyB,YAAY,0BAGtC,kBAAC,IAAD,CAAK4F,GAAI,GAAKD,GAAI,GAAID,KAAM,IACvB,kBAAC,IAAKlG,KAAN,CAAWyI,MAAM,aACZ1J,EAAkB,WAAW,GAA7BA,CAEE,kBAAC,KAAD,CACHgP,KAAK,WACLzN,MAAO,CAAC0N,KAAK,QACbxN,YAAY,0BACVxB,KAAKwF,MAAMwI,cAI1B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK9G,KAAM,GAAI5F,MAAO,CAAEyD,UAAW,UAC3B,kBAAC,IAAD,CAAQ1D,KAAK,UAAUI,SAAS,UAAhC,kB,GApLG6L,IAAMxL,WA8LtBmR,MAAmBlR,IAAKC,OAAO,CAACC,KAAK,aAAlBF,CAAgCkR,IC9L3D3P,GAAkBC,IAAlBD,OAAOE,GAAWD,IAAXC,QA8CC6P,OA7Cf,SAAuBpT,GAAO,IAClB2G,EAAMwI,eAANxI,GADiB,EAMLjD,YAAYjB,EAAkB,CAC9CkB,YAD8C,SAClCC,GACRS,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,8CACLzI,KAAK,YACN0I,MAAK,SAACC,GACJA,EAAOjC,OACNnI,EAAM4G,QAAQC,KAAd,+BAA2CF,QAIrDzC,QAZ8C,SAYtC5D,GACJ+D,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,8FACLzI,KAAK,eAhBVwN,EANkB,oBA4BzB,OACI,6BACQ,kBAAC,GAAD,CAAQtI,GAAG,YAAYtF,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IACzD,kBAACgD,GAAD,CAAOE,SAAS,wBAAwB1C,SA7B3C,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SA6BX,kBAAC,GAAD,CAAUxF,MAAO,CAAEyF,OAAQ,gBAC3B,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACtD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKwC,KAAM,IACP,kBAAC,GAAD,CAAiBrG,SAAUqO,EAAWtI,GAAKA,UCzCjE3C,GAAQH,aAAa0D,QAAQ,SACd8L,G,2MACjB9N,MAAM,CACFoB,GAAG,EAAK3G,MAAM2G,GACdwM,MAAM,I,EAYVjI,UAAW,SAAAuE,GACPtE,KAAQ,CACJ/H,OACAgI,OAAO,OACPhK,KAAK,OACLwC,KAAK,CACDyH,MAAM,kEAAD,OAEkB,EAAK9F,MAAMoB,GAF7B,+KAUT2E,QAAQ,CACJC,cAAc,OAAD,OAAQvH,KAEzBwH,QAAS,SAAAC,GACLgE,EAAShE,O,mFA7BD,IAAD,OACf1L,KAAKmL,WAAU,SAAAO,GAEX,EAAK5F,SAAS,CACVsN,MAAM1H,EAAI7H,KAAK0P,gBAEnB9S,QAAQ4L,IAAI,EAAK7G,Y,+BA8BrB,OACI,6BACI,kBAAC,KAAD,CAAchB,MAAOxE,KAAKwF,MAAM4N,MAAMpC,OAAS3H,OAAO,WAAWmK,UAAQ,GACrE,kBAAC,KAAaxS,KAAd,CAAmByI,MAAM,QAAQvC,KAAM,GAAKlH,KAAKwF,MAAM4N,MAAM5D,OAC7D,kBAAC,KAAaxO,KAAd,CAAoByI,MAAM,OAAOvC,KAAM,GAAKlH,KAAKwF,MAAM4N,MAAMK,MAC7D,kBAAC,KAAazS,KAAd,CAAmByI,MAAM,OAAOvC,KAAM,GAAI,2BAAIlH,KAAKwF,MAAM4N,MAAMlB,a,GA/C5C5E,IAAMxL,WCAtCwB,GAAkBC,IAAlBD,OAAOE,GAAWD,IAAXC,QAEC,SAASkQ,GAAUzT,GAAO,IAC9B2G,EAAMwI,eAANxI,GAOP,OACI,6BACK,kBAAC,GAAD,CAAQA,GAAG,YAAYtF,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IACtD,kBAACgD,GAAD,CAAOE,SAAS,QAAQ1C,SAT3B,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SASd,kBAAC,GAAD,CAAUxF,MAAO,CAAEyF,OAAQ,gBACxB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACtD,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,GAAD,CAAWkC,GAAIA,SCrB3C,IAAM3C,GAAQH,aAAa0D,QAAQ,SAC7BmM,G,2MACFnO,MAAQ,CACJ4C,MAAO,GACPxB,GAAG,EAAK3G,MAAM2G,GACdwM,MAAM,I,EAYVjI,UAAW,SAAAuE,GACPtE,KAAQ,CACJ/H,OACAgI,OAAO,OACPhK,KAAK,OACLwC,KAAK,CACDyH,MAAM,kEAAD,OAEkB,EAAK9F,MAAMoB,GAF7B,+KAUT2E,QAAQ,CACJC,cAAc,OAAD,OAAQvH,KAEzBwH,QAAS,SAAAC,GACLgE,EAAShE,O,EAMnBe,SAAW,YAA4B,IAAfrE,EAAc,EAAxB2J,OAAU3J,MACtB,EAAKtC,SAAS,CAAEsC,W,EAGpB6F,aAAe,SAAA7N,GACXA,EAAEC,iBAEF,EAAKJ,MAAMC,KAAKI,gBAAe,SAACC,EAAKC,GACnC,IAAKD,EAAK,CACP,IAAIO,EAAW,CACXkQ,OAAOxQ,EAAOwR,OACdC,KAAKzR,EAAO0R,MAEhB,EAAKjS,MAAMY,SAAS,CAACC,UAAU,CAAC8F,GAAG,EAAKpB,MAAMoB,GAAG0B,MAAMxH,U,mFAhD1C,IAAD,OACjBd,KAAKmL,WAAU,SAAAO,GAEX,EAAK5F,SAAS,CACVsN,MAAM1H,EAAI7H,KAAK0P,gBAEnB9S,QAAQ4L,IAAI,EAAK7G,Y,+BA+ChB,IACEzF,EAAqBC,KAAKC,MAAMC,KAAhCH,kBACCqI,EAAUpI,KAAKwF,MAAf4C,MACR,OACI,kBAAC,IAAD,CAAMiB,OAAO,aAAalJ,SAAUH,KAAKiO,cACrC,kBAAC,IAAKjN,KAAN,CAAWyI,MAAM,UACZ1J,EAAkB,SAAS,CACxB6J,aAAa5J,KAAKwF,MAAM4N,MAAMpC,OAC9B/P,MAAM,CAAE,CACJC,UAAS,EACTC,QAAQ,8BAEZ,CACIuI,IAAI,IACJvI,QAAQ,sDARfpB,CAUE,kBAAC,IAAD,CAAOyB,YAAY,aAE1B,kBAAC,IAAKR,KAAN,CAAYyI,MAAM,QACb1J,EAAkB,OAAO,CACtB6J,aAAa5J,KAAKwF,MAAM4N,MAAMlB,KAC9BE,eAAehK,EACfnH,MAAM,CAAC,CACHC,UAAS,EACTC,QAAQ,gCALfpB,CAOE,kBAAC,IAAMuS,SAAP,CACE7F,SAAUzM,KAAKyM,SACf8F,SAAU,CAAEC,QAAS,GAAIC,QAAS,SAE3C,kBAAC,IAAKzR,KAAN,KACY,kBAAC,IAAD,CAAQK,KAAK,UAAUI,SAAS,UAAhC,oB,GA3FEK,aAqGf6R,MAAkB5R,IAAKC,OAAO,CAACC,KAAK,eAAlBF,CAAkC4R,IClG5DrQ,GAAkBC,IAAlBD,OAAOE,GAAWD,IAAXC,QAEC,SAASoQ,GAAc3T,GAAO,IAClC2G,EAAMwI,eAANxI,GADiC,EAEzBjD,YAAYd,GAAsB,CAC7Ce,YAD6C,SACjCC,GACRS,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,wCACLzI,KAAK,YACN0I,MAAK,SAACC,GACJA,EAAOjC,OACNnI,EAAM4G,QAAQC,KAAd,+BAA2CF,QAIrDzC,QAZ6C,SAYrCC,GACJE,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,8FACLzI,KAAK,eAhBVwQ,EAFiC,oBA0BxC,OACI,6BACA,kBAAC,GAAD,CAAQtL,GAAG,YAAYtF,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IACtD,kBAACgD,GAAD,CAAOE,SAAS,QAAQ1C,SAPtB,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SAOnB,kBAAC,GAAD,CAAUxF,MAAO,CAAEyF,OAAQ,gBACxB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACtD,kBAAC,IAAD,KACI,kBAAC,IAAD,KACG,kBAAC,GAAD,CAAiB7D,SAAUqR,EAAMtL,GAAIA,S,IC1CrDiN,G,2MAEFrO,MAAQ,CACJ4C,MAAO,I,EAGTqE,SAAW,YAA4B,IAAfrE,EAAc,EAAxB2J,OAAU3J,MACtB,EAAKtC,SAAS,CAAEsC,W,EAGpBF,cAAgB,SAAC9H,GACbA,EAAEC,iBACF,EAAKJ,MAAMC,KAAKiI,yBAAwB,SAAC5H,EAAIC,GACzC,IAAID,EAAI,CAGL,IAAIO,EAAa,CACbyH,OAAQ/H,EAAOyB,KACf0P,QAAQnR,EAAOsT,QACfC,YAAYvT,EAAOiG,YACnBmL,MAAMpR,EAAOoR,MACboC,MAAMxT,EAAOwT,MACbC,YAAYzT,EAAOyT,aAKnBnT,EADkB,IAAlBA,EAAUkT,MACA,gBACHlT,EADE,CAELoT,YAAW,IAGN,gBACFpT,EADE,CAELoT,YAAW,IAGnB,EAAKjU,MAAMY,SAAS,CAACC,UAAU,CAACwH,MAAMxH,U,wEAQxC,IACEf,EAAqBC,KAAKC,MAAMC,KAAhCH,kBACCqI,EAAUpI,KAAKwF,MAAf4C,MACR,OACG,kBAAC,IAAD,CAAMjI,SAAUH,KAAKkI,eAChB,kBAAC,IAAKlH,KAAN,CAAWyI,MAAM,UACZ1J,EAAkB,OAAO,CACtBkB,MAAM,CACF,CACIC,UAAU,EACVC,QAAQ,4CAJnBpB,CAOE,kBAAC,IAAD,CACCyB,YAAY,aAEpB,kBAAC,IAAKR,KAAN,CAAWyI,MAAM,WACZ1J,EAAkB,UAAU,CACzBkB,MAAM,CACF,CACIC,UAAS,EACTC,QAAQ,2CAJnBpB,CAOE,kBAAC,IAAD,CACCyB,YAAY,cAEpB,kBAAC,IAAKR,KAAN,CAAYyI,MAAM,eACb1J,EAAkB,cAAc,CAC7BqS,eAAehK,EACfnH,MAAM,CAAC,CAACC,UAAS,EACbC,QAAQ,iDAHfpB,CAKE,kBAAC,IAAMuS,SAAP,CACE9Q,YAAY,cACZiL,SAAUzM,KAAKyM,aAGxB,kBAAC,IAAKzL,KAAN,CAAYyI,MAAM,SACb1J,EAAkB,QAAQ,CACvBqS,eAAehK,EACfnH,MAAM,CAAC,CAACC,UAAS,EACbC,QAAQ,8CAHfpB,CAKE,kBAAC,IAAMuS,SAAP,CACC9Q,YAAY,QACXiL,SAAUzM,KAAKyM,aAGxB,kBAAC,IAAKzL,KAAN,CAAWyI,MAAM,uBACR1J,EAAkB,QAAQ,CACvB6J,aAAa,GADhB7J,CAIG,kBAAC,KAAD,CAAa8J,IAAK,EAAGH,IAAK,QAGtC,kBAAC,IAAK1I,KAAN,CAAWyI,MAAM,eACZ1J,EAAkB,cAAc,CAC7BkB,MAAM,CAAC,CACHC,UAAS,EACTC,QAAQ,iCAHfpB,CAKE,kBAAC,IAAD,CACCyB,YAAY,kBAGpB,kBAAC,IAAKR,KAAN,KACY,kBAAC,IAAD,CAAQK,KAAK,UAAUI,SAAS,UAAhC,mB,GAjHF6L,IAAMxL,WA0HjB+R,MAAc9R,IAAKC,OAAO,CAACC,KAAK,YAAlBF,CAA+B8R,ICrHrDvQ,GAAkBC,IAAlBD,OAAOE,GAAWD,IAAXC,QAyCC2Q,GAvCM,SAAClU,GAClB,IAD0B,EAKP0D,YAAYV,GAAa,CACxCW,YADwC,SAC5BC,GACRS,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,0CACLzI,KAAK,YACN0I,MAAK,SAACC,GACJA,EAAOjC,OACNnI,EAAM4G,QAAQC,KAAd,uBAIV3C,QAZwC,WAapCG,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,0EACLzI,KAAK,aAhBV0M,EALmB,oBAyB1B,OACI,6BACI,kBAAC,GAAD,CAAQrN,UAAU,SAASO,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IAC7D,kBAACgD,GAAD,CAAOE,SAAS,YAAY1C,SA3B3B,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SA2Bf,kBAAC,GAAD,CAASxF,MAAO,CAAEyF,OAAQ,gBACtB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACtD,kBAAC,GAAD,CAAa7D,SAAUuN,QCpCpC7I,GAAUoF,KAAVpF,OACAqF,GAAUC,IAAVD,OACD3G,GAAQH,aAAa0D,QAAQ,SAsKpB4M,G,YApKX,WAAYnU,GAAO,IAAD,8BACd,4CAAMA,KAaV4F,UAAY,WACR,EAAKC,SAAS,CACVL,SAAQ,KAhBE,EAqBlBM,UAAY,SAAA3F,GAER,EAAK0F,SAAS,CACVL,SAAQ,KAxBE,EA6BlBO,cAAe,SAAA5F,GAEX,EAAK0F,SAAS,CACNL,SAAQ,KAhCF,EA8ClB0F,UAAW,SAAAuE,GACPtE,KAAQ,CACJ/H,OACAgI,OAAO,OACPhK,KAAK,OACLwC,KAAK,CACDyH,MAAM,0MASVC,QAAQ,CACJC,cAAc,OAAD,OAAQvH,KAEzBwH,QAAS,SAAAC,GACLgE,EAAShE,OAjEH,EAsElBwE,OAAO,SAACtJ,GACDA,GACCtC,KAAKC,KAAK,CACNC,MAAM,yCACN2F,KAAM,iCACNzI,KAAM,UACNyO,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,gBACpBlG,MAAK,SAACC,GACLA,EAAOjC,MAAM,EAAKnI,MAAMY,SAAS,CAACC,UAAU,CAAC8F,GAAGA,KAAMnG,QAAQ4L,IAAI,mBA/E1E,EAAK7G,MAAO,CACR3B,KAAK,GACLiI,SAAQ,EACRrG,SAAQ,EACRyG,MAAM,UAEV,EAAKgE,OAAS,EAAKA,OAAOtE,KAAZ,iBACd,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,iBATN,E,iFAqCE,IAAD,OACf5L,KAAKmL,WAAU,SAAAO,GACX,EAAK5F,SAAS,CACVjC,KAAK6H,EAAI7H,KAAKqK,UACdpC,SAAQ,S,mCA6CP1D,GACTpI,KAAK8F,SAAS,CACVoG,MAAM9D,IAEV3H,QAAQ4L,IAAIrM,KAAKwF,MAAM0G,S,+BAElB,IAAD,OACJ,OACG,6BACI,kBAAC,KAAD,CACIJ,QAAS9L,KAAKwF,MAAMsG,QACpBS,WAAYvM,KAAKwF,MAAM3B,KACvBsB,KAAK,QACAqH,WAAY,CACRC,SAAU,SAAAZ,KAGVa,SAAU,GAElBC,OACI,kBAAC,IAAD,CAAQhL,QAAS3B,KAAK6F,WAAY,kBAAC,IAAD,CAAMxE,KAAK,WAA7C,UAELwL,WAAY,SAAAC,GAAI,OACZ,kBAAC,KAAK9L,KAAN,CACKkE,IAAK4H,EAAKlG,GACVP,QAAS,CACL,kBAAC,GAAD,CAAUoE,UAAU,yBAAyB7D,GAAIkG,EAAKlG,GAAMvF,KAAK,OAAOmJ,MAAM,UAAWjJ,MAAM,YAC/F,kBAAC,GAAD,CAAUkJ,UAAU,sBAAsB7D,GAAIkG,EAAKlG,GAAIvF,KAAK,UAAUE,MAAM,UAAWiJ,MAAM,YAC7F,kBAAC,IAAD,CAAQ7I,QAAS,EAAKuO,OAAOtE,KAAK,EAAKkB,EAAKlG,KAAM,kBAAC,IAAD,CAAMvF,KAAK,SAASmJ,MAAM,UAAUE,aAAa,eAEvG,kBAAC,KAAK1J,KAAKqE,KAAX,CACIb,MAAK,UAAKsI,EAAKvE,OAAOwE,eACtBtG,YAAW,kBACIqG,EAAK6E,eAOrC,kBAAC,KAAD,CACAnN,MAAM,WACNiB,QAASzF,KAAKwF,MAAMC,QACpBc,KAAQvG,KAAK+F,UACbS,SAAYxG,KAAKgG,eACjB,kBAAC,IAAD,KACC,kBAAC,KAAD,CAAQgH,aAAa,SAAS1L,MAAO,CAAEwI,MAAO,KAAO2C,SAAUzM,KAAK2L,aAAaC,KAAK5L,OAC1E,kBAAC,GAAD,CAAQoI,MAAM,UAAd,YACA,kBAAC,GAAD,CAAQA,MAAM,WAAd,WACA,kBAAC,GAAD,CAAQA,MAAM,eAAd,iBAIZ,6BACA,kBAAC,IAAD,KACI,kBAAC,GAAD,CAAQ5G,YAAY,SAASyL,SAAU,SAAA7E,GACnC,EAAKtC,SAAS,CACVgG,SAAQ,IAGZ,EAAK7L,MAAMqL,MAAM,CAACxK,UAAU,CAACmL,SAAS7D,EAAM8E,IAAI,EAAK1H,MAAM0G,SAC3DiB,YAAW,WAEP,EAAKrH,SAAS,CACVgG,SAAQ,EACRjI,KAAK,EAAK5D,MAAM4D,KAAKwQ,UACrB5O,SAAQ,MAEd,MACH4H,aAAW,W,GA5JdC,IAAMxL,WCFnBwB,GAAkBC,IAAlBD,OAAOE,GAAWD,IAAXC,QAyCC8Q,GAxCO,SAACrU,GACnB,IAD2B,EAKHuN,YAAarK,IALV,mBAKpBoR,EALoB,KAKX1Q,EALW,KAKXA,KALW,EAMXF,YAAYb,GAAgB,CACxCc,YADwC,WAEpCU,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,uCACLzI,KAAK,YAEN0I,MAAK,SAACC,GACFA,EAAOjC,OACNxG,OAAOC,SAASgP,aAGzB1M,QAZqC,WAapCG,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,wCACLzI,KAAK,aAhBV8S,EANoB,oBA0B3B,OACI,6BACI,kBAAC,GAAD,CAAQzT,UAAU,SAASO,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IAC7D,kBAACgD,GAAD,CAAOE,SAAS,qBAAqB1C,SA5BpC,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SA4Bf,kBAAC,GAAD,CAASxF,MAAO,CAAEyF,OAAQ,gBACtB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACtD,kBAAC,GAAD,CAAO7D,SAAU2T,EAAOlJ,MAAOiJ,EAAS1Q,KAAMA,QCrC5DI,GAAQH,aAAa0D,QAAQ,SAC7BiN,G,2MAEFjP,MAAQ,CACJ4C,MAAO,GACPxB,GAAG,EAAK3G,MAAM2G,GACdwM,MAAM,I,EAGR3G,SAAW,YAA4B,IAAfrE,EAAc,EAAxB2J,OAAU3J,MACtB,EAAKtC,SAAS,CAAEsC,W,EAalB+C,UAAW,SAAAuE,GACTtE,KAAQ,CACJ/H,OACAgI,OAAO,OACPhK,KAAK,OACLwC,KAAK,CACDyH,MAAM,6DAAD,OAEa,EAAK9F,MAAMoB,GAFxB,oQAYT2E,QAAQ,CACJC,cAAc,OAAD,OAAQvH,KAEzBwH,QAAS,SAAAC,GACLgE,EAAShE,O,EAMrBxD,cAAgB,SAAC9H,GACbA,EAAEC,iBACF,EAAKJ,MAAMC,KAAKiI,yBAAwB,SAAC5H,EAAIC,GACzC,IAAID,EAAI,CAGL,IAAIO,EAAa,CACbyH,OAAQ/H,EAAOyB,KACf0P,QAAQnR,EAAOsT,QACfC,YAAYvT,EAAOiG,YACnBmL,MAAMpR,EAAOoR,MACboC,MAAMxT,EAAOwT,MACbC,YAAYzT,EAAOyT,aAKnBnT,EADkB,IAAlBA,EAAUkT,MACA,gBACHlT,EADE,CAELoT,YAAW,IAGN,gBACFpT,EADE,CAELoT,YAAW,IAGnBzT,QAAQ4L,IAAIvL,GACZ,EAAKb,MAAMY,SAAS,CAACC,UAAU,CAAC8F,GAAG,EAAKpB,MAAMoB,GAAG0B,MAAMxH,U,mFAlE5C,IAAD,OACfd,KAAKmL,WAAU,SAAAO,GAEX,EAAK5F,SAAS,CACVsN,MAAM1H,EAAI7H,KAAK6Q,WAEnBjU,QAAQ4L,IAAI,EAAK7G,Y,+BAoElB,IACEzF,EAAqBC,KAAKC,MAAMC,KAAhCH,kBACCqI,EAAUpI,KAAKwF,MAAf4C,MACR,OACG,kBAAC,IAAD,CAAMjI,SAAUH,KAAKkI,eAChB,kBAAC,IAAKlH,KAAN,CAAWyI,MAAM,UACZ1J,EAAkB,OAAO,CACtB6J,aAAa5J,KAAKwF,MAAM4N,MAAM7K,OAC9BtH,MAAM,CACF,CACIC,UAAU,EACVC,QAAQ,4CALnBpB,CAQE,kBAAC,IAAD,CACCyB,YAAY,aAEpB,kBAAC,IAAKR,KAAN,CAAWyI,MAAM,WACZ1J,EAAkB,UAAU,CACzB6J,aAAa5J,KAAKwF,MAAM4N,MAAMzB,QAC9B1Q,MAAM,CACF,CACIC,UAAS,EACTC,QAAQ,2CALnBpB,CAQE,kBAAC,IAAD,CACCyB,YAAY,cAEpB,kBAAC,IAAKR,KAAN,CAAYyI,MAAM,eACb1J,EAAkB,cAAc,CAC7BqS,eAAehK,EACfwB,aAAa5J,KAAKwF,MAAM4N,MAAMW,YAC9B9S,MAAM,CAAC,CACHC,UAAS,EACTC,QAAQ,iDALfpB,CAOE,kBAAC,IAAMuS,SAAP,CACE9Q,YAAY,cACZiL,SAAUzM,KAAKyM,aAGxB,kBAAC,IAAKzL,KAAN,CAAYyI,MAAM,SACb1J,EAAkB,QAAQ,CACvB6J,aAAa5J,KAAKwF,MAAM4N,MAAMxB,MAC9BQ,eAAehK,EACfnH,MAAM,CAAC,CAACC,UAAS,EACbC,QAAQ,8CAJfpB,CAME,kBAAC,IAAMuS,SAAP,CACC9Q,YAAY,QACXiL,SAAUzM,KAAKyM,aAGxB,kBAAC,IAAKzL,KAAN,CAAWyI,MAAM,uBACR1J,EAAkB,QAAQ,CACvB6J,aAAa5J,KAAKwF,MAAM4N,MAAMY,OADjCjU,CAIG,kBAAC,KAAD,CAAa8J,IAAK,EAAGH,IAAK,QAGtC,kBAAC,IAAK1I,KAAN,CAAWyI,MAAM,eACZ1J,EAAkB,cAAc,CAC7B6J,aAAa5J,KAAKwF,MAAM4N,MAAMa,YAC9BhT,MAAM,CAAC,CACHC,UAAS,EACTC,QAAQ,iCAJfpB,CAME,kBAAC,IAAD,CACCyB,YAAY,kBAGpB,kBAAC,IAAKR,KAAN,KACY,kBAAC,IAAD,CAAQK,KAAK,UAAUI,SAAS,UAAhC,mB,GAhKK6L,IAAMxL,WAyKxB2S,MAAqB1S,IAAKC,OAAO,CAACC,KAAK,UAAlBF,CAA6B0S,ICrK1DnR,GAAkBC,IAAlBD,OAAOE,GAAWD,IAAXC,QA0CCmR,GAzCQ,SAAC1U,GAAS,IACtB2G,EAAMwI,eAANxI,GADqB,EAEXjD,YAAYf,GAAgB,CACzCgB,YADyC,SAC7BC,GACRS,KAAKC,KAAK,CACNC,MAAM,QACN2F,KAAK,4CACLzI,KAAK,YACN0I,MAAK,SAACC,GACJA,EAAOjC,OACNnI,EAAM4G,QAAQC,KAAd,uBAIV3C,QAZyC,SAYjCN,GACJpD,QAAQ4L,IAAIxI,MAbb+Q,EAFqB,oBAuB5B,OACI,6BACI,kBAAC,GAAD,CAAQtT,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IAC1C,kBAACgD,GAAD,CAAOE,SAAS,sBAAsB1C,SARrC,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SAQf,kBAAC,GAAD,CAASxF,MAAO,CAAEyF,OAAQ,gBACtB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACtD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKwC,KAAM,IACP,kBAAC,GAAD,CAAoBrG,SAAU+T,EAAQhO,GAAIA,UCvChE3C,GAAQH,aAAa0D,QAAQ,SAgEpBqN,G,YA9DX,WAAY5U,GAAO,IAAD,8BACd,4CAAMA,KAiBVkL,UAAW,SAAAuE,GACPtE,KAAQ,CACJ/H,OACAgI,OAAO,OACPhK,KAAK,OACLwC,KAAK,CACDyH,MAAM,6DAAD,OAEa,EAAK9F,MAAMoB,GAFxB,sSAaT2E,QAAQ,CACJC,cAAc,OAAD,OAAQvH,KAEzBwH,QAAS,SAAAC,GACLgE,EAAShE,OAvCjB,EAAKlG,MAAM,CACPoB,GAAG,EAAK3G,MAAM2G,GACdwM,MAAM,GACN7K,OAAO,IALG,E,iFAQE,IAAD,OACfvI,KAAKmL,WAAU,SAAAO,GACX,IAAMnD,EAASmD,EAAI7H,KAAK6Q,SAASnM,OAAOwE,cACxC,EAAKjH,SAAS,CACVsN,MAAM1H,EAAI7H,KAAK6Q,SACfnM,gB,+BAkCR,OACI,6BACI,kBAAC,IAAD,CAAM/D,MAAOxE,KAAKwF,MAAM+C,QACpB,kBAAC,KAAD,CAAc/D,MAAM,cAAcgP,UAAQ,GACtC,kBAAC,KAAaxS,KAAd,CAAmByI,MAAM,eAAgBzJ,KAAKwF,MAAM4N,MAAMa,aAC1D,kBAAC,KAAajT,KAAd,CAAoByI,MAAM,sBAAsBvC,KAAM,GAAMlH,KAAKwF,MAAM4N,MAAMc,WAAWlU,KAAKwF,MAAM4N,MAAMY,MAA7C,6BAC5D,kBAAC,KAAahT,KAAd,CAAmByI,MAAM,cAAcvC,KAAM,GAAKlH,KAAKwF,MAAM4N,MAAMW,aACnE,kBAAC,KAAa/S,KAAd,CAAmByI,MAAM,WAAzB,IAAqCzJ,KAAKwF,MAAM4N,MAAMzB,QAAtD,KACA,kBAAC,KAAa3Q,KAAd,CAAmByI,MAAM,SAAzB,IAAoCzJ,KAAKwF,MAAM4N,MAAMxB,MAArD,Y,GAxDGtE,IAAMxL,WCA1BwB,GAAkBC,IAAlBD,OAAOE,GAAWD,IAAXC,QAoBCsR,GAnBK,SAAC7U,GACjB,IAIO2G,EAAMwI,eAANxI,GACP,OACI,6BACA,kBAAC,GAAD,CAAQ7F,UAAU,SAASO,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IAC7D,kBAACgD,GAAD,CAAOE,SAAS,WAAW1C,SARtB,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SAQnB,kBAAC,GAAD,CAASxF,MAAO,CAAEyF,OAAQ,gBACtB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACvD,kBAAC,GAAD,CAAckC,GAAIA,QCZ1BgE,GAAUC,IAAVD,OACD3G,GAAQH,aAAa0D,QAAQ,SA4IpBuN,G,YAzIX,WAAY9U,GAAO,IAAD,8BACd,4CAAMA,KASV4F,UAAY,WACR,EAAKC,SAAS,CACVL,SAAQ,KAZE,EAiBlBM,UAAY,SAAA3F,GAER,EAAK0F,SAAS,CACVL,SAAQ,KApBE,EAyBlBO,cAAe,SAAA5F,GAEX,EAAK0F,SAAS,CACNL,SAAQ,KA5BF,EA0ClB0F,UAAY,SAAAhJ,GACRiJ,KAAQ,CACJ/H,OACAgI,OAAO,OACPhK,KAAK,OACLwC,KAAK,CACDyH,MAAM,kZAeVC,QAAQ,CACJC,cAAc,OAAD,OAAQvH,KAEzBwH,QAAS,SAAAC,GACLvJ,EAAGuJ,OAjEX,EAAKlG,MAAM,CACP4N,MAAM,GACNtH,SAAQ,EACRrG,SAAQ,GALE,E,iFAgCE,IAAD,OACfzF,KAAKmL,WAAU,SAAAO,GACXjL,QAAQ4L,IAAIX,GACZ,EAAK5F,SAAS,CACVsN,MAAM1H,EAAI7H,KAAKmR,WACflJ,SAAQ,S,+BAoCX,IAAD,OACJ,OACI,6BACI,kBAAC,KAAD,CACIa,OACI,kBAAC,IAAD,CAAQhL,QAAS3B,KAAK6F,WAAtB,IAAmC,kBAAC,IAAD,CAAMxE,KAAK,WAA9C,WAEJyK,QAAS9L,KAAKwF,MAAMsG,QACpBS,WAAYvM,KAAKwF,MAAM4N,MACvB5G,WAAY,CACZC,SAAS,SAAAZ,KAGTa,SAAS,IAGTG,WAAa,SAAAC,GAAI,OACb,6BACI,kBAAC,KAAK9L,KAAN,CACIkE,IAAK4H,EAAKlG,GAEVP,QAAS,CACL,kBAAC,GAAD,CAAWoE,UAAU,uBAAwB7D,GAAIkG,EAAKlG,GAAIvF,KAAK,UAAUE,MAAM,UAAUiJ,MAAM,YAC3F,kBAAC,GAAD,CAAUC,UAAU,uBAAuB7D,GAAIkG,EAAKlG,GAAIvF,KAAK,OAAOmJ,MAAM,UAAWjJ,MAAM,cAG/F,kBAAC,KAAKP,KAAKqE,KAAX,CACAb,MAAOsI,EAAKa,KACZlH,YAAW,gBAAWqG,EAAKa,KAAhB,kBAA8Bb,EAAKmI,UAGtD,kBAAC,KAAD,CACIzQ,MAAM,WACNiB,QAAS,EAAKD,MAAMC,QACpBc,KAAQ,EAAKR,UACbS,SAAY,EAAKR,eACjB,kBAAC,IAAD,KACA,kBAAC,GAAD,CAAQxE,YAAY,SAASyL,SAAU,SAAA7E,GACnC,EAAKtC,SAAS,CACVgG,SAAQ,IAGZ,EAAK7L,MAAMqL,MAAM,CAACxK,UAAU,CAACoM,IAAI9E,KAEjC+E,YAAW,WAEP,EAAKrH,SAAS,CACVgG,SAAQ,EACRsH,MAAM,EAAKnT,MAAM4D,KAAKqR,UAAU,GAAGvE,cACnClL,SAAQ,MAEd,MACH4H,aAAW,e,GA/H1BC,IAAMxL,WCDnBwB,GAAkBC,IAAlBD,OAAOE,GAAWD,IAAXC,QAsBC2R,GApBC,SAAClV,GACb,IADqB,EAKGuN,YAAapK,IALhB,mBAKdgS,EALc,KAKNvR,EALM,KAKNA,KAEf,OACI,6BACA,kBAAC,GAAD,CAAQ9C,UAAU,SAASO,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IAC7D,kBAACgD,GAAD,CAAOE,SAAS,cAAc1C,SATzB,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SASnB,kBAAC,GAAD,CAASxF,MAAO,CAAEyF,OAAQ,gBACtB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,MACvD,kBAAC,GAAD,CAAO4G,MAAO8J,EAAQvR,KAAMA,QCnBpCP,GAAkBC,IAAlBD,OAAOE,GAAWD,IAAXC,QAqBC6R,GAnBC,SAACpV,GAKb,OACI,6BACI,kBAAC,GAAD,CAASqB,MAAO,CAAEqD,WAAY,OAAQC,QAAS,IAC3C,kBAACgD,GAAD,CAAOE,SAAS,WAAW1C,SAP1B,WACTtB,aAAaO,QACbpE,EAAM4G,QAAQC,KAAK,SAOf,kBAAC,GAAD,CAASxF,MAAO,CAAEyF,OAAQ,gBACtB,yBAAKzF,MAAO,CAAEsD,QAAS,GAAID,WAAY,OAAQD,UAAW,UCOnE4Q,GAAiB/R,IAAjB+R,MAAM7R,GAAWF,IAAXE,OACN8R,GAAWC,KAAXD,QAwGQE,OAlGf,SAAaxV,GAOP,OACE,kBAAC,IAAD,CAAQc,UAAU,SAASO,MAAO,CAAEoD,UAAW,UAC9C,kBAAC4Q,GAAD,CACChU,MAAO,CAACqD,WAAW,IACnB+Q,WAAW,KACXC,eAAe,KACfC,aAAc,SAAAC,KAGdC,WAAY,SAACC,EAAS1U,MAGpB,yBAAKM,QAjBJ,WAET1B,EAAM4G,QAAQC,KAAK,UAeS/F,UAAU,SAC9B,kBAAC,KAAD,CACEyJ,MAAM,OACNuE,KAAK,SACLiH,oBAAqB,CAAC,MACtB,kBAAC,KAAKhV,KAAN,KAAW,kBAAC,KAAD,CAAMsF,GAAG,SAAT,WACX,kBAACiP,GAAD,CACErQ,IAAI,IACJV,MACE,8BACE,kBAAC,IAAD,CAAMnD,KAAK,SACX,0BAAMN,UAAU,YAAhB,cAGJ,kBAAC,KAAKC,KAAN,KAAW,kBAAC,KAAD,CAAMsF,GAAG,sBAAT,mBACX,kBAAC,KAAKtF,KAAN,KAAW,kBAAC,KAAD,CAAMsF,GAAG,sBAAT,sBAEb,kBAACiP,GAAD,CACErQ,IAAI,IACJV,MACE,8BACE,kBAAC,IAAD,CAAMnD,KAAK,YACX,0BAAMN,UAAU,YAAhB,iBAGJ,kBAAC,KAAKC,KAAN,KACC,kBAAC,KAAD,CAAMsF,GAAG,oBAAT,wBAGH,kBAACiP,GAAD,CACErQ,IAAI,IACJV,MACE,8BACE,kBAAC,IAAD,CAAMnD,KAAK,SACX,0BAAMN,UAAU,YAAhB,eAGJ,kBAAC,KAAKC,KAAN,KAAW,kBAAC,KAAD,CAAMsF,GAAG,sBAAT,oBACX,kBAAC,KAAKtF,KAAN,KAAW,kBAAC,KAAD,CAAMsF,GAAG,sBAAT,wBAIlB,kBAAC,IAAD,CAAQvF,UAAU,UAChB,kBAAC,KAAD,KACK,kBAAC,GAAD,CAAiBkV,OAAK,EAACC,KAAK,QAAQ5O,UAAWX,KAE/C,kBAAC,GAAD,CAAiBsP,OAAK,EAACC,KAAK,qBAAqB5O,UAAW0C,KAC5D,kBAAC,GAAD,CAAiBiM,OAAK,EAACC,KAAK,qBAAqB5O,UAAWiG,KAC5D,kBAAC,GAAD,CAAiB0I,OAAK,EAACC,KAAK,4BAA4B5O,UAAWuI,KACnE,kBAAC,GAAD,CAAiBoG,OAAK,EAACC,KAAK,0BAA0B5O,UAAWsJ,KAEjE,kBAAC,GAAD,CAAiBqF,OAAK,EAACC,KAAK,mBAAmB5O,UAAW6N,KAC1D,kBAAC,GAAD,CAAiBc,OAAK,EAACC,KAAK,+BAA+B5O,UAAW6H,KACtE,kBAAC,GAAD,CAAiB8G,OAAK,EAACC,KAAK,2BAA2B5O,UAAWuK,KAClE,kBAAC,GAAD,CAAiBoE,OAAK,EAACC,KAAK,2BAA2B5O,UAAW+L,KAElE,kBAAC,GAAD,CAAiB4C,OAAK,EAACC,KAAK,4BAA4B5O,UAAWyL,KACnE,kBAAC,GAAD,CAAiBkD,OAAK,EAACC,KAAK,kCAAkC5O,UAAWoL,KACzE,kBAAC,GAAD,CAAiBuD,OAAK,EAACC,KAAK,2BAA2B5O,UAAWoM,KAClE,kBAAC,GAAD,CAAiBuC,OAAK,EAACC,KAAK,gCAAgC5O,UAAWsM,KAEvE,kBAAC,GAAD,CAAiBqC,OAAK,EAACC,KAAK,iBAAiB5O,UAAW6M,KACxD,kBAAC,GAAD,CAAiB8B,OAAK,EAACC,KAAM,kBAAkB5O,UAAWgN,KAC1D,kBAAC,GAAD,CAAiB2B,OAAK,EAACC,KAAK,6BAA6B5O,UAAWqN,KACpE,kBAAC,GAAD,CAAiBsB,OAAK,EAACC,KAAK,0BAA0B5O,UAAWwN,KAGjE,kBAAC,GAAD,CAAiBmB,OAAK,EAACC,KAAM,4BAA4B5O,UAAW+N,KAEpE,kBAAC,KAAD,CAAOa,KAAK,UAAU5O,UAAW+H,MAEvC,kBAAC,GAAD,CAAQ/N,MAAO,CAAEyD,UAAW,WAA5B,iCCxHNN,IAAM,EACG0R,GAAc,SAAC,GAAmC,IAAvBrU,EAAsB,EAAjCwF,UAAwBC,EAAS,8BAI1D,OAHGzD,aAAa0D,QAAQ,aACpB/C,IAAM,GAGN,kBAAC,KAAD,iBAAW8C,EAAX,CAAiBE,OACb,SAACxH,GACG,OACCwE,GAAQ,kBAAC,KAAD,CAAU6B,GAAI,CACnBoB,SAAS,QACTlC,MAAM,CACFmC,KAAK1H,EAAM4B,aAGlB,kBAACC,EAAc7B,QCiBjBmW,G,YAxBb,WAAYnW,GAAQ,IAAD,sBACjB,4CAAMA,IACN,IAAMgE,EAAQH,aAAa0D,QAAQ,SAFlB,OAGdvD,GACD,EAAKhE,MAAMY,SAAS,CAACC,UAAU,CAACmD,WAJjB,E,sEASf,OACA,6BAEE,kBAAC,KAAD,KACE,kBAAC,GAAD,CAAcgS,OAAK,EAACC,KAAK,IAAI5O,UAAY5D,KACzC,kBAAC,GAAD,CAAawS,KAAK,SAAS5O,UAAa5D,KACxC,kBAAC,GAAD,CAAiBwS,KAAK,QAAQ5O,UAAcmO,KAC5C,kBAAC,KAAD,CAAOS,KAAK,IAAI5O,UAAW+H,W,GAjBfvN,aCSPuU,GAZF,SAACpW,GAAS,IAAD,EAED0D,YAAYrB,EAAa,CACtC6B,QADsC,SAC9B5D,GACJuD,aAAawS,WAAW,cAFzBC,EAFW,oBAOlB,OACI,kBAAC,GAAD,CAAS1V,SAAU0V,K,8CCIrBC,I,OAAW,IAAIC,KAAe,CAAEC,IAAIrT,MAEpCsT,GAAW,IAAIC,MAAW,SAACC,EAAUC,GAExC,IAAM7S,EAAQH,aAAa0D,QAAQ,SAOnC,OANAqP,EAAUE,WAAW,CAElBxL,QAAQ,CACLyL,cAAe/S,EAAK,cAAUA,GAAU,MAGvC6S,EAAQD,MAIZI,GAAS,IAAIC,KAAa,CAC7BC,KAAKR,GAASS,OAAOZ,IACrBa,MAAM,IAAIC,OAIbC,IAAS9P,OAAO,kBAAC,KAAD,CAAgBwP,OAAQA,IAAQ,kBAAC,KAAD,KAChD,kBAAC,GAAD,QAAmCO,SAASC,eAAe,W","file":"static/js/main.ff42754e.chunk.js","sourcesContent":["import React ,{Component}from 'react';\nimport {Form,Icon,Input,Button} from 'antd';\nimport ButtonGroup from 'antd/lib/button/button-group';\n\n\n class Login extends Component{\n\n    \n\n    render(){\n\n        \n        const administracion =()=>{\n            window.location =\"http://localhost:8000/admin/\"\n        }\n       \n        const  handleSubmit = (e) => { \n        e.preventDefault(); \n        this.props.form.validateFields((err,values)=>{\n            if(err)console.err(err)\n            else{\n                let user ={\n                    username:values.username,\n                    password:values.password\n                }\n                this.props.mutation({variables:{username:user.username, password:user.password}})\n                \n            }\n\n        })\n    }\n        const {getFieldDecorator}= this.props.form;\n        return (\n            <Form onSubmit={handleSubmit} className=\"login-form\">\n                <Form.Item>\n                    {getFieldDecorator('username',{\n                        rules:[\n                            {required:true,message:'Por favor introduzca  su Nombre de Usuario '},\n                            ]\n                    })(\n                        <Input\n                            prefix={<Icon type=\"user\" style={{color:'rgba(0,0,0,.25)'}}/>}\n                            placeholder=\"Nombre de usuario\"/>,\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    {getFieldDecorator('password',{\n                        rules:[{required:true,message:'Por favor introduzca su Contraseña'}],\n                    })(\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{color:'rgba(0,0,0,.25)'}}/>}\n                            type=\"password\"\n                            placeholder=\"password\"\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item>\n                        <ButtonGroup>\n                            <Button type=\"primary\" htmlType=\"submit\" icon=\"login\"  className=\"login-form-button\">\n                                Inicio de Seccón \n                            </Button>\n                            <Button onClick={administracion} type=\"ghost\" className='login-form-button' >\n                                Administrador\n                            </Button>\n                        </ButtonGroup>\n                </Form.Item>\n            </Form>\n        )\n    }\n}\nexport default Login = Form.create({ name: 'normal_login' })(Login);","\nclass Auth {\n    constructor(){\n        this.authentication = false\n    }\n\n\n    login(cb){\n      this.authentication = true\n      cb();\n\n    }\n    logout(cb){\n        this.authentication = false\n        cb();\n    }\n    isAuthentication(){\n        return this.authentication\n    }\n}\nexport default new Auth()","import { gql } from 'apollo-boost';\n\n//Mutations\nconst USER_LOGIN = gql `\nmutation TokenAuth($username: String!, $password: String!) {\n  tokenAuth(username: $username, password: $password) {\n      token\n  }\n}`;\nconst VERIFY_TOKEN = gql `\nmutation VerifyToken($token:String!){\n\tverifyToken(token:$token){\n    payload\n  }\n}\n`;\n\nconst ADD_NOTEE = gql`\nmutation CreateNote($input:NotaInput!){\n  createNote(input:$input){\n    ok,\n    note{\n      id\n    }\n  }\n}`\nconst ADD_PACIENTE = gql `\nmutation CreatePaciete($input:PacienteInput!){\n  createPaciente(input:$input){\n    ok,\n    pacienteUser{\n      id,\n      nombre\n    }\n  }\n}\n`\n\nconst UPDATE_PATIENT = gql `\nmutation UpdatePaciente($id:Int!,$input:PacienteInput!){\n  updatePaciente(id:$id,input:$input){\n    ok,\n    patient{\n      id,\n      nombre\n    }\n  }\n}\n`;\nconst UPDATE_EXPEDIENTE=gql`\nmutation UpdateExpedient($id:Int!,$input:UExpedientInput!){\n  updateExpediente(id:$id,input:$input){\n    ok,\n    expedient{\n      id\n    }\n  }\n}\n`;\nconst CREAT_EXPEDIENTE = gql`\nmutation CreateExpediente($input:ExpedientInput!){\n  createExpediente(input:$input){\n    ok,\n    expedient{\n      id\n    }\n  }\n}\n`;\nconst UPDATE_MEDICINE = gql`\nmutation UpdateMedicine($id:Int!,$input:MedicineInput!){\n  updateMedicine(id:$id,input:$input){\n    ok,\n    medicine{\n      id\n    }\n  }\n}`\nconst UPDATE_NOTE_EXPEDIENT= gql`\nmutation UpdateNoteExpedient($id:Int!,$input:NoteInput!){\n  updateNoteExpedient(id:$id,input:$input){\n    ok,\n    note{\n      id\n    }\n  }\n}`;\n//Delete\nconst DELETE_MEDICINE=gql`\nmutation DeleteMedicine($id:Int!){\n  deleteMedicine(id:$id){\n    ok\n  }\n}`\nconst DELETE_NOTE_EXPEDIENT=gql`\nmutation DeleteNoteExpedient($id:Int!){\n  deleteNoteExpedient(id:$id){\n    ok\n  }\n}`\nconst DELETE_EXPEDIENT=gql`\nmutation DeleteExpedient($id:Int!){\n  deleteExpedient(id:$id){\n    ok\n  }\n}`\nconst ADD_MEDICINE = gql`\nmutation CreateMedicine($input:MedicineInput!){\n  createMedicine(input:$input){\n    ok,\n    medicine{\n      id\n    }\n  }\n}`\n//Query's Consultas\nconst SEARCH_PATIENT = gql`\nquery Busquedap($busqueda:String!,$por:String!){\n  busquedap(busqueda:$busqueda,por:$por){\n    id,\n    nombre,\n    apellidos,\n    edad,\n    birthday\n  }\n}`\nconst SEARCH_MEDICINE =gql`\nquery Busquedam($busqueda:String!,$por:String!){\n  busquedam(busqueda:$busqueda,por:$por){\n    nombre,\n    laboratorio,\n    formula\n  }\n}`\nconst SEARCH_EXPEDIENT = gql`\nquery  Busquedae($por:String!){\n  busquedae(por:$por){\n    expedienteSet{\n      id,\n      hoara,\n      date,\n    }\n  }\n}`\n//Consulta de los datos\n\nconst PACIENTES_DATA = gql `\nquery Patients($page:Int!){\n  patients(page:$page){\n    page,\n    pages,\n    total,\n    hasNext,\n    hasPrev,\n    objects{\n      id,\n      nombre,\n      apellidos,\n      edad,\n      ciudad,\n      colonia\n    }\n  }\n}\n`;\nconst PRUEBA_TOKEN = gql `\n{\n  users{\n    username\n  }\n}\n\n`;\n\nexport {\n\n    //Mutation\n    USER_LOGIN,\n    VERIFY_TOKEN,\n    PRUEBA_TOKEN,\n    CREAT_EXPEDIENTE,\n    UPDATE_PATIENT,\n    ADD_NOTEE ,\n    UPDATE_EXPEDIENTE,\n    UPDATE_NOTE_EXPEDIENT,\n    ADD_MEDICINE,\n    UPDATE_MEDICINE,\n    //Query\n    ADD_PACIENTE,\n    SEARCH_PATIENT,\n    PACIENTES_DATA,\n    SEARCH_MEDICINE,\n    SEARCH_EXPEDIENT,\n    //DeleteQuery's\n    DELETE_NOTE_EXPEDIENT,\n    DELETE_EXPEDIENT,\n    DELETE_MEDICINE,\n    \n}","const url = \"http://localhost:8000/graphql/\"\n//const url = \"http://192.168.0.26:8000/graphql/\"\nconst prefix = `http://localhost:8000/`\n\nexport {\n    url,\n    prefix\n}","import React from 'react';\nimport { Layout, PageHeader,Tag,Row,Col,Card} from 'antd';\nimport Login from '../components/Forms/Login'\nimport {useMutation} from '@apollo/react-hooks';\nimport Auth from '../variables/auth';\nimport  {USER_LOGIN} from '../Querys/Query';\nimport Swal from 'sweetalert2';\nimport { prefix } from '../variables/os';\nconst {Header,Content,Footer} = Layout;\n\n\n\nfunction LoginView(props)  {\n  //Usando la Mutacion\n  const [login]= useMutation(USER_LOGIN,{\n    onCompleted(data){\n      \n     //Esto se realizara si pasa la autentificacion\n          localStorage.setItem('session',1)\n          localStorage.setItem('token',data.tokenAuth.token)\n          window.location.href= `${prefix}home`\n          \n          \n       \n    },\n    onError(error){\n      \n        //esto se ejecutara si falla la autentificacion\n        localStorage.clear();\n      \n      Swal.fire({\n          title:\"Error\",\n          icon:\"error\"\n        })\n    }\n  })\n \n      return (\n        <Layout className=\"layout\" style={{ minHeight: '100vh' }} >\n         <Header style={{ background: '#fff', padding: 0 }} >\n            <PageHeader \n            tags={<Tag color=\"blue\">Bienvenido</Tag>}\n            title=\"Sistema NG\"/>\n         </Header>\n         <Content style={{ padding: '0 50px' }} >\n         <br></br><br></br>\n         <Row type=\"flex\" justify=\"center\">\n          <div style={{ background: '#fff', padding: 24, minHeight: 280, }}>\n           \n              <Col>\n                <Card>\n                <Login mutation={login}/>\n                </Card>\n              </Col>\n            \n            </div>\n          </Row>\n         </Content>\n         <Footer style={{ textAlign: 'center' }}>Bonifacio Juarez Ceja © </Footer>\n        </Layout>\n\n    );\n    \n    \n}\n\nexport default LoginView;\n","import React from 'react';\nimport {PageHeader , Button} from 'antd';\n\nexport default function Head(props){\n    return(\n        <PageHeader  \n        className=\"header\"\n        title={props.name} \n        extra={[\n            <Button key=\"1\" type=\"ghost\" icon=\"logout\" size=\"small\" onClick={props.function}>Salir</Button>,\n             \n        ]}\n           \n        />\n    );\n}\n","import React ,{Component}from 'react';\nimport {Card,Icon,Modal} from 'antd';\nimport {Link} from 'react-router-dom';\nconst {Meta} = Card\nclass Option extends Component{\n    state = {\n        visible:false,\n        url:`/home/${this.props.ruta}`,\n        url2:`/home/${this.props.ruta2}`\n    };\n    showModal = ()=>{\n        this.setState({\n            visible:true\n        });\n    };\n    handlerOk = e =>{\n        \n        this.setState({\n            visible:false\n        })\n    }\n    \n    handlerCancel= e =>{\n       \n        this.setState({\n                visible:false,\n               \n        });\n    };\n   \n    render(){\n        return(\n        <div>\n            <Card\n                cover={\n                    <img \n                        alt={this.props.alt}\n                        src={this.props.img}\n                    />\n                }\n                actions={[\n                    <Link to={this.state.url}><Icon type=\"user-add\"   key=\"setting\"/></Link>,\n                    <Link to={this.state.url2}><Icon type=\"edit\" key=\"edit\"/></Link>,\n                    <Icon type=\"info-circle\" onClick={this.showModal} key=\"ellipsis\"/>\n                ]}>\n                <Meta\n                    title={this.props.title}\n                   \n                />\n            </Card>\n            <Modal\n                title={this.props.title}\n                visible={this.state.visible}\n                \n                onOk={this.handlerOk}\n                onCancel={this.handlerCancel}>\n                <p>{this.props.description}</p>\n            </Modal>\n        </div>\n        );\n    };\n};\n\nexport default Option;","import React ,{Component}from 'react';\nimport {Card,Icon,Modal} from 'antd';\nimport {Link} from 'react-router-dom';\nconst {Meta} = Card\nclass Option2 extends Component{\n    state = {\n        visible:false,\n        url:`/home/${this.props.ruta}`,\n    };\n    showModal = ()=>{\n        this.setState({\n            visible:true\n        });\n    };\n    handlerOk = e =>{\n        \n        this.setState({\n            visible:false\n        })\n    }\n    \n    handlerCancel= e =>{\n       \n        this.setState({\n                visible:false,\n               \n        });\n    };\n   \n    render(){\n        return(\n        <div>\n            <Card\n                cover={\n                    <img \n                        alt={this.props.alt}\n                        src={this.props.img}\n                    />\n                }\n                actions={[\n                    <Link to={this.state.url}><Icon type=\"user-add\"   key=\"setting\"/></Link>,\n                    <Icon type=\"info-circle\" onClick={this.showModal} key=\"ellipsis\"/>\n                ]}>\n                <Meta\n                    title={this.props.title}\n                   \n                />\n            </Card>\n            <Modal\n                title={this.props.title}\n                visible={this.state.visible}\n                \n                onOk={this.handlerOk}\n                onCancel={this.handlerCancel}>\n                <p>{this.props.description}</p>\n            </Modal>\n        </div>\n        );\n    };\n};\n\nexport default Option2;","import React,{Component} from 'react';\nimport { Layout,Row,Col } from 'antd';\nimport Head from './../components/Head';\nimport Option from './../components/Option';\nimport {addPaciente, pacientes, medicina, expdientes} from '../variables/informacion';\nimport Option2 from '../components/Option2';\nconst { Header, Content, } = Layout;\n\n\nclass Home extends Component {\n \n  render(){\n    var logout = ()=>{\n        localStorage.clear()\n        this.props.history.push(\"/\")\n    }\n\n    \n      return (\n          <div>\n            <Header  id=\"head\" style={{ background: '#fff', padding: 0 }}>\n              <Head name=\"Sistema NG\" function={logout} />\n            </Header>\n            <Content style={{ margin: '24px 16px 0' }} >\n              <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                <Row type=\"flex\" gutter={16}>\n                    <Col lg={{span:8}} md={{span:12}} xs={{span:24}}>\n                        <Option2 img=\"./static/img/hospital-840135__340.jpg\" alt=\"Paciente\" ruta=\"add-paciente\" description={addPaciente} title=\"Paciente\"/>\n                    </Col>\n                    <Col lg={{span:8}} md={{span:12}} xs={{span:24}}>\n                        <Option2  img=\"./static/img/hospice-1821429_1920.jpg\" ruta=\"listpaciente\" alt=\"Pacientes\" title=\"Pacientes\" description={pacientes} />\n                    </Col>\n                    <Col lg={{span:8}} md={{span:12}} xs={{span:24}}>\n                        <Option  img=\"./static/img/23.jpg\" alt=\"Medicina\" ruta=\"medicine\" ruta2=\"medicines\" title=\"Medicinas\" description={medicina}  />\n                    </Col>\n                    <Col lg={{span:8}} md={{span:12}} xs={{span:24}}>\n                        <Option img=\"./static/img/checklist-3222079_1920.jpg\" ruta=\"expedients\" alt=\"Expedientes\" title=\"Expedientes\" description={expdientes} />\n                    </Col>\n                </Row>\n              </div>\n            </Content>\n        </div>\n         \n    );\n    \n    }\n}\n\nexport default Home\n","let addPaciente=`En esta seccion se podran crear los pacientes para ser almacenados en el sistema con su informacion basica`;\nlet pacientes =`Èn esta seccion se listan todos los pacientes registrados`;\nlet expdientes = `En esta seccion se listan todos los expedietes creados a demas de buscar expdientes por la curp del paciente`\nlet medicina =`En esta seccion de crean y listan las medicinas que se pueden suministrar en el hopital`;\n\nexport {\n    addPaciente,\n    pacientes,\n    expdientes,\n    medicina\n}","import React from 'react';\nimport {Route,Redirect} from 'react-router-dom';\nlet login=false\nexport const ProtectedRoutes = ({component: Component,...rest}) =>{\n    if(localStorage.getItem('session')){\n        login=true\n    }\n    return (\n        <Route {...rest} render={\n            (props)=>{\n                return(\n                (login)? <Component {...props} />\n                :<Redirect to={{\n                    pathname:\"/login\",\n                    state:{\n                        from: props.location\n                    }\n                }}/>\n                )\n            }\n        } />\n    )\n}","import React from 'react';\nimport {PageHeader,Button} from 'antd';\n\nexport default function Head2 (props){\n    return (\n       <PageHeader \n           className=\"Header\"\n           title=\"Sistema NG\"\n           subTitle={props.subtitle}\n           onBack ={()=>{\n               window.history.back()\n           }}\n           extra={[\n            <Button key=\"1\" type=\"ghost\" icon=\"logout\" size=\"small\" onClick={props.function}>Salir</Button>,   \n        ]}\n       />\n    )\n}","import React, {Component} from 'react';\nimport {Form, Input,InputNumber,Button,Icon,DatePicker} from 'antd';\nimport locale from 'antd/es/date-picker/locale/es_ES';\nclass AddPaciente extends Component{\n\n    \n    handlerSubmit = (e) => { \n        e.preventDefault(); \n        this.props.form.validateFieldsAndScroll((err,values)=>{\n            if(!err){ \n              \n                const value={\n                    ...values,\n                    'date_picker': values['date-picker'].format('YYYY-MM-DD')\n                }\n               \n                let input={\n                    nombre:value.name,\n                    apellidos:value.last_name,\n                    birthday:value.date_picker,\n                    edad:value.age,\n                    telefono:value.phone,\n                    estado:value.state,\n                    ciudad:value.city,\n                    colonia:value.colonia,\n                    curp:value.curp\n\n                }\n                this.props.mutation({variables:{input:input}})\n            }\n            else{\n              \n            }\n        })\n\n    }\n    \n    render(){\n        \n        const {getFieldDecorator} = this.props.form;\n    \n        const formItemLayout ={\n            labelCol:{\n                xs:{span:20},\n                sm:{span:8}\n            },\n            wrapperCol:{\n                xs:{span:24},\n                sm:{span:16}\n            }\n        }\n        const tailFormItemLayout ={\n            wrapperCol:{\n                xs:{\n                    span:24,\n                    offset:0,\n                },\n                sm:{\n                    span:20,\n                    offset:8,\n                },\n            },\n        };\n        const config = {\n            rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n          };\n       \n        return(\n           <Form  layout=\"vertical\" {...formItemLayout} onSubmit={this.handlerSubmit}>\n                <Form.Item label=\"Nombre\">\n                    {getFieldDecorator('name',{\n                        rules:[\n                            {\n                                required: true,\n                                message:'El Nombre es Requerido',\n                            },\n                        ],\n                    })(<Input\n                        prefix={<Icon type=\"user\" style={{color:'rgba(0,0,0,.25)'}} />}\n                        placeholder=\"Nombre\"\n                    />)}\n                </Form.Item>\n                <Form.Item label=\"Apellidos\">\n                        {getFieldDecorator('last_name',{\n                            rules:[\n                                {\n                                    required:true,\n                                    message:\"Los Apellidos son Requeridos\"\n                                }\n                            ]\n                        })(<Input \n                            placeholder=\"Apellidos\"\n                        />)}\n                </Form.Item>\n                <Form.Item label=\"Curp\">\n                            {getFieldDecorator('curp',{\n                                rules:[\n                                    {\n                                        required:true,\n                                        message:'La Curp es Requerida'\n                                    },\n                                    {\n                                        max:18,\n                                        message:\"La Curp debe tener un Maximo de 18 Caracteres\"\n                                    }\n                                ]\n                            })(<Input placeholder=\"Curp\" />)}\n\n                </Form.Item>\n                <Form.Item label=\"Fecha de nacimiento\">\n                            {getFieldDecorator('date-picker',\n                            config)(<DatePicker locale={locale}/>)}\n                </Form.Item>\n                <Form.Item label=\"Edad\">\n                {getFieldDecorator('age', \n                { \n                    initialValue: 0,\n                    rules:[\n                        {required:true,message:\"La Edad es Requerida\"}\n                    ] \n                },\n                )(\n                    <InputNumber min={0} max={204} />\n                )}\n                </Form.Item>\n                <Form.Item label=\"Numero de Telefono\">\n                            {getFieldDecorator('phone',{\n                                rules:[\n                                    {\n                                        max:14,\n                                        message:\"El telefono no debe tener un Maximo de 14 Caracteres\"\n                                    }\n                                ]\n                            })(<Input \n                            prefix={<Icon type=\"phone\" style={{color:'rgba(0,0,0,.25)'}}/>}\n                            placeholder=\"Telefono\" \n                            style={{width:'100%'}} \n                            />)\n                            }\n                </Form.Item>\n                <Form.Item label=\"Direccion\" />\n                <Form.Item label=\"Estado\">\n                            {getFieldDecorator('state',{\n                                initialValue:\"Michoacan\",\n                                rules:[{\n                                    required:true,\n                                    message:'El estado es requerido'\n                                }]\n                            })(<Input/>)}\n                </Form.Item>\n                <Form.Item label=\"Ciudad\">\n                            {getFieldDecorator('city',{\n                                initialValue:\"Coeneo\",\n                                rules:[{\n                                    required:true,\n                                    message:'La Ciudad es Requerida'\n                                }]\n                            })(<Input/>)}\n                </Form.Item>\n                <Form.Item label=\"Colonia o Municipio\">\n                            {getFieldDecorator('colonia',{\n                                initialValue:\"San Pedro Tacaro\",\n                                rules:[{\n                                    required:true,\n                                    message:'La Colonia o Municipio es Requerido'\n                                }]\n                            })(<Input/>)}\n                </Form.Item>\n                <Form.Item>\n\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Registrar\n                            </Button>\n                </Form.Item>\n           </Form>\n        );\n    };\n};\n\nexport default AddPaciente = Form.create({name:'register'})(AddPaciente);","import React from 'react';\nimport {Layout,Row,Col} from 'antd';\nimport Head2 from '../components/Head2'\nimport AddPaciente from './../components/Forms/AddPaciente';\nimport Swal from 'sweetalert2';\nimport {useMutation} from '@apollo/react-hooks';\nimport {ADD_PACIENTE} from './../Querys/Query'\nconst {Header,Content} = Layout;\n\nfunction AddPacienteView (props){  \n        var logout = ()=>{\n            localStorage.clear()\n            props.history.push(\"/\")\n        }\n        const [paciente] = useMutation(ADD_PACIENTE,{\n            onCompleted(data){\n                const id = data.createPaciente.pacienteUser.id\n                Swal.fire({\n                    title:\"Exito\",\n                    text:\"El Paciente fue creado con exito\",\n                    icon:\"success\",\n                    \n                }).then((result)=>{\n                    if(result.value){\n                        props.history.push(`/home/info-paciente/${id}`)\n                    }\n                })\n            },\n            onError(err){\n                \n                Swal.fire({\n                    title:\"Error\",\n                    text:\"Hubo un error al insertar el Paciente\",\n                    icon:\"error\"\n                })\n            }\n        })\n        return(\n            <div>\n                <Header id=\"aPaciente\" style={{ background: '#fff', padding: 0 }} >\n                    <Head2 subtitle=\"Crear Paciente\" function={logout} />\n                </Header>\n                <Content  style={{ margin: '24px 16px 0' }}>\n                <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                    <Row>\n                        <Col span={19}><AddPaciente mutation={paciente}/></Col>\n                    </Row>\n                </div>\n                </Content>\n            </div>\n        );\n};\n\nexport default AddPacienteView","import React from 'react';\nimport {Icon,Button} from 'antd';\nimport {Link} from 'react-router-dom'\n\n\nfunction IconText({type,theme,id,direccion,color}){\n    const url =    `${direccion}/${id}`\n    return(\n        <span>\n            <Link to={url}>\n                <Button >\n                    <Icon type={type} twoToneColor={color} theme={theme}  />\n                </Button>\n            </Link>\n        </span>\n    )\n}\n\nexport default IconText","import React from 'react';\nimport {List,Button,Icon,Modal, Select, Input, Row} from 'antd';\nimport IconText from './../simplecomponents/IconText';\nimport {url} from './../../variables/os';\nimport reqwest from 'reqwest'\n\nconst {Option} = Select\nconst { Search } = Input;\n\n\nconst token = localStorage.getItem('token')\nclass ListP extends React.Component{\n    \n    constructor(props){\n        super(props)\n        this.handleChange = this.handleChange.bind(this)\n        \n        this.state={\n            page:1,\n            loading:true,\n            total:0,\n            pages:0,\n            data:[],\n            visible:false,\n            busqueda:'',\n            valor:'nombre'\n        }\n    \n    }\n\n\n   \n    \n\n    showModal = ()=>{\n        this.setState({\n            visible:true\n        });\n    };\n\n    showModal2 = ()=>{\n        this.setState({\n            visible2:true\n        });\n    };\n\n\n    \n\n    handlerOk2 = e =>{\n        \n        this.setState({\n            visible2:false\n        })\n    }\n    handlerOk = e =>{\n        \n        this.setState({\n            visible:false\n        })\n    }\n    handlerCancel2= e =>{\n       \n        this.setState({\n                visible2:false,\n               \n        });\n    };\n\n    handlerCancel= e =>{\n       \n        this.setState({\n                visible:false,\n               \n        });\n    };\n\n    fetchData = cb=>{\n        reqwest({\n            url,\n            method:'post',\n            type:\"json\",\n            data:{\n                query:`\n                query{\n                    pacientes{\n                        id,\n                        nombre,\n                        apellidos,\n                        edad,\n                        birthday\n                    }\n                }`\n            },\n            headers:{\n                Authorization:`JWT ${token}`\n            },\n            success: res => {\n                cb(res);\n              },\n\n        })\n        \n    }\n    componentDidMount(){\n       \n      this.fetchData(res=>{\n          \n          if(res.data.pacientes){\n           \n            let json = res.data.pacientes\n           \n            \n            this.setState({\n                data:json,\n                loading:false,\n                \n            })\n\n          }else{\n              this.setState({\n                  loading:false,\n                  total:0,\n                  data:[]\n              })\n          }\n      })\n             \n\n    }  \n\n  \n     handleChange(value) {\n        this.setState({\n            valor:value\n        })\n        console.log(this.state.valor)\n      }\n\n    \n    render(){\n    return(    \n        <div>\n            <List \n                itemLayout=\"horizontal\"\n                loading={this.state.loading}\n                dataSource={this.state.data}\n                pagination={{\n                    onChange:page=>{\n                        \n                    },\n                    pageSize:10,\n                   \n                }}\n                footer={\n                    <div>\n                        <Button type=\"primary\" style={{background:\"#fadb14\",color:\"#000\",borderColor:\"#fadb14\"}} onClick={this.showModal} ><Icon type=\"exclamation\"/>Ayuda</Button>,\n                        <Button onClick={this.showModal2}  type=\"ghost\" ><Icon type=\"search\" />Buscar</Button>\n                    </div>\n                }\n                renderItem={item=>(\n                    <List.Item\n                    key={item.id}\n                    actions={[\n                        <IconText type=\"edit\" theme=\"twoTone\" direccion=\"/home/update-paciente\" color=\"#52c41a\" id={item.id} />,\n                        <IconText type=\"file-add\" color=\"#52c41a\" direccion=\"/home/expedient-paciente\" theme=\"twoTone\" id={item.id}/>,\n                        <IconText type=\"profile\" color=\"#52c41a\" direccion=\"/home/info-paciente\" theme=\"twoTone\" id={item.id} />\n                    ]}>\n                        <List.Item.Meta\n                        title={`${item.nombre.toUpperCase()} ${item.apellidos.toUpperCase()}`}\n                        description={\n                            `Fecha de nacimiento ${item.birthday}   Edad ${item.edad}`\n                        }\n                        />\n                    </List.Item>\n                )}\n            />\n            <Modal\n                title=\"Buscador\"\n                visible={this.state.visible2}\n                onCancel={this.handlerCancel2}\n                onOk={this.handlerOk2}>\n                <Row>\n                <Select defaultValue=\"nombre\" style={{ width: 120 }} onChange={this.handleChange.bind(this)}>\n                            <Option value=\"nombre\" > Nombre </Option>\n                            <Option value=\"curp\">Curo</Option>\n                            <Option value=\"estado\">Estado</Option>\n                            <Option value=\"colonia\">Colonia</Option>\n                            <Option value=\"municipio\" >Municipio</Option>\n                        </Select>\n                    \n                </Row>\n                <br/>\n                <Row>\n                    <Search placeholder=\"Buscar\" onSearch={value =>{\n                        this.setState({\n                            loading:true\n                        })\n\n                        this.props.query({variables:{busqueda:value,por:this.state.valor}})\n                        setTimeout(()=>{\n                            \n                            this.setState({\n                                loading:false,\n                                data:this.props.data.busquedap,\n                                visible2:false\n                            })\n                        },500)\n                    }} enterButton />\n                </Row>\n\n            </Modal>\n            <Modal\n            title=\"Ayuda\"\n            visible={this.state.visible}\n            onOk={this.handlerOk}\n            onCancel={this.handlerCancel}\n            >\n                \n            </Modal>\n        </div>\n    )\n }\n}\n\nexport default ListP","import React from 'react';\nimport {Layout} from 'antd';\nimport Head2 from './../components/Head2';\nimport ListP from './../components/List/ListP'\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { SEARCH_PATIENT } from '../Querys/Query';\nconst {Header,Content} = Layout;\nfunction ListPaciente(props){\n    \n    var logout = ()=>{\n        localStorage.clear()\n        props.history.push(\"/\")\n    }\n    const [pacotient,{data}] = useLazyQuery(SEARCH_PATIENT)\n   \n    return(\n        <div>\n            <Header className=\"header\" style={{ background: '#fff', padding: 0 }}> \n                <Head2 subtitle=\"Lista de pacientes\" function={logout} />\n            </Header>\n            <Content style={{ margin: '24px 16px 0' }}>\n                <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                    <ListP query={pacotient} data={data} />\n                </div>\n            </Content>\n        </div>\n    )\n}\n\nexport default ListPaciente","import React from 'react';\nimport axios from 'axios';\nimport {Card,Descriptions} from 'antd';\nimport { url } from '../../variables/os'; \n\nconst token = localStorage.getItem('token')\n\nclass CardPaciente extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            id:props.id,\n            date:[],\n            nombre:\"\"\n        }\n    }\n\n    async componentDidMount(){\n        const data = await axios({\n            url,\n            method:\"POST\",\n            data:{\n                query:`\n                query{\n                    patient(id:${this.state.id}){\n                        nombre,\n                        apellidos,\n                        edad,\n                        telefono,\n                        birthday,\n                        ciudad,\n                        colonia,\n                        estado,\n                        curp\n\n\n                    }\n                }`\n            },\n            headers:{\n                Authorization:`JWT ${token}`\n            }\n        })\n        let date \n        data.data.data.patient?date = await data.data.data.patient:date=[]\n        const nombre= `${date.nombre} ${date.apellidos}`\n        \n        this.setState({\n            date,\n            nombre:nombre.toUpperCase()\n        })\n\n    }\n    render(){\n        return(\n            <div>\n                <Card title={this.state.nombre}>\n                    <Descriptions title=\"Informacion\" >\n                        <Descriptions.Item label=\"Curp\">{this.state.date.curp}</Descriptions.Item>\n                        <Descriptions.Item label=\"Fecha de Nacimiento\" span={3} >{this.state.date.birthday}</Descriptions.Item>\n                        <Descriptions.Item label=\"Edad\" span={3}>{this.state.date.edad}</Descriptions.Item>\n                        <Descriptions.Item label=\"Telefono\" span={3} >{this.state.date.telefono}</Descriptions.Item>\n                        <Descriptions.Item label=\"Localidad\" span={3}>{this.state.date.estado} {this.state.date.ciudad} {this.state.date.colonia}</Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default CardPaciente","import React from 'react';\nimport {Form,Input,Col,Row,Button,Select} from 'antd';\nimport axios from 'axios';\nimport {url} from './../../variables/os';\nconst {Option} = Select;\n\nconst token  = localStorage.getItem('token')\nvar children2 =[]\nclass AddExpediente extends React.Component{\n\n    state={\n        children:[]\n    }\n     async componentDidMount(){\n        const data = await axios({\n            url,\n            method:\"POST\",\n            data:{\n                query:`\n                query{\n                    medicines{\n                        id,\n                        nombre\n                    }\n                }`\n            },\n            headers:{\n                Authorization:`JWT ${token}`\n            }\n            \n        })\n        \n        children2 =[]\n        let date = []\n        data.data.data.medicines? date = await data.data.data.medicines: date =[]\n       \n        \n        for (let i=0;i<date.length;i++){\n            let valor =`${date[i].id}#${date[i].nombre}`\n            children2.push(<Option key={date[i].id} value={valor} label={date[i].nombre} >{date[i].nombre}</Option>)\n        }\n        this.setState({\n            children:children2\n        })\n        \n        \n    }\n    handleSubmit = e => {\n        e.preventDefault();\n        \n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n             let  medicines = []\n              for (let i = 0;i<values.medicine.length;i++){\n                  let split = values.medicine[i].split(\"#\")\n                  medicines.push({id:split[0]})\n              }\n              let variables = {\n                  pulso:values.pulso,\n                  temperatura:values.temperatura,\n                  respiracion:values.respiracion,\n                  precionD:values.presion_d,\n                  precionS:values.presion_s,\n                  medicinas:medicines,\n                  paciente:[{id:this.props.id}]\n              }\n              this.props.mutation({variables:{input:variables}})\n             \n          }\n        });\n      };\n    render(){\n        const { getFieldDecorator } = this.props.form;\n        return(\n            <Form  layout=\"horizontal\" onSubmit={this.handleSubmit} >\n                <Row  type=\"flex\" gutter={24} >\n                    <Col xs={24} md={8} span={8} >\n                        <Form.Item label=\"Pulso\" >\n                            {getFieldDecorator('pulso',{\n                                rules:[{required:true}]\n                            })(<Input placeholder=\"Pulso\" />)}\n                        </Form.Item>\n                    </Col>\n                    <Col xs={24} md={8} span={8} >\n                        <Form.Item label=\"Respiracion\">\n                            {getFieldDecorator('respiracion',{\n                                rules:[{required:true}]\n                            })(<Input placeholder=\"Respiracion\" />)}\n                        </Form.Item>\n                    </Col>\n                    <Col xs={24} md={8} span={8} >\n                        <Form.Item label =\"Temperatura\">\n                            {getFieldDecorator('temperatura',{\n                                rules:[{required:true}]\n                            })(<Input placeholder=\"Temperatura\" />)}\n                        </Form.Item>\n                    </Col>\n                    <Col xs={24} md={8} span={8}> \n                            <Form.Item label=\"Presion Sistolica\">\n                                {getFieldDecorator('presion_s',{\n                                    rules:[{required:true}]\n                                })(<Input placeholder=\"Precion Sistolica\"/>)}\n                            </Form.Item>\n                    </Col>\n                    <Col xs={24} md={8} span={8}>\n                                <Form.Item label=\"Precion Diastolica\">\n                                    {getFieldDecorator('presion_d',{\n                                        rules:[{required:true}]\n                                    })(<Input placeholder=\"Precion Diastolica\" />)}\n                                </Form.Item> \n                    </Col>\n                    <Col xs={24}  md={16} span={16} >\n                         <Form.Item label=\"Medicinas\">\n                             {getFieldDecorator('medicine',{\n                                rules:[{required:true}]\n                             })(<Select\n                             mode=\"multiple\"\n                             style={{with:'100%'}} \n                             placeholder=\"Selecione una medicina\"\n                             >{this.state.children}</Select>)}\n                         </Form.Item>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={24} style={{ textAlign: 'right' }} >\n                            <Button type=\"primary\" htmlType=\"submit\" >\n                                Guardar\n                            </Button>\n                    </Col>\n                </Row>\n            </Form>\n        )\n    }\n}\n\nexport default AddExpediente = Form.create({name:'expedient'})(AddExpediente)","import React from 'react';\nimport {Card} from 'antd'\nimport AddExpediente from './../Forms/AddExpediente';\nimport { CREAT_EXPEDIENTE } from '../../Querys/Query';\nimport { useMutation } from '@apollo/react-hooks';\nimport Swal from 'sweetalert2';\n\nfunction CardFormE ({id}){\n    const [expedient] = useMutation(CREAT_EXPEDIENTE,{\n        onCompleted(date){\n            Swal.fire(\n                {\n                    title:\"Exito\",\n                    icon:\"success\",\n                    text:\"Se Creo el Expediente con Exito\"\n                }\n            )\n        },\n        onError(err){\n            console.error(err)\n        }\n    })\n    return(\n        <Card title=\"Expediente\">\n            <AddExpediente  id={id} mutation={expedient} />\n        </Card>\n    )\n}\n\nexport default CardFormE","import React from 'react';\nimport {Layout} from 'antd';\nimport {useParams} from 'react-router-dom';\nimport Head2 from './../components/Head2'\nimport CardPaciente from './../components/Forms/CardPaciente';\nimport CardFormE from './../components/card/CardFormE';\nconst {Header,Content} = Layout;\n\nfunction ExpedientePaciente (props){\n    const {id} = useParams()    \n    var logout = ()=>{\n        localStorage.clear()\n        props.history.push(\"/\")\n    }\n    \n        return(\n            <div>\n                <Header className=\"header\" style={{ background: '#fff', padding: 0 }}>\n                    <Head2 subtitle=\"Paciente\" function={logout} />\n                </Header>\n                <Content  style={{ margin: '24px 16px 0' }} >\n                    <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                        <CardPaciente id={id} />\n                        <br/>\n                        <CardFormE id ={id} />\n                    </div>\n                </Content>\n            </div>\n        )\n    \n}\n\nexport default ExpedientePaciente\n","import React from 'react';\nimport {Result,Button,Layout} from 'antd';\nconst {Content} =Layout\n\n\nfunction Error404 (){\n    return(\n        <div>\n            <Content style={{ margin: '24px 16px 0' }}>\n                 <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                    <Result\n                        status=\"404\"\n                        title=\"404\"\n                        subTitle=\"La pagina que consulto no existe\"\n                        extra={<Button  type=\"primary\" onClick={()=>{ window.history.back()} } >Regresar</Button>}\n                    />\n                 </div>\n            </Content>\n        </div>\n    )\n}\n\nexport default Error404","import React, {Component} from 'react';\nimport {Form, Input,InputNumber,Button,Select,Icon,DatePicker} from 'antd';\nimport locale from 'antd/es/date-picker/locale/es_ES';\nimport { url } from '../../variables/os';\nimport reqwest from 'reqwest'\n\nclass UpdatePaciente extends Component{\n\n    state={\n        id:this.props.id,\n        paciente:[]\n    }\n    handlerSubmit = (e) => { \n        e.preventDefault(); \n        this.props.form.validateFieldsAndScroll((err,values)=>{\n            if(!err){ \n              \n                if(values.fecha){\n                    const value={\n                    ...values,\n                    'fecha': values['fecha'].format('YYYY-MM-DD')\n                    }\n                \n                    let input ={\n                        nombre:value.name,\n                        apellidos:value.last_name,\n                        birthday:value.fecha,\n                        edad:value.age,\n                        telefono:value.phone,\n                        estado:value.state,\n                        ciudad:value.city,\n                        colonia:value.colonia,\n                        curp:value.curp\n\n                    }\n                    \n                    this.props.mutation({variables:{id:this.state.id,input:input}})\n               \n                }else{\n                    const value ={\n                        ...values,\n                        'fecha':this.state.paciente.birthday\n                    }\n                    let input ={\n                        nombre:value.name,\n                        apellidos:value.last_name,\n                        birthday:value.fecha,\n                        edad:value.age,\n                        telefono:value.phone,\n                        estado:value.state,\n                        ciudad:value.city,\n                        colonia:value.colonia,\n                        curp:value.curp\n\n                    }\n                    console.info(input)\n                    this.props.mutation({variables:{id:this.state.id,input:input}})\n                }\n                \n                \n            }\n            else{\n              \n            }\n        })\n\n    }\n     componentDidMount(){\n        this.fetchData(res=>{\n            this.setState({\n                paciente:res.data.patient\n            })\n        })\n       \n        \n    }\n    fetchData = callback =>{\n        const token = localStorage.getItem('token')\n        reqwest({\n            url,\n            method:'post',\n            type:\"json\",\n            data:{\n                query:`\n                    query{\n                        patient(id:${this.state.id}){\n                        nombre,\n                        apellidos,\n                        edad,\n                        telefono,\n                        birthday,\n                        ciudad,\n                        colonia,\n                        estado,\n                        curp\n\n\n                        }\n                    }\n                `\n            },\n            headers:{\n                Authorization:`JWT ${token}`\n            },\n            success: res => {\n                callback(res);\n              },\n\n        })\n    }\n    render(){\n        \n        const {getFieldDecorator} = this.props.form;\n    \n        const formItemLayout ={\n            labelCol:{\n                xs:{span:20},\n                sm:{span:8}\n            },\n            wrapperCol:{\n                xs:{span:24},\n                sm:{span:16}\n            }\n        }\n        const tailFormItemLayout ={\n            wrapperCol:{\n                xs:{\n                    span:24,\n                    offset:0,\n                },\n                sm:{\n                    span:20,\n                    offset:8,\n                },\n            },\n        };\n        const config = {\n            \n            rules: [{ type: 'object', required: false, message: 'Please select time!' }],\n          };\n       \n        const prefixSelector = getFieldDecorator('prefix',{\n            initialValue:'52',\n        })(\n            <Select style={{width:70}}>\n                <Select.Option value=\"52\">+52</Select.Option>\n                <Select.Option value=\"1\">+1</Select.Option>\n            </Select>\n        );\n        return(\n           <Form  layout=\"vertical\" {...formItemLayout} onSubmit={this.handlerSubmit}>\n                <Form.Item label=\"Nombre\">\n                    {getFieldDecorator('name',{\n                        initialValue:this.state.paciente.nombre,\n                        rules:[\n                            {\n                                required: true,\n                                message:'El Nombre es Requerido',\n                            },\n                        ],\n                    })(<Input\n                        prefix={<Icon type=\"user\" style={{color:'rgba(0,0,0,.25)'}} />}\n                        placeholder=\"Nombre\"\n                    />)}\n                </Form.Item>\n                <Form.Item label=\"Apellidos\">\n                        {getFieldDecorator('last_name',{\n                            initialValue:this.state.paciente.apellidos,\n                            rules:[\n                                {\n                                    required:true,\n                                    message:\"Los Apellidos son Requeridos\"\n                                }\n                            ]\n                        })(<Input \n                            placeholder=\"Apellidos\"\n                        />)}\n                        \n                </Form.Item>\n                <Form.Item label=\"Curp\">\n                            {getFieldDecorator('curp',{\n                                initialValue:this.state.paciente.curp,\n                                rules:[\n                                    {\n                                        required:true,\n                                        message:'La Curp es Requerida'\n                                    },\n                                    {\n                                        max:18,\n                                        message:\"La Curp debe tener un Maximo de 18 Caracteres\"\n                                    }\n                                ]\n                            })(<Input placeholder=\"Curp\" />)}\n\n                </Form.Item>\n                <Form.Item label=\"Fecha de nacimiento\">\n                            {getFieldDecorator('fecha',\n                            config)(<DatePicker locale={locale}/>)}\n                </Form.Item>\n                <Form.Item label=\"Edad\">\n                {getFieldDecorator('age', \n                { \n                    initialValue: this.state.paciente.edad,\n                    rules:[\n                        {required:true,message:\"La Edad es Requerida\"}\n                    ] \n                },\n                )(\n                    <InputNumber min={0} max={204} />\n                )}\n                </Form.Item>\n                <Form.Item label=\"Numero de Telefono\">\n                            {getFieldDecorator('phone',{\n                                initialValue:this.state.paciente.telefono,\n                                rules:[{\n                                    \n                                        max:14,\n                                        message:\"El Telefono debe tener un Maximo de 14 Caracteres\"\n                                    \n                                }]\n                               \n                            })(<Input \n                            prefix={<Icon type=\"phone\" style={{color:'rgba(0,0,0,.25)'}}/>}\n                            placeholder=\"Telefono\"\n                            addonBefore={prefixSelector} \n                            style={{width:'100%'}} \n                            />)\n                            }\n                </Form.Item>\n                <Form.Item label=\"Direccion\" />\n                <Form.Item label=\"Estado\">\n                            {getFieldDecorator('state',{\n                                initialValue:\"Michoacan\",\n                                rules:[{\n                                    required:true,\n                                    message:'El estado es requerido'\n                                }]\n                            })(<Input/>)}\n                </Form.Item>\n                <Form.Item label=\"Ciudad\">\n                            {getFieldDecorator('city',{\n                                initialValue:\"Coeneo\",\n                                rules:[{\n                                    required:true,\n                                    message:'La Ciudad es Requerida'\n                                }]\n                            })(<Input/>)}\n                </Form.Item>\n                <Form.Item label=\"Colonia o Municipio\">\n                            {getFieldDecorator('colonia',{\n                                initialValue:\"San Pedro Tacaro\",\n                                rules:[{\n                                    required:true,\n                                    message:'La Colonia o Municipio es Requerido'\n                                }]\n                            })(<Input/>)}\n                </Form.Item>\n                <Form.Item>\n\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Actualizar\n                            </Button>\n                </Form.Item>\n           </Form>\n        );\n    };\n};\n\nexport default UpdatePaciente = Form.create({name:'register'})(UpdatePaciente);","//Imports \nimport React from 'react'\nimport {Layout,Row,Col} from 'antd'\nimport {useParams} from 'react-router-dom';\nimport Head2 from '../components/Head2';\nimport UpdatePaciente from '../components/Forms/UpdatePacient';\nimport Swal from 'sweetalert2'\nimport { UPDATE_PATIENT } from '../Querys/Query';\nimport { useMutation } from '@apollo/react-hooks';\n\n//Constantes \nconst {Header,Content} = Layout \n\nfunction UpdatePacienteView(props){\n    const {id} = useParams()\n    const [patient] = useMutation(UPDATE_PATIENT,{\n        onCompleted(data){\n          Swal.fire({\n              title:\"Exito\",\n              text:\"Se a Actualizado el paciente Exitosamente\",\n              icon:\"success\"\n          }).then((result)=>{\n            if(result.value){\n                props.history.push(`/home/info-paciente/${id}`)\n            }\n          })\n        },\n        onError(err){\n            Swal.fire({\n                title:\"Error\",\n                text:\"Ocurrio un error al Actualizar los datos Por Favor Revise los datos o Compruebe su Conexion\",\n                icon:\"warning\"\n            })\n        }\n    })\n    var logout = ()=>{\n            localStorage.clear()\n            props.history.push(\"/\")\n        }\n\n    return(\n        <div>\n            <Header style={{ background: '#fff', padding: 0 }} >\n                <Head2 subtitle=\"Actualizar Paciente\" function={logout} />\n            </Header>\n            <Content style={{ margin: '24px 16px 0' }} >\n                <div style={{ padding: 24, background: '#fff', minHeight: 360 }} >\n                    <Row>\n                        <Col span={19} > <UpdatePaciente mutation={patient} id ={id} /> </Col>\n                    </Row>\n                </div>\n            </Content>\n        </div>\n    )\n}\n\nexport default UpdatePacienteView\n","import React from 'react';\nimport reqwest from 'reqwest'\nimport { Card, Descriptions, Row, Col, Button, Icon,List } from 'antd';\nimport { url } from '../../variables/os'; \nimport IconText from '../simplecomponents/IconText';\nimport Swal from 'sweetalert2'\nimport ButtonGroup from 'antd/lib/button/button-group';\n\n\n\n\nconst token = localStorage.getItem('token')\n\nclass CardPaciente2 extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.delete = this.delete.bind(this)\n        \n        this.state={\n            id:props.id,\n            date:[],\n            nombre:\"\",\n            expedientes:[],\n            loading:true,\n            familiar:false,\n            shownodal:false,\n            crear:this.props.crear\n        }\n    }\n\n    componentDidMount(){\n        this.fetchData(res=>{\n            \n            let date = res.data.patient\n            const nombre= `${date.nombre} ${date.apellidos}` \n            let familiar = false\n            if(date.encasoDeEmergencia.length===0) familiar= false\n            else familiar= true\n             \n            \n            this.setState({\n                nombre:nombre.toUpperCase(),\n                date,\n                expedientes:date.expedienteSet,\n                loading:false,\n                familiar\n            })\n           \n           \n        })\n        // \n        \n        \n\n    }\n    fetchData= callback=>{\n        reqwest({\n            url,\n            method:'post',\n            type:\"json\",\n            data:{\n                query:`\n                query{\n                    patient(id:${this.state.id}){\n                        nombre,\n                        apellidos,\n                        edad,\n                        telefono,\n                        curp,\n                        birthday,\n                        ciudad,\n                        colonia,\n                        estado,\n                        expedienteSet{\n                            id,\n                            date\n                        },\n                        encasoDeEmergencia{\n                            nombre,\n                            apellidos,\n                            telefono\n                          }\n\n                    }\n                }`\n            },\n            headers:{\n                Authorization:`JWT ${token}`\n            },\n            success: res => {\n                callback(res);\n              },\n\n        })\n    }\n    showModal=()=>{\n        if(this.state.familiar){\n            this.setState({\n                showModal:true\n            })\n        }else{\n            window.history.pushState(\"\")\n        }\n    }\n    delete=(id)=>{\n        if(id){\n            Swal.fire({\n                title:\"Estas Seguro de Eliminar el Expediente\",\n                text: \"Esta decicion no es Reversible\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#52c41a',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Si eliminar'\n            }).then((result)=>{\n                result.value?this.props.mutation({variables:{id:id}}):console.log(\"No Funciona\")\n            })\n        }\n        \n    }\n    render(){\n        return(\n            <div>\n                <Card title={this.state.nombre}>\n                    <Descriptions title=\"Informacion\" >\n                        <Descriptions.Item label=\"Curp\">{this.state.date.curp}</Descriptions.Item>\n                        <Descriptions.Item label=\"Fecha de Nacimiento\" span={3} >{this.state.date.birthday}</Descriptions.Item>\n                        <Descriptions.Item label=\"Edad\" span={3}>{this.state.date.edad}</Descriptions.Item>\n                        <Descriptions.Item label=\"Telefono\" span={3} >{this.state.date.telefono}</Descriptions.Item>\n                        <Descriptions.Item label=\"Localidad\" span={3}>{this.state.date.estado} {this.state.date.ciudad} {this.state.date.colonia}</Descriptions.Item>\n                    </Descriptions>\n                </Card>\n                <br/>\n                    <Row justify=\"center\" >\n                        <Col offset={10} >\n                            <ButtonGroup>\n                                <Button type=\"primary\" onClick={this.props.function}><Icon type=\"plus\" />Crear Expediente</Button> \n                                \n                            </ButtonGroup>    \n                        </Col>\n                    </Row>\n                    <br/>\n                    <Card title=\"Expedientes\" >\n                    <List\n                        loading={this.state.loading}\n                        dataSource={this.state.expedientes}\n                        size=\"large\"\n                        pagination={{\n                            onChange: page => {\n                               \n                            },\n                            pageSize: 5,\n                        }}\n                        renderItem={item=>(\n                            <List.Item\n                                key={item.id}\n                                actions ={\n                                    [\n                                        <IconText  direccion=\"/home/info-expedient\"  id={item.id} type=\"profile\" color=\"#52c41a\" theme=\"twoTone\" />,\n                                        <IconText direccion=\"/home/edit-expedient\" id={item.id} type=\"edit\" theme=\"twoTone\"  color=\"#52c41a\" />,\n                                        <Button onClick={this.delete.bind(this,item.id)} > <Icon type=\"delete\" theme=\"twoTone\" twoToneColor=\"#f5222d\" /> </Button>,\n\n                                    ]\n                                }>\n                                <List.Item.Meta\n                                    title={item.date}\n                                />\n                            </List.Item>\n                        )}\n                    />\n                    </Card>\n            </div>\n        )\n    }\n}\n\nexport default CardPaciente2","import React from 'react';\nimport {Layout} from 'antd';\nimport {useParams} from 'react-router-dom'\nimport Head2 from '../components/Head2';\nimport CardPaciente2 from '../components/card/CardPaciente2';\nimport { DELETE_EXPEDIENT } from '../Querys/Query';\nimport { useMutation } from '@apollo/react-hooks';\nimport Swal from 'sweetalert2'\n\nconst {Header,Content} = Layout\n\nfunction InfoPaciente(props){\n    const {id} = useParams() \n    var url = ()=>{\n        props.history.push(`/home/expedient-paciente/${id}`)\n    }\n    var crear=()=>{\n        props.history.push(`/home/create-familiar/${id}`)\n    }\n    var logout = ()=>{\n        localStorage.clear()\n        props.history.push(\"/\")\n    }\n    const [dele] = useMutation(DELETE_EXPEDIENT,{\n        onCompleted(data){\n            Swal.fire({\n                title:\"Exito\",\n                text:\"Se a eliminado el Expediente con Exito\",\n                icon:\"success\",\n                \n            }).then((result)=>{\n                if(result.value){\n                    window.location.reload()\n                }\n            })\n        },\n        onError(err){\n            Swal.fire({\n                title:\"Error\",\n                text:\"Hubo un error al Eliminar la nota\",\n                icon:\"error\"\n            })\n        }\n    })\n    return(\n        <div>\n            <Header  style={{ background: '#fff', padding: 0 }} >\n                <Head2 subtitle=\"Informacion Paciente\" function={logout} />\n            </Header>\n            <Content style={{ margin: '24px 16px 0' }} >\n                <div style={{ padding: 24, background: '#fff', minHeight: 360 }} >\n                    <CardPaciente2 id={id} mutation={dele} crear={crear} function={url} />\n                    \n                </div>\n            </Content>\n        </div>\n    )\n}\n\nexport default InfoPaciente","import React from 'react';\nimport { url } from '../../variables/os';\nimport reqwest from 'reqwest'\nimport {Link} from 'react-router-dom'\nimport { Card, Descriptions, Alert, List, Button, Row, Col, Icon,Modal} from 'antd';\n\n\nconst token = localStorage.getItem('token')\nclass CardExp extends React.Component{\n\n    state ={\n        id:this.props.id,\n        paciente:[],\n        medicinas:[],\n        pulso:\"\",\n        temperatura:\"\",\n        respiracion:\"\",\n        precionS:\"\",\n        precionD:\"\",\n        nombre:\"\",\n        titulo:\"\",\n        precioD:\"\",\n        precioS:\"\",\n        fecha:\"\",\n        loading:true,\n        color :\"\",\n        precion:\"\",\n        visible:false,\n    }\n\n    showModal = ()=>{\n        this.setState({\n            visible:true\n        });\n    };\n    handlerOk = e =>{\n        \n        this.setState({\n            visible:false\n        })\n    }\n    \n    handlerCancel= e =>{\n       \n        this.setState({\n                visible:false,\n               \n        });\n    };\n    \n\n    componentDidMount(){\n\n        this.fetchData(res=>{\n            \n            \n           let nombre =\"\"\n            res.data.expedient.pacientes?  nombre = `${res.data.expedient.pacientes.nombre} ${res.data.expedient.pacientes.apellidos}` : nombre=\"\"\n           \n            this.setState({\n                nombre,\n                paciente:res.data.expedient.pacientes,\n                medicinas:res.data.expedient.medicinas,\n                pulso:res.data.expedient.pulso,\n                temperatura:res.data.expedient.temperatura,\n                respiracion:res.data.expedient.respiracion,\n                precionD:res.data.expedient.precionD,\n                precionS:res.data.expedient.precionS,\n                titulo:`Expediente Clinico de ${nombre}`.toUpperCase(),\n                precioD:this.precionD(res.data.expedient.precionD),\n                precioS:this.precionS(res.data.expedient.precionS),\n                fecha:res.data.expedient.date,\n                loading:false,\n                precion:this.grado(res.data.expedient.precionS,res.data.expedient.precionD)\n            })\n            \n\n        })\n    }\n    grado =(precions,preciond)=>{\n        var precionS = parseInt(precions)\n        var precionD = parseInt(preciond)\n        if((precionS>= 80 &&precionS<=120) && (precionD>=60&&precionD<=80)  ){\n            this.setState({\n                color:\"success\"\n            })\n            return \"normal\"\n        }\n        if((precionS>=121 && precionS<=139)||(precionD>=81 &&precionD<=89 )){\n            this.setState({\n                color:\"warning\"\n            })\n            return \"Prehipertensión\"\n        }\n        if((precionS>=140 && precionS<=159)||(precionD>=90 &&precionD<=99 )){\n            this.setState({\n                color:\"warning\"\n            })\n            return \"HTA 1\"\n        }\n        if((precionS>=160 && precionS<=179)||(precionD>=100 &&precionD<=109 )){\n            this.setState({\n                color:\"warning\"\n            })\n            return \"HTA 2\"\n        }\n        if((precionS>=180 )||(precionD>=110 )){\n            this.setState({\n                color:\"error\"\n            })\n            return \"Crisis hipertensiva\"\n        }\n        if((precionS<80 )||(precionD<60 )){\n            this.setState({\n                color:\"error\"\n            })\n            return \"Hipotenión\"\n        }\n\n    }\n precionD =(numero)=>{\n     var precio = parseInt(numero)\n\n    if(precio>=60&&precio<=80){\n        return \"success\"\n    }\n    if(precio>=80 && precio<= 89){\n        return \"warning\"\n    }\n    if(precio>=90 && precio<=99){\n        return \"warning\"\n    }\n    if(precio>=100 && precio <= 109){\n        return \"error\"\n    }\n    if(precio>=110){\n        return \"error\"\n    }\n    if(precio<60){\n        return \"error\"\n    }\n\n }\n precionS =(numero)=>{\n     var precio = parseInt(numero)\n     if(precio< 80){\n         return \"error\"\n     }\n     if(precio>=80&&precio<=120){\n         return \"success\"\n     }\n     if(precio>120 && precio<=139){\n         return \"warning\"\n     }\n     if(precio>=140&&precio<=159){\n         return \"warning\"\n     }\n     if(precio>=160 && precio<=179){\n         return \"error\"\n     }\n     if(precio>=180){\n         return \"error\"\n     }\n }\n fetchData= callback=>{\n        reqwest({\n            url,\n            method:'post',\n            type:\"json\",\n            data:{\n                query:`\n                query{\n                   expedient(id:${this.state.id}){\n                       pulso,\n                       temperatura,\n                       respiracion,\n                       medicinas{\n                           id,\n                           nombre,\n                           formula,\n                           docis\n                       },\n                       date\n                       precionS,\n                       precionD,\n                       pacientes{\n                           id,\n                           nombre,\n                           apellidos,\n                           edad\n                       }\n                   } \n                }`\n            },\n            headers:{\n                Authorization:`JWT ${token}`\n            },\n            success: res => {\n                callback(res);\n              },\n\n        })\n    }\n    render(){\n        return (\n            <div>\n                <Card title={this.state.titulo} >\n                    <Descriptions>\n                        <Descriptions.Item label=\"Fecha\" > {this.state.fecha} </Descriptions.Item>\n                        <Descriptions.Item label=\"Pulso\" > {this.state.pulso}</Descriptions.Item>\n                        <Descriptions.Item label=\"Temperatura\" > {this.state.temperatura} </Descriptions.Item>\n                        <Descriptions.Item label=\"Respiracion\" > {this.state.respiracion}</Descriptions.Item>\n                        <Descriptions.Item label=\"Precion Sistólica\"><Alert message={this.state.precionS} type={this.state.precioS} showIcon /> </Descriptions.Item>\n                        <Descriptions.Item label=\"Precion Diastolica\" ><Alert message={this.state.precionD} type={this.state.precioD}  showIcon /></Descriptions.Item>\n                        <Descriptions.Item label=\"Precion\" ><Alert message={this.state.precion} type={this.state.color} showIcon /></Descriptions.Item>\n                    </Descriptions>\n                </Card>\n                <br/>\n                <Card title=\"Medicamentos\">\n                    <List \n                        loading={this.state.loading}\n                        dataSource={this.state.medicinas}\n                        size=\"large\"\n                        pagination={{\n                            onChange: page => {\n                               \n                            },\n                            pageSize: 5,\n                        }}\n                        renderItem={item=>(\n                            <List.Item\n                                key={item.id}\n                                actions ={\n                                    [\n                                        \n                                        <Button onClick={this.showModal} ><Icon  type=\"profile\" theme=\"twoTone\" twoToneColor=\"#52c41a\" /></Button>,\n\n                                    ]\n                                }>\n                            <List.Item.Meta \n                                title={item.nombre}\n                                description={item.formula}\n                            />\n                                <Modal\n                                    title=\"Dosis\"\n                                    visible={this.state.visible}\n                                    onOk={this.handlerOk}\n                                    onCancel={this.handlerCancel}>\n                                    <p>{item.docis}</p>\n                                </Modal>\n                            </List.Item>\n                        )}\n                    />\n                </Card>\n                <br/>\n                <Row justify=\"center\" >\n                            <Col offset={10} >\n                                <Link to={`/home/notes-expedient/${this.state.id}`} ><Button>Notas</Button></Link>\n                            </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default CardExp","import React from 'react';\nimport {Layout} from 'antd';\nimport {useParams} from 'react-router-dom'\nimport Head2 from '../components/Head2';\nimport CardExp from '../components/card/CardExp';\n\nconst {Header,Content} = Layout\n\n\nfunction InfoExpediente (props){\n    const {id} = useParams()\n    var logout = ()=>{\n        localStorage.clear()\n        props.history.push(\"/\")\n    }\n    return (\n            <div>  \n                <Header  style={{ background: '#fff', padding: 0 }} >\n                    <Head2 subtitle=\"Informacion Expediente\" function={logout} />\n                </Header>\n                <Content style={{ margin: '24px 16px 0' }} >\n                    <div style={{ padding: 24, background: '#fff', minHeight: 360 }} >\n                        <CardExp id={id} /> \n                    </div>\n                </Content>\n            </div>\n    )\n}\n\nexport default InfoExpediente\n","import React,{ Component } from \"react\"\nimport { Form, Input,Button} from 'antd';\n\nclass FormNoteE extends Component{\n    state = {\n        value: '',\n      };\n    \n      onChange = ({ target: { value } }) => {\n        this.setState({ value });\n      };\n    \n    handleSubmit = e => {\n        e.preventDefault();\n        \n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n             let variables ={\n                 titulo:values.tittle,\n                 nota:values.note,\n                 expediente:[{id:this.props.id}]\n             }\n             console.log(variables)\n             this.props.mutation({variables:{input:variables}})\n          }\n        });\n      };\n    render(){\n        const {getFieldDecorator} = this.props.form;\n        const { value } = this.state;\n        return(\n            <Form layout=\"horizontal\" onSubmit={this.handleSubmit}>\n                <Form.Item label=\"Titulo\" >\n                    {getFieldDecorator('tittle',{\n                        rules:[ {\n                            required:true,\n                            message:\"La Nota Necesita un Titulo\"\n                        },\n                        {\n                            max:100,\n                            message:\"El Titulo debe tener un Maximo de 100 Caracteres\"\n                        }]\n                    })(<Input placeholder=\"Titulo\" />)}\n                </Form.Item>    \n                <Form.Item  label=\"Nota\" >\n                    {getFieldDecorator('note',{\n                        setFieldsValue:value,\n                        rules:[{required:SVGComponentTransferFunctionElement,\n                            message:\"Se requiere la Nota\"}]\n\n                    })(<Input.TextArea \n                         onChange={this.onChange}\n                         autosize={{ minRows: 10, maxRows: 100 }} />)}\n                </Form.Item>\n                <Form.Item >\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Regitrar\n                            </Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n\n\nexport default FormNoteE = Form.create({name:\"note-create\"})(FormNoteE)","import React from 'react'\nimport { Layout,Row,Col } from 'antd';\nimport {useParams} from 'react-router-dom'\nimport Head2 from '../components/Head2';\nimport FormNoteE from '../components/Forms/FormNoteE';\nimport { ADD_NOTEE } from '../Querys/Query';\nimport { useMutation } from '@apollo/react-hooks';\nimport Swal from 'sweetalert2'\n\nconst {Header,Content}  = Layout\n\nfunction FormNotesView(props){\n    const {id} = useParams()\n    const [notes] = useMutation(ADD_NOTEE,\n        {\n            onCompleted(data){\n                Swal.fire({\n                    title:\"Exito\",\n                    text:\"Se a Creado la Nota Exitosa mente\",\n                    icon:\"success\"\n                }).then((result)=>{\n                  if(result.value){\n                      props.history.push(`/home/notes-expedient/${id}`)\n                  }\n                })\n            },\n            onError(err){\n                Swal.fire({\n                    title:\"Error\",\n                    text:\"Ocurrio un error al Crear los datos Por Favor Revise los datos o Compruebe su Conexion\",\n                    icon:\"warning\"\n                })\n            }\n        })\n    var logout = ()=>{\n        localStorage.clear()\n        props.history.push(\"/\")\n    }\n\n    return(\n        <div>\n            <div>\n             <Header id=\"aPaciente\" style={{ background: '#fff', padding: 0 }} >\n                    <Head2 subtitle=\"Crear Nota\" function={logout} />\n             </Header>\n             <Content  style={{ margin: '24px 16px 0' }}>\n                <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                    <Row>\n                        <Col>\n                            <FormNoteE mutation={notes} id={id} />\n                        </Col>\n                    </Row>\n                </div>\n                </Content>\n        </div>\n\n        </div>\n    )\n}\n\nexport default FormNotesView","import React from 'react'\nimport { List,Card, Row, Col, Button, Icon } from 'antd';\nimport {Link} from 'react-router-dom'\nimport { url } from '../../variables/os';\nimport  reqwest from 'reqwest'\nimport IconText from '../simplecomponents/IconText';\nimport Swal from 'sweetalert2'\n\nconst token = localStorage.getItem('token')\nclass CardNotesE extends React.Component{\n\n   constructor(props){\n        super(props)\n        this.delete = this.delete.bind(this)\n        this.state = {\n            data:[],\n            loading:true,\n            ok:false\n        }\n   }\n    \n    componentDidMount(){\n        this.fetchData(res=>{\n            this.setState({\n                data:res.data.expedient.notesexpedientSet,\n                loading:false,\n            })\n            \n\n        })\n    }\n    \n    fetchData= callback=>{\n        reqwest({\n            url,\n            method:'post',\n            type:\"json\",\n            data:{\n                query:`\n                query{\n                    expedient(id:${this.props.id}){\n                        notesexpedientSet{\n                            id,\n                            titulo,\n                            fecha\n                          }\n                    }\n                }`\n            },\n            headers:{\n                Authorization:`JWT ${token}`\n            },\n            success: res => {\n                callback(res);\n              },\n\n        })\n    }\n    \n    delete =(id)=>{\n        \n        if(id){\n            Swal.fire({\n                title:\"Estas Seguro de Eliminar esta Nota\",\n                text: \"Esta decicion no es Reversible\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#52c41a',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Si eliminar'\n            }).then((result)=>{\n                result.value?this.props.mutation({variables:{id:id}}):console.log(\"No Funciona\")\n            })\n        }\n    }\n    render(){\n        \n    return(\n        <div>\n            \n            <Card title=\"Notas\" >\n                <List\n                    loading={this.state.loading}\n                    dataSource={this.state.data}\n                    size=\"large\"\n                        pagination={{\n                            onChange: page => {\n                               \n                            },\n                            pageSize: 10,\n                        }}\n                    renderItem={item=>(\n                            <List.Item\n                                key={item.id}\n                                actions ={\n                                    [\n                                        <IconText  direccion=\"/home/note-expedient\" id={item.id} type=\"profile\" color=\"#52c41a\" theme=\"twoTone\" />,\n                                        <IconText  direccion=\"/home/note-expedient-edit\" type=\"edit\" theme=\"twoTone\"  color=\"#52c41a\" id={item.id}/>,\n                                        <Button onClick={this.delete.bind(this,item.id)}><Icon type=\"delete\" theme=\"twoTone\" twoToneColor=\"#ff4d4f\" /></Button>\n\n                                    ]\n                                }>\n                                <List.Item.Meta\n                                    title={item.titulo}\n                                />\n                            </List.Item>\n                        )}></List>\n            </Card>\n            <br/>\n            <Row justify=\"center\" >\n                <Col offset={10} >\n                    <Link to={`/home/create-note-expedient/${this.props.id}`}>\n                        <Button>Crear Nota</Button>\n                    </Link>\n                </Col>\n            </Row>\n        </div>\n\n    )\n    }\n}\n\nexport default CardNotesE","import React from 'react';\nimport {useParams} from 'react-router-dom'\nimport { Layout,Col,Row } from 'antd';\nimport Head2 from '../components/Head2';\nimport CardNotesE from '../components/card/CardNotesE';\nimport { DELETE_NOTE_EXPEDIENT } from '../Querys/Query';\nimport { useMutation } from '@apollo/react-hooks';\nimport Swal from 'sweetalert2'\n\nconst {Header,Content} =Layout\n\nfunction NotasE(props){\n    const {id} = useParams()\n    var logout = ()=>{\n        localStorage.clear()\n        props.history.push(\"/\")\n    }\n    const [noted] = useMutation(DELETE_NOTE_EXPEDIENT,{\n        onCompleted(data){\n            Swal.fire({\n                title:\"Exito\",\n                text:\"Se a eliminado la nota con Exito\",\n                icon:\"success\",\n                \n            }).then((result)=>{\n                if(result.value){\n                    window.location.reload()\n                }\n            })\n\n        },\n        onError(err){\n            Swal.fire({\n                title:\"Error\",\n                text:\"Hubo un error al Eliminar la nota\",\n                icon:\"error\"\n            })\n        }\n    })\n    return (\n        <div>\n             <Header id=\"aPaciente\" style={{ background: '#fff', padding: 0 }} >\n                    <Head2 subtitle=\"Notas\" function={logout} />\n             </Header>\n             <Content  style={{ margin: '24px 16px 0' }}>\n                <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                    <Row>\n                        <Col>\n                            <CardNotesE mutation={noted} id={id}></CardNotesE>\n                        </Col>\n                    </Row>\n                </div>\n                </Content>\n        </div>\n        \n    )\n\n}\n\nexport default NotasE ","import React from 'react';\nimport {Form,Input,Col,Row,Button,Select} from 'antd';\nimport axios from 'axios';\nimport {url} from './../../variables/os';\nimport { isNullOrUndefined } from 'util';\nconst {Option} = Select;\n\nconst token  = localStorage.getItem('token')\nvar children2 =[]\nclass UpdateExpedient  extends React.Component{\n\n    state={\n        children:[],\n        id:this.props.id,\n        medicinas:[],\n        expediente:[]\n    }\n     async componentDidMount(){\n        const data = await axios({\n            url,\n            method:\"POST\",\n            data:{\n                query:`\n                query{\n                    medicines{\n                        id,\n                        nombre\n                    }\n                }`\n            },\n            headers:{\n                Authorization:`JWT ${token}`\n            }\n            \n        })\n        const dato = await axios({\n            url,\n            method:\"POST\",\n            data:{\n                query:`\n                query{\n                   expedient(id:${this.state.id}){\n                       pulso,\n                       temperatura,\n                       respiracion,\n                       medicinas{\n                           id,\n                           nombre,\n                           formula\n                       },\n                       date\n                       precionS,\n                       precionD,\n                   } \n                }`\n            },\n            headers:{\n                Authorization:`JWT ${token}`\n            },\n        })\n        \n        children2 =[]\n        var datos =[]\n        let date = []\n        dato.data.data.expedient? datos = await dato.data.data.expedient:datos =[]\n        data.data.data.medicines? date = await data.data.data.medicines: date =[]\n\n        \n        \n        for (let i=0;i<date.length;i++){\n            let valor =`${date[i].id}#${date[i].nombre}`\n            children2.push(<Option key={date[i].id} value={valor} label={date[i].nombre} >{date[i].nombre}</Option>)\n        }\n        this.setState({\n            children:children2,\n            expediente:datos,\n            medicinas:datos.medicinas\n        })\n        \n        \n        \n    }\n    handleSubmit = e => {\n        e.preventDefault();\n        \n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n              \n              if(isNullOrUndefined(values.medicine)){\n                  \n                \n                let medicines = []\n                for (let i=0;i<this.state.medicinas.length;i++){\n                    medicines.push({id:this.state.medicinas[i].id})\n                }\n               \n                let variables ={\n                    pulso:values.pulso,\n                     temperatura:values.temperatura,\n                     respiracion:values.respiracion,\n                     precionD:values.presion_d,\n                     precionS:values.presion_s,\n                     medicinas:medicines\n                }\n                \n                 this.props.mutation({variables:{id:this.state.id,input:variables}}) \n               \n              }else{\n                \n                let  medicines = []\n                 for (let i = 0;i<values.medicine.length;i++){\n                     let split = values.medicine[i].split(\"#\")\n                     medicines.push({id:split[0]})\n                 }\n                 let variables = {\n                     pulso:values.pulso,\n                     temperatura:values.temperatura,\n                     respiracion:values.respiracion,\n                     precionD:values.presion_d,\n                     precionS:values.presion_s,\n                     medicinas:medicines,\n                     \n                 }\n                \n                this.props.mutation({variables:{id:this.state.id,input:variables}}) \n              }\n             \n          }\n        });\n      };\n    render(){\n        const { getFieldDecorator } = this.props.form;\n        return(\n            <Form  layout=\"horizontal\" onSubmit={this.handleSubmit} >\n                <Row  type=\"flex\" gutter={24} >\n                    <Col xs={24} md={8} span={8} >\n                        <Form.Item label=\"Pulso\" >\n                            {getFieldDecorator('pulso',{\n                                initialValue:this.state.expediente.pulso,\n                                rules:[{required:true}]\n                            })(<Input placeholder=\"Pulso\" />)}\n                        </Form.Item>\n                    </Col>\n                    <Col xs={24} md={8} span={8} >\n                        <Form.Item label=\"Respiracion\">\n                            {getFieldDecorator('respiracion',{\n                                initialValue:this.state.expediente.respiracion,\n                                rules:[{required:true}]\n                            })(<Input placeholder=\"Respiracion\" />)}\n                        </Form.Item>\n                    </Col>\n                    <Col xs={24} md={8} span={8} >\n                        <Form.Item label =\"Temperatura\">\n                            {getFieldDecorator('temperatura',{\n                                initialValue:this.state.expediente.temperatura,\n                                rules:[{required:true}]\n                            })(<Input placeholder=\"Temperatura\" />)}\n                        </Form.Item>\n                    </Col>\n                    <Col xs={24} md={8} span={8}> \n                            <Form.Item label=\"Presion Sistolica\">\n                                {getFieldDecorator('presion_s',{\n                                    initialValue:this.state.expediente.precionS,\n                                    rules:[{required:true}]\n                                })(<Input placeholder=\"Precion Sistolica\"/>)}\n                            </Form.Item>\n                    </Col>\n                    <Col xs={24} md={8} span={8}>\n                                <Form.Item label=\"Precion Diastolica\">\n                                    {getFieldDecorator('presion_d',{\n                                        initialValue:this.state.expediente.precionD,\n                                        rules:[{required:true}]\n                                    })(<Input placeholder=\"Precion Diastolica\" />)}\n                                </Form.Item> \n                    </Col>\n                    <Col xs={24}  md={16} span={16} >\n                         <Form.Item label=\"Medicinas\">\n                             {getFieldDecorator('medicine',{\n                                \n                             })(<Select\n                             mode=\"multiple\"\n                             style={{with:'100%'}} \n                             placeholder=\"Selecione una medicina\"\n                             >{this.state.children}</Select>)}\n                         </Form.Item>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={24} style={{ textAlign: 'right' }} >\n                            <Button type=\"primary\" htmlType=\"submit\" >\n                                Guardar\n                            </Button>\n                    </Col>\n                </Row>\n            </Form>\n        )\n    }\n}\n\nexport default UpdateExpedient  = Form.create({name:'expedient'})(UpdateExpedient )","import React from 'react'\nimport {Layout,Row,Col} from 'antd'\nimport {useParams} from 'react-router-dom'\nimport Head2 from '../components/Head2';\nimport UpdateExpedient from '../components/Forms/UpdateExpedient';\nimport { useMutation } from '@apollo/react-hooks';\nimport { UPDATE_EXPEDIENTE } from '../Querys/Query';\nimport Swal from 'sweetalert2'\n\nconst {Header,Content} = Layout\nfunction EditExpedient(props){\n    const  {id} = useParams()\n    var logout = ()=>{\n        localStorage.clear()\n        props.history.push(\"/\")\n    }\n    const [expedient] = useMutation(UPDATE_EXPEDIENTE,{\n        onCompleted(data){\n            Swal.fire({\n                title:\"Exito\",\n                text:\"Se a Actualizado el Expediente Exitosamente\",\n                icon:\"success\"\n            }).then((result)=>{\n              if(result.value){\n                  props.history.push(`/home/info-expedient/${id}`)\n              }\n            })\n        },\n        onError(err){\n            Swal.fire({\n                title:\"Error\",\n                text:\"Ocurrio un error al Actualizar los datos Por Favor Revise los datos o Compruebe su Conexion\",\n                icon:\"warning\"\n            })\n        \n        }\n    })\n\n    return(\n        <div>\n                <Header id=\"aPaciente\" style={{ background: '#fff', padding: 0 }} >\n                    <Head2 subtitle=\"Actualizar Expediente\" function={logout} />\n                </Header>\n                <Content  style={{ margin: '24px 16px 0' }}>\n                <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                    <Row>\n                        <Col span={19}>\n                            <UpdateExpedient mutation={expedient} id ={id}/>\n                        </Col>\n                    </Row>\n                </div>\n                </Content>\n            </div>\n    )\n}\nexport default EditExpedient;","import React from 'react'\nimport { url } from '../../variables/os';\nimport reqwest from 'reqwest'\nimport { Descriptions } from 'antd';\n\n\nconst token = localStorage.getItem('token')\nexport default class CardNoteE extends React.Component{\n    state={\n        id:this.props.id,\n        datos:[]\n    }\n    \n    componentDidMount(){\n        this.fetchData(res=>{\n           \n            this.setState({\n                datos:res.data.noteexpedient\n            })\n            console.log(this.state)\n        })\n    }\n    fetchData= callback=>{\n        reqwest({\n            url,\n            method:'post',\n            type:\"json\",\n            data:{\n                query:`\n                query{\n                    noteexpedient(id:${this.state.id}){\n                        titulo,\n                        note,\n                        fecha,\n                        hora\n                    }\n                }`\n            },\n            headers:{\n                Authorization:`JWT ${token}`\n            },\n            success: res => {\n                callback(res);\n              },\n\n        })\n    }\n    render(){\n        \n        return(\n            <div>\n                <Descriptions title={this.state.datos.titulo}  layout=\"vertical\" bordered>\n                    <Descriptions.Item label=\"Fecha\" span={2} >{this.state.datos.fecha}</Descriptions.Item>\n                    <Descriptions.Item  label=\"Hora\" span={2} >{this.state.datos.hora}</Descriptions.Item>\n                    <Descriptions.Item label=\"Nota\" span={4} ><p>{this.state.datos.note}</p></Descriptions.Item>\n                </Descriptions>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport {useParams} from 'react-router-dom'\nimport {Layout,Col,Row} from 'antd'\nimport Head2 from '../components/Head2';\nimport CardNoteE from '../components/card/CardNoteE';\n\n\nconst {Header,Content} = Layout\n\nexport default function NoteEView(props){\n    const {id} = useParams()\n    var logout = ()=>{\n        localStorage.clear()\n        props.history.push(\"/\")\n    }\n    \n  \n    return(\n        <div>\n             <Header id=\"aPaciente\" style={{ background: '#fff', padding: 0 }} >\n                    <Head2 subtitle=\"Notas\" function={logout} />\n             </Header>\n             <Content  style={{ margin: '24px 16px 0' }}>\n                <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                    <Row>\n                        <Col>\n                            <CardNoteE id={id} />\n                        </Col>\n                    </Row>\n                </div>\n                </Content>\n        </div>\n    )\n}","import React,{ Component } from \"react\"\nimport { Form, Input,Button} from 'antd';\nimport { url } from '../../variables/os';\nimport reqwest from 'reqwest'\n\nconst token = localStorage.getItem('token')\nclass UpdateNoteEForm extends Component{\n    state = {\n        value: '',\n        id:this.props.id,\n        datos:[]\n      };\n\n      componentDidMount(){\n        this.fetchData(res=>{\n           \n            this.setState({\n                datos:res.data.noteexpedient\n            })\n            console.log(this.state)\n        })\n    }\n    fetchData= callback=>{\n        reqwest({\n            url,\n            method:'post',\n            type:\"json\",\n            data:{\n                query:`\n                query{\n                    noteexpedient(id:${this.state.id}){\n                        titulo,\n                        note,\n                        fecha,\n                        hora\n                    }\n                }`\n            },\n            headers:{\n                Authorization:`JWT ${token}`\n            },\n            success: res => {\n                callback(res);\n              },\n\n        })\n    }\n    \n      onChange = ({ target: { value } }) => {\n        this.setState({ value });\n      };\n    \n    handleSubmit = e => {\n        e.preventDefault();\n        \n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n             let variables ={\n                 titulo:values.tittle,\n                 nota:values.note,\n             }\n             this.props.mutation({variables:{id:this.state.id,input:variables}})\n            \n          }\n        });\n      };\n    render(){\n        const {getFieldDecorator} = this.props.form;\n        const { value } = this.state;\n        return(\n            <Form layout=\"horizontal\" onSubmit={this.handleSubmit}>\n                <Form.Item label=\"Titulo\" >\n                    {getFieldDecorator('tittle',{\n                        initialValue:this.state.datos.titulo ,\n                        rules:[ {\n                            required:true,\n                            message:\"La Nota Necesita un Titulo\"\n                        },\n                        {\n                            max:100,\n                            message:\"El Titulo debe tener un Maximo de 100 Caracteres\"\n                        }]\n                    })(<Input placeholder=\"Titulo\" />)}\n                </Form.Item>    \n                <Form.Item  label=\"Nota\" >\n                    {getFieldDecorator('note',{\n                        initialValue:this.state.datos.note,\n                        setFieldsValue:value,\n                        rules:[{\n                            required:true,\n                            message:\"La Nota no Puede ir Vacia \"}]\n\n                    })(<Input.TextArea \n                         onChange={this.onChange}\n                         autosize={{ minRows: 10, maxRows: 100 }} />)}\n                </Form.Item>\n                <Form.Item >\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Actualizar \n                            </Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n\n\nexport default UpdateNoteEForm = Form.create({name:\"note-update\"})(UpdateNoteEForm)","import React from 'react'\nimport {useParams} from 'react-router-dom'\nimport {Layout,Col,Row} from 'antd'\nimport Head2 from '../components/Head2';\nimport UpdateNoteEForm from '../components/Forms/UpdateNoteEForm';\nimport { UPDATE_NOTE_EXPEDIENT } from '../Querys/Query';\nimport { useMutation } from '@apollo/react-hooks';\nimport Swal from 'sweetalert2'\n\nconst {Header,Content} = Layout\n\nexport default function EditNoteEView(props){\n    const {id} = useParams()\n    const [note] = useMutation(UPDATE_NOTE_EXPEDIENT,{\n        onCompleted(data){\n            Swal.fire({\n                title:\"Exito\",\n                text:\"Se a Actualizado la Nota Exitosamente\",\n                icon:\"success\"\n            }).then((result)=>{\n              if(result.value){\n                  props.history.push(`/home/note-expedient/${id}`)\n              }\n            })\n        },\n        onError(error){\n            Swal.fire({\n                title:\"Error\",\n                text:\"Ocurrio un error al Actualizar los datos Por Favor Revise los datos o Compruebe su Conexion\",\n                icon:\"warning\"\n            })\n        }\n    })\n    var logout = ()=>{\n        localStorage.clear()\n        props.history.push(\"/\")\n    }\n    return(\n        <div>\n        <Header id=\"aPaciente\" style={{ background: '#fff', padding: 0 }} >\n               <Head2 subtitle=\"Notas\" function={logout} />\n        </Header>\n        <Content  style={{ margin: '24px 16px 0' }}>\n           <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n               <Row>\n                   <Col>\n                      <UpdateNoteEForm mutation={note} id={id} />\n                   </Col>\n               </Row>\n           </div>\n           </Content>\n   </div>\n    )\n}","import React from 'react';\nimport { Form, Input, Button, InputNumber } from 'antd';\n\n\nclass AddMedicine extends React.Component{\n\n    state = {\n        value: '',\n      };\n    \n      onChange = ({ target: { value } }) => {\n        this.setState({ value });\n      };\n\n    handlerSubmit = (e) => { \n        e.preventDefault(); \n        this.props.form.validateFieldsAndScroll((err,values)=>{\n            if(!err){ \n              \n               \n               let variables  = {\n                   nombre: values.name,\n                   formula:values.formule,\n                   descripcion:values.description,\n                   docis:values.docis,\n                   stock:values.stock,\n                   laboratorio:values.laboratorio\n                   \n\n               }\n               if (variables.stock===0){\n                   variables={\n                       ...variables,\n                       disponible:false\n                   }\n               }else{\n                   variables ={\n                       ...variables,\n                       disponible:true\n                   }\n               }\n               this.props.mutation({variables:{input:variables}})\n            }\n            else{\n              \n            }\n        })\n\n    }\n    render(){\n        const {getFieldDecorator} = this.props.form;\n        const { value } = this.state;\n        return(\n           <Form onSubmit={this.handlerSubmit}>\n                <Form.Item label=\"Nombre\">\n                    {getFieldDecorator('name',{\n                        rules:[\n                            {\n                                required: true,\n                                message:'El Nombre del Medicamento es Requerido',\n                            },\n                        ],\n                    })(<Input \n                        placeholder=\"Nombre\" />)}\n                </Form.Item>\n                <Form.Item label=\"Formula\">\n                    {getFieldDecorator('formule',{\n                        rules:[\n                            {\n                                required:true,\n                                message:\"Se Requiere la Formula de la Medicina\"\n                            }\n                        ]\n                    })(<Input \n                        placeholder=\"Formula\" />)}\n                </Form.Item>\n                <Form.Item  label=\"Descripcion\" >\n                    {getFieldDecorator('description',{\n                        setFieldsValue:value,\n                        rules:[{required:true,\n                            message:\"Se Requiere una Descripcion del medicamento\"}]\n\n                    })(<Input.TextArea \n                         placeholder=\"Descripcion\"\n                         onChange={this.onChange}\n                          />)}\n                </Form.Item>\n                <Form.Item  label=\"Dosis\" >\n                    {getFieldDecorator('docis',{\n                        setFieldsValue:value,\n                        rules:[{required:true,\n                            message:\"Se Requiere una la docis del medicamento\"}]\n\n                    })(<Input.TextArea \n                        placeholder=\"Docis\"\n                         onChange={this.onChange}\n                         />)}\n                </Form.Item>\n                <Form.Item label=\"Cantidad Disponible\" >\n                        {getFieldDecorator('stock',{\n                            initialValue:0,\n                            \n                        })(\n                            <InputNumber min={0} max={500} />\n                        )}\n                </Form.Item>\n                <Form.Item label=\"Laboratorio\">\n                    {getFieldDecorator('laboratorio',{\n                        rules:[{\n                            required:true,\n                            message:\"El Laboratorio es Requerido\"\n                        }]\n                    })(<Input \n                        placeholder=\"Laboratorio\"\n                    />)}\n                </Form.Item>\n                <Form.Item >\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Registrar\n                            </Button>\n                </Form.Item>\n           </Form>\n        )\n    }\n}\n\nexport default AddMedicine = Form.create({name:'register'})(AddMedicine);","import React from 'react'\n\nimport {Layout} from 'antd';\nimport Head2 from './../components/Head2';\nimport AddMedicine from '../components/Forms/AddMedicine';\nimport { ADD_MEDICINE } from '../Querys/Query';\nimport { useMutation } from '@apollo/react-hooks';\nimport Swal from 'sweetalert2';\n\nconst {Header,Content} = Layout;\n\nconst MedicineView = (props)=>{\n    var logout = ()=>{\n        localStorage.clear()\n        props.history.push(\"/\")\n    }\n    const [medicine] = useMutation(ADD_MEDICINE,{\n        onCompleted(data){\n            Swal.fire({\n                title:\"Exito\",\n                text:\"El medicamento se a creado exitosamente\",\n                icon:\"success\"\n            }).then((result)=>{\n              if(result.value){\n                  props.history.push(`/home/medicines`)\n              }\n            })\n        },\n        onError(){\n            Swal.fire({\n                title:\"Error\",\n                text:\"Ocurrio un error al incertar el medicamento por favor intente mas tarde\",\n                icon:\"error\"\n            })\n        }\n    })\n    return(\n        <div>\n            <Header className=\"header\" style={{ background: '#fff', padding: 0 }}> \n                <Head2 subtitle=\"Medicinas\" function={logout} />\n            </Header>\n            <Content style={{ margin: '24px 16px 0' }}>\n                <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                    <AddMedicine mutation={medicine} />\n                </div>\n            </Content>\n        </div>\n    )\n}\n\nexport default MedicineView","import React from 'react'\nimport { url } from '../../variables/os';\nimport reqwest from 'reqwest'\nimport { List, Icon,Button, Modal,Row,Select,Input } from 'antd';\nimport IconText from '../simplecomponents/IconText';\nimport Swal from 'sweetalert2'\n\nconst {Option} = Select\nconst {Search} = Input\nconst token = localStorage.getItem('token')\nclass ListM extends React.Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            data:[],\n            loading:true,\n            visible:false,\n            valor:'nombre'\n        }\n        this.delete = this.delete.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n\n    }\n\n\n    showModal = ()=>{\n        this.setState({\n            visible:true\n        });\n    };\n\n    \n    handlerOk = e =>{\n        \n        this.setState({\n            visible:false\n        })\n    }\n  \n\n    handlerCancel= e =>{\n       \n        this.setState({\n                visible:false,\n               \n        });\n    };\n\n    componentDidMount(){\n        this.fetchData(res=>{\n            this.setState({\n                data:res.data.medicines,\n                loading:false\n            })\n          \n        })\n    }\n    fetchData= callback=>{\n        reqwest({\n            url,\n            method:'post',\n            type:\"json\",\n            data:{\n                query:`\n                query{\n                    medicines{\n                        id,\n                        nombre,\n                        formula   \n                      }\n                }`\n            },\n            headers:{\n                Authorization:`JWT ${token}`\n            },\n            success: res => {\n                callback(res);\n              },\n\n        })\n    }\n    delete=(id)=>{\n        if(id){\n            Swal.fire({\n                title:\"Estas Seguro de Eliminar el Expediente\",\n                text: \"Esta decicion no es Reversible\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#52c41a',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Si eliminar'\n            }).then((result)=>{\n                result.value?this.props.mutation({variables:{id:id}}):console.log(\"No Funciona\")\n            })\n        }\n\n    }\n    handleChange(value) {\n        this.setState({\n            valor:value\n        })\n        console.log(this.state.valor)\n      }\n    render(){\n        return(\n           <div>\n               <List \n                   loading={this.state.loading}\n                   dataSource={this.state.data}\n                   size=\"large\"\n                        pagination={{\n                            onChange: page => {\n                               \n                            },\n                            pageSize: 5,\n                        }}\n                    footer={\n                        <Button onClick={this.showModal} ><Icon type=\"search\" />Buscar</Button>\n                    }\n                   renderItem={item=>(\n                       <List.Item\n                            key={item.id}\n                            actions={[\n                                <IconText direccion=\"/home/medicines-update\" id={item.id}   type=\"edit\" theme=\"twoTone\"  color=\"#52c41a\" />,\n                                <IconText direccion=\"/home/medidine-info\" id={item.id} type=\"profile\" color=\"#52c41a\"  theme=\"twoTone\"  />,\n                                <Button onClick={this.delete.bind(this,item.id)} ><Icon type=\"delete\" theme=\"twoTone\" twoToneColor=\"#ff4d4f\" /></Button>\n                            ]}>\n                            <List.Item.Meta\n                                title={`${item.nombre.toUpperCase()}`}\n                                description={\n                                    `Formula ${item.formula}`\n                                }\n                            />\n\n                       </List.Item>\n                   )}\n               />\n               <Modal \n               title=\"Buscador\"\n               visible={this.state.visible}\n               onOk = {this.handlerOk}\n               onCancel = {this.handlerCancel} >\n               <Row>\n                <Select defaultValue=\"nombre\" style={{ width: 120 }} onChange={this.handleChange.bind(this)}>\n                            <Option value=\"nombre\" > Nombre </Option>\n                            <Option value=\"formula\">Formula</Option>\n                            <Option value=\"laboratorio\">Laboratorio</Option>\n                        </Select>\n                    \n                </Row>\n                <br/>\n                <Row>\n                    <Search placeholder=\"Buscar\" onSearch={value =>{\n                        this.setState({\n                            loading:true\n                        })\n\n                        this.props.query({variables:{busqueda:value,por:this.state.valor}})\n                        setTimeout(()=>{\n                            \n                            this.setState({\n                                loading:false,\n                                data:this.props.data.busquedam,\n                                visible:false\n                            })\n                        },500)\n                    }} enterButton />\n                </Row>\n\n               </Modal>\n           </div>\n        )\n    }\n}\n\nexport default ListM","import React from 'react'\nimport {Layout} from 'antd';\nimport Head2 from './../components/Head2';\nimport ListM from '../components/List/ListM';\nimport { DELETE_MEDICINE, SEARCH_MEDICINE } from '../Querys/Query';\nimport { useMutation } from '@apollo/react-hooks';\nimport Swal from 'sweetalert2'\nimport { useLazyQuery } from '@apollo/react-hooks';\nconst {Header,Content} = Layout;\nconst Medicineslist = (props)=>{\n    var logout = ()=>{\n        localStorage.clear()\n        props.history.push(\"/\")\n    }\n    const [medicin,{data}] =useLazyQuery(SEARCH_MEDICINE) \n    const [delet] = useMutation(DELETE_MEDICINE,{\n        onCompleted(){\n            Swal.fire({\n                title:\"Exito\",\n                text:\"Se a eliminado la Medicina con Exito\",\n                icon:\"success\",\n                \n            }).then((result)=>{\n                if(result.value){\n                    window.location.reload()\n                }\n            })\n        }, onError(){\n            Swal.fire({\n                title:\"Error\",\n                text:\"Hubo un error al Eliminar la Medicina\",\n                icon:\"error\"\n            })\n        }\n    })\n    return (\n        <div>\n            <Header className=\"header\" style={{ background: '#fff', padding: 0 }}> \n                <Head2 subtitle=\"Lista de Medicinas\" function={logout} />\n            </Header>\n            <Content style={{ margin: '24px 16px 0' }}>\n                <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                    <ListM mutation={delet} query={medicin} data={data}/>\n                </div>\n            </Content>\n        </div>\n    )\n}\n\nexport default Medicineslist","import React from 'react';\nimport { Form, Input, Button, InputNumber } from 'antd';\nimport reqwest from 'reqwest'\nimport { url } from '../../variables/os';\n\nconst token = localStorage.getItem('token')\nclass UpdateMedicineForm extends React.Component{\n\n    state = {\n        value: '',\n        id:this.props.id,\n        datos:[]\n      };\n    \n      onChange = ({ target: { value } }) => {\n        this.setState({ value });\n      };\n\n      componentDidMount(){\n          this.fetchData(res=>{\n              \n              this.setState({\n                  datos:res.data.medicina\n              })\n              console.log(this.state)\n          })\n      }\n\n      fetchData= callback=>{\n        reqwest({\n            url,\n            method:'post',\n            type:\"json\",\n            data:{\n                query:`\n                query{\n                    medicina(id:${this.state.id}){\n                        nombre,\n                        formula,\n                        docis,\n                        descripcion,\n                        laboratorio,\n                        stock,  \n                      }\n                }`\n            },\n            headers:{\n                Authorization:`JWT ${token}`\n            },\n            success: res => {\n                callback(res);\n              },\n\n        })\n    }\n\n    handlerSubmit = (e) => { \n        e.preventDefault(); \n        this.props.form.validateFieldsAndScroll((err,values)=>{\n            if(!err){ \n              \n               \n               let variables  = {\n                   nombre: values.name,\n                   formula:values.formule,\n                   descripcion:values.description,\n                   docis:values.docis,\n                   stock:values.stock,\n                   laboratorio:values.laboratorio\n                   \n\n               }\n               if (variables.stock===0){\n                   variables={\n                       ...variables,\n                       disponible:false\n                   }\n               }else{\n                   variables ={\n                       ...variables,\n                       disponible:true\n                   }\n               }\n               console.log(variables)\n               this.props.mutation({variables:{id:this.state.id,input:variables}})\n            }\n            else{\n              \n            }\n        })\n\n    }\n    render(){\n        const {getFieldDecorator} = this.props.form;\n        const { value } = this.state;\n        return(\n           <Form onSubmit={this.handlerSubmit}>\n                <Form.Item label=\"Nombre\">\n                    {getFieldDecorator('name',{\n                        initialValue:this.state.datos.nombre,\n                        rules:[\n                            {\n                                required: true,\n                                message:'El Nombre del Medicamento es Requerido',\n                            },\n                        ],\n                    })(<Input \n                        placeholder=\"Nombre\" />)}\n                </Form.Item>\n                <Form.Item label=\"Formula\">\n                    {getFieldDecorator('formule',{\n                        initialValue:this.state.datos.formula,\n                        rules:[\n                            {\n                                required:true,\n                                message:\"Se Requiere la Formula de la Medicina\"\n                            }\n                        ]\n                    })(<Input \n                        placeholder=\"Formula\" />)}\n                </Form.Item>\n                <Form.Item  label=\"Descripcion\" >\n                    {getFieldDecorator('description',{\n                        setFieldsValue:value,\n                        initialValue:this.state.datos.descripcion,\n                        rules:[{\n                            required:true,\n                            message:\"Se Requiere una Descripcion del medicamento\"}]\n\n                    })(<Input.TextArea \n                         placeholder=\"Descripcion\"\n                         onChange={this.onChange}\n                          />)}\n                </Form.Item>\n                <Form.Item  label=\"Dosis\" >\n                    {getFieldDecorator('docis',{\n                        initialValue:this.state.datos.docis,\n                        setFieldsValue:value,\n                        rules:[{required:true,\n                            message:\"Se Requiere una la docis del medicamento\"}]\n\n                    })(<Input.TextArea \n                        placeholder=\"Docis\"\n                         onChange={this.onChange}\n                         />)}\n                </Form.Item>\n                <Form.Item label=\"Cantidad Disponible\" >\n                        {getFieldDecorator('stock',{\n                            initialValue:this.state.datos.stock,\n                            \n                        })(\n                            <InputNumber min={0} max={500} />\n                        )}\n                </Form.Item>\n                <Form.Item label=\"Laboratorio\">\n                    {getFieldDecorator('laboratorio',{\n                        initialValue:this.state.datos.laboratorio,\n                        rules:[{\n                            required:true,\n                            message:\"El Laboratorio es Requerido\"\n                        }]\n                    })(<Input \n                        placeholder=\"Laboratorio\"\n                    />)}\n                </Form.Item>\n                <Form.Item >\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Registrar\n                            </Button>\n                </Form.Item>\n           </Form>\n        )\n    }\n}\n\nexport default UpdateMedicineForm = Form.create({name:'update'})(UpdateMedicineForm);","import React from 'react'\nimport {Layout,Row,Col} from 'antd'\nimport {useParams} from 'react-router-dom';\nimport Head2 from '../components/Head2';\nimport Swal from 'sweetalert2'\nimport UpdateMedicineForm from '../components/Forms/UpdateMedicineForm';\nimport { UPDATE_MEDICINE } from '../Querys/Query';\nimport { useMutation } from '@apollo/react-hooks';\n\n//Constantes \nconst {Header,Content} = Layout\nconst UpdateMedicine = (props)=>{\n    const {id} = useParams()\n    const [update] = useMutation(UPDATE_MEDICINE,{\n        onCompleted(data){\n            Swal.fire({\n                title:\"Exito\",\n                text:\"Se a Actualizado la medicina Exitosamente\",\n                icon:\"success\"\n            }).then((result)=>{\n              if(result.value){\n                  props.history.push(`/home/medicines`)\n              }\n            })\n        },\n        onError(data){\n            console.log(data)\n        }\n    })\n    var logout = ()=>{\n        localStorage.clear()\n        props.history.push(\"/\")\n    }\n\n    return(\n        <div>\n            <Header style={{ background: '#fff', padding: 0 }} >\n                <Head2 subtitle=\"Actualizar Medicina\" function={logout} />\n            </Header>\n            <Content style={{ margin: '24px 16px 0' }} >\n                <div style={{ padding: 24, background: '#fff', minHeight: 360 }} >\n                    <Row>\n                        <Col span={19} > \n                            <UpdateMedicineForm mutation={update} id={id}  />\n                        </Col>\n                    </Row>\n                </div>\n            </Content>\n        </div>\n    )\n}\n\nexport default UpdateMedicine","import React from 'react'\nimport { url } from '../../variables/os';\nimport reqwest from 'reqwest'\nimport {Card,Descriptions} from 'antd'\nconst token = localStorage.getItem('token')\nclass CardMedicine extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            id:this.props.id,\n            datos:[],\n            nombre:\"\"\n        }\n    }\n    componentDidMount(){\n        this.fetchData(res=>{\n            const nombre = res.data.medicina.nombre.toUpperCase()\n            this.setState({\n                datos:res.data.medicina,\n                nombre\n            })\n            \n        })\n    }\n    fetchData= callback=>{\n        reqwest({\n            url,\n            method:'post',\n            type:\"json\",\n            data:{\n                query:`\n                query{\n                    medicina(id:${this.state.id}){\n                        nombre,\n                        formula,\n                        laboratorio,\n                        disponible,\n                        docis,\n                        stock,\n                        descripcion\n                      }\n                }`\n            },\n            headers:{\n                Authorization:`JWT ${token}`\n            },\n            success: res => {\n                callback(res);\n              },\n\n        })\n    }\n    render(){\n        return(\n            <div>\n                <Card title={this.state.nombre} >\n                    <Descriptions title=\"Informacion\" bordered >\n                        <Descriptions.Item label=\"Laboratorio\" >{this.state.datos.laboratorio}</Descriptions.Item>\n                        <Descriptions.Item  label=\"Cantidad Disponible\" span={3}  >{this.state.datos.disponible?this.state.datos.stock:`No se ecuentra disponible`}</Descriptions.Item>\n                        <Descriptions.Item label=\"Descripcion\" span={3} >{this.state.datos.descripcion}</Descriptions.Item>\n                        <Descriptions.Item label=\"Formula\"> {this.state.datos.formula} </Descriptions.Item>\n                        <Descriptions.Item label=\"dosis\" > {this.state.datos.docis} </Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </div>\n        )\n    }\n}\nexport default CardMedicine","import React from 'react'\nimport {Layout} from 'antd';\nimport Head2 from './../components/Head2';\nimport {useParams} from 'react-router-dom'\nimport CardMedicine from '../components/card/CardMedicine';\nconst {Header,Content} = Layout\nconst MedicinView = (props)=>{\n    var logout = ()=>{\n        localStorage.clear()\n        props.history.push(\"/\")\n    }\n    const {id} = useParams()\n    return(\n        <div>\n        <Header className=\"header\" style={{ background: '#fff', padding: 0 }}> \n            <Head2 subtitle=\"Medicina\" function={logout} />\n        </Header>\n        <Content style={{ margin: '24px 16px 0' }}>\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n               <CardMedicine id={id} />\n            </div>\n        </Content>\n    </div>\n    )\n}\nexport default MedicinView","import React from 'react'\nimport { url } from '../../variables/os';\nimport reqwest  from 'reqwest'\nimport { List, Button, Icon, Modal, Row, Input } from 'antd';\nimport IconText from '../simplecomponents/IconText';\n\n\nconst {Search} = Input\nconst token = localStorage.getItem('token')\nclass LispE extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n            datos:[],\n            loading:true,\n            visible:false\n        }\n        \n    }\n\n    showModal = ()=>{\n        this.setState({\n            visible:true\n        });\n    };\n\n    \n    handlerOk = e =>{\n        \n        this.setState({\n            visible:false\n        })\n    }\n  \n\n    handlerCancel= e =>{\n       \n        this.setState({\n                visible:false,\n               \n        });\n    };\n    componentDidMount(){\n        this.fetchData(res=>{\n            console.log(res)\n            this.setState({\n                datos:res.data.expedients,\n                loading:false\n            })\n        })\n        \n    }\n    fetchData = cb=>{\n        reqwest({\n            url,\n            method:'post',\n            type:\"json\",\n            data:{\n                query:`\n                query{\n                    expedients{\n                        id,\n                        hoara,\n                        date,\n                         pacientes{\n                            nombre,\n                            apellidos\n                            curp,\n                            }\n                        \n                      }\n                }`\n            },\n            headers:{\n                Authorization:`JWT ${token}`\n            },\n            success: res => {\n                cb(res);\n              },\n\n        })\n        \n    }\n    render(){\n        return(\n            <div>\n                <List \n                    footer={\n                        <Button onClick={this.showModal} > <Icon type=\"search\" /> Buscar</Button>\n                    }\n                    loading={this.state.loading}\n                    dataSource={this.state.datos}\n                    pagination={{\n                    onChange:page=>{\n                        \n                    },\n                    pageSize:10,\n                   \n                    }}\n                    renderItem ={item=>(\n                        <div>\n                            <List.Item\n                                key={item.id}\n                                \n                                actions={[\n                                    <IconText  direccion=\"/home/info-expedient\"  id={item.id} type=\"profile\" color=\"#52c41a\" theme=\"twoTone\" />,\n                                        <IconText direccion=\"/home/edit-expedient\" id={item.id} type=\"edit\" theme=\"twoTone\"  color=\"#52c41a\" />,\n                                        \n                                ]}>\n                                    <List.Item.Meta\n                                    title={item.date}\n                                    description={`Fecha ${item.date}  Hora ${item.hoara}`}\n                                    />\n                            </List.Item>\n                            <Modal\n                                title=\"Buscador\"\n                                visible={this.state.visible}\n                                onOk = {this.handlerOk}\n                                onCancel = {this.handlerCancel} >\n                                <Row>\n                                <Search placeholder=\"Buscar\" onSearch={value =>{\n                                    this.setState({\n                                        loading:true\n                                    })\n\n                                    this.props.query({variables:{por:value}})\n                                    \n                                    setTimeout(()=>{\n                                        \n                                        this.setState({\n                                            loading:false,\n                                            datos:this.props.data.busquedae[0].expedienteSet,\n                                            visible:false\n                                        })\n                                    },500)\n                                }} enterButton />\n                                </Row>\n\n                                </Modal>\n                        </div>\n                    )}\n                />\n            </div>\n        )\n    }\n}\n\nexport default LispE","import React from 'react'\n\nimport {Layout} from 'antd';\nimport Head2 from './../components/Head2';\nimport LispE from '../components/List/LispE';\nimport { SEARCH_EXPEDIENT } from '../Querys/Query';\nimport { useLazyQuery } from '@apollo/react-hooks';\n\nconst {Header,Content} = Layout;\n\nconst ViewEps = (props)=>{\n    var logout = ()=>{\n        localStorage.clear()\n        props.history.push(\"/\")\n    }\n    const [search,{data}] = useLazyQuery(SEARCH_EXPEDIENT)\n    \n    return (\n        <div>\n        <Header className=\"header\" style={{ background: '#fff', padding: 0 }}> \n            <Head2 subtitle=\"Expedientes\" function={logout} />\n        </Header>\n        <Content style={{ margin: '24px 16px 0' }}>\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n               <LispE query={search} data={data} />\n            </div>\n        </Content>\n    </div>\n    )\n}\nexport default ViewEps","import React from 'react'\nimport {Layout} from 'antd';\nimport Head2 from '../components/Head2';\nimport {useParams} from 'react-router-dom'\n\nconst {Header,Content} = Layout\n\nconst Familiar =(props)=>{\n    var logout = ()=>{\n        localStorage.clear()\n        props.history.push(\"/\")\n    }\n    return(\n        <div>\n            <Header  style={{ background: '#fff', padding: 0 }} >\n                <Head2 subtitle=\"Familiar\" function={logout} />\n            </Header>\n            <Content style={{ margin: '24px 16px 0' }} >\n                <div style={{ padding: 24, background: '#fff', minHeight: 360 }} >\n                    \n                    \n                </div>\n            </Content>\n        </div>\n    )\n}\nexport default Familiar","import React from 'react';\nimport { Layout, Menu,  Icon } from 'antd';\nimport Home from './Home';\nimport {Switch as Case,Route,Link} from 'react-router-dom';\nimport {ProtectedRoutes} from '../routes/ProtectedRoutes';\nimport AddPacienteView from './AddPacienteView';\nimport ListPaciente from './ListPaciente';\nimport ExpedientePaciente  from './ExpedientePaciente';\nimport Error404 from './Error404';\nimport UpdatePacienteView from './UpdatePacienteview';\nimport InfoPaciente from './InfoPaciente';\nimport InfoExpediente from './InfoExpediente';\nimport FormNotesView from './FomrNotesView';\nimport NotasE from './NotasE';\nimport EditExpedient from './EditExpedient';\nimport NoteEView from './NoteEView';\nimport EditNoteEView from './EditNoteEView';\nimport MedicineView from './MedicineView';\nimport Medicineslist from './Medicineslist';\nimport UpdateMedicine from './UpdateMedicine';\nimport MedicinView from './MedicinView';\nimport ViewEps from './ViewEps';\nimport Familiar from './Familiar';\n\n\nconst {Sider,Footer } = Layout;\nconst {SubMenu} = Menu;\n\n\n\n\n\nfunction Nav(props) {\n\n  var home = ()=>{\n   \n    props.history.push(\"/home\")\n}\n  \n      return (\n        <Layout className=\"layout\" style={{ minHeight: '100vh' }} >\n         <Sider \n          style={{background:\"\"}}\n          breakpoint=\"lg\"\n          collapsedWidth=\"80\"\n          onBreakpoint={broken=>{\n            \n          }}\n          onCollapse={(collapse,type)=>{\n            \n          }}>\n            <div onClick={home} className=\"logo\"/>\n            <Menu\n              theme=\"dark\"\n              mode=\"inline\"\n              defaultSelectedKeys={['1']}>\n              <Menu.Item><Link to=\"/home\"> Home </Link></Menu.Item>\n              <SubMenu\n                key=\"1\"\n                title={\n                  <span>\n                    <Icon type=\"user\"/>\n                    <span className=\"nav-text\">Paciente</span>\n                  </span>\n                }>\n                <Menu.Item><Link to=\"/home/add-paciente\">Crear Paciente</Link></Menu.Item>\n                <Menu.Item><Link to=\"/home/listpaciente\" >Listar Pacientes</Link></Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key=\"2\"\n                title={\n                  <span>\n                    <Icon type=\"profile\" />\n                    <span className=\"nav-text\">Expedientes</span>\n                  </span>\n                }>\n                <Menu.Item>\n                 <Link to=\"/home/expedients\" >Listar Expedientes</Link>\n                </Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key=\"3\"\n                title={\n                  <span>\n                    <Icon type=\"user\"/>\n                    <span className=\"nav-text\">Medicinas</span>\n                  </span>\n                }>\n                <Menu.Item><Link to=\"/home/add-paciente\">Crear Medicinas</Link></Menu.Item>\n                <Menu.Item><Link to=\"/home/listpaciente\" >Listar Medicinas</Link></Menu.Item>\n              </SubMenu>\n            </Menu>\n         </Sider>\n         <Layout className=\"layout\">\n           <Case>\n                <ProtectedRoutes exact path=\"/home\" component={Home}/>\n                {/*Rutas de Pacientes*/}\n                <ProtectedRoutes exact path=\"/home/add-paciente\" component={AddPacienteView}/>\n                <ProtectedRoutes exact path=\"/home/listpaciente\" component={ListPaciente} />\n                <ProtectedRoutes exact path=\"/home/update-paciente/:id\" component={UpdatePacienteView} />\n                <ProtectedRoutes exact path=\"/home/info-paciente/:id\" component={InfoPaciente} />\n                {/* Rutas Expedientes*/}\n                <ProtectedRoutes exact path=\"/home/expedients\" component={ViewEps}/>\n                <ProtectedRoutes exact path=\"/home/expedient-paciente/:id\" component={ExpedientePaciente} />\n                <ProtectedRoutes exact path=\"/home/info-expedient/:id\" component={InfoExpediente} />\n                <ProtectedRoutes exact path=\"/home/edit-expedient/:id\" component={EditExpedient} />\n                {/* Rutas de Notas */}\n                <ProtectedRoutes exact path=\"/home/notes-expedient/:id\" component={NotasE} />\n                <ProtectedRoutes exact path=\"/home/create-note-expedient/:id\" component={FormNotesView} />\n                <ProtectedRoutes exact path=\"/home/note-expedient/:id\" component={NoteEView} />\n                <ProtectedRoutes exact path=\"/home/note-expedient-edit/:id\" component={EditNoteEView} />\n                {/* Rutas de Medicianas */}\n                <ProtectedRoutes exact path=\"/home/medicine\" component={MedicineView} />\n                <ProtectedRoutes exact path= \"/home/medicines\" component={Medicineslist}/>\n                <ProtectedRoutes exact path=\"/home/medicines-update/:id\" component={UpdateMedicine} />\n                <ProtectedRoutes exact path=\"/home/medidine-info/:id\" component={MedicinView} />\n\n                {/* Rutas de Familiar*/}\n                <ProtectedRoutes exact path =\"/home/create-familiar/:id\" component={Familiar} />\n                \n                <Route path=\"/home/*\" component={Error404} />\n           </Case>\n          <Footer style={{ textAlign: 'center' }}>Bonifacio Juarez Ceja ©</Footer>\n         </Layout>\n        </Layout>\n\n    );\n    \n}\n\nexport default Nav\n","import React from 'react';\nimport {Route,Redirect} from 'react-router-dom';\nlet login=false\nexport const PublicRoute = ({component: Component,...rest}) =>{\n    if(localStorage.getItem('session')){\n        login=true\n    }\n    return (\n        <Route {...rest} render={\n            (props)=>{\n                return(\n                (login)? <Redirect to={{\n                    pathname:\"/home\",\n                    state:{\n                        from:props.location\n                    }\n                }} />\n                :<Component {...props}/>\n                )\n            }\n        } />\n    )\n}","import React, { Component } from 'react';\nimport './css/App.css';\nimport LoginView from './views/LoginView';\nimport {Switch,Route} from 'react-router-dom';\nimport Nav from './views/Nav';\nimport {ProtectedRoutes} from './routes/ProtectedRoutes';\nimport {PublicRoute} from './routes/PublicRoute';\nimport Error404 from './views/Error404';\n\nclass Session extends Component{\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem('token');\n    if(token){\n      this.props.mutation({variables:{token}})  \n    }\n    \n  }\n    render(){\n      return (\n      <div>\n        \n        <Switch>\n          <PublicRoute  exact path=\"/\" component ={LoginView}/>\n          <PublicRoute path=\"/login\" component = {LoginView}/>\n          <ProtectedRoutes path=\"/home\" component =  {Nav} />\n          <Route path=\"*\" component={Error404} />\n          \n        </Switch>\n      </div>\n      );\n    }\n}\n\nexport default Session;\n","import React from 'react';\nimport Session from './Session';\nimport {VERIFY_TOKEN} from './Querys/Query';\nimport {useMutation} from '@apollo/react-hooks';\n\n\nconst  App = (props)=>{\n   \n    const [VERIFY] = useMutation(VERIFY_TOKEN,{\n        onError(err){\n            localStorage.removeItem('session')\n        }\n    });\n    return (\n        <Session mutation={VERIFY} />\n    );\n}\n\nexport default App","//Elementos que estaban desde que se genero el proyecto.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './global/App';\n//importaciones de Apollo\nimport ApolloClient from \"apollo-client\";\nimport {InMemoryCache}  from 'apollo-boost';\nimport {createHttpLink } from 'apollo-link-http';\nimport { ApolloLink } from \"apollo-link\";\nimport {ApolloProvider} from '@apollo/react-hooks';\n//Importaciones de antd\nimport 'antd/dist/antd.css';\n//Importaciones del Router dom\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport { url } from './global/variables/os';\n\n///Creacion de un objeto con la url\nconst httplink = new createHttpLink({ uri:url}) \n// creacion del link para graphql \nconst authLink = new ApolloLink((operation,forward)=>{\n\n   const token = localStorage.getItem('token')\n   operation.setContext({\n      //asignando los header\n      headers:{\n         authorization: token ? `JWT ${token}` : \"\",\n      }\n   })\n   return forward(operation)\n})\n\n//Creacion del client\nconst client = new ApolloClient({\n   link:authLink.concat(httplink),\n   cache:new InMemoryCache()\n})\n\n\nReactDOM.render(<ApolloProvider client={client}><Router>\n<App /></Router></ApolloProvider>, document.getElementById('root'));\n\n"],"sourceRoot":""}